openapi: 3.0.1
info:
  title: Flowable REST API
  description: "# flowable / flowəb(ə)l /\r\n\r\n- a compact and highly efficient\
    \ workflow and Business Process Management (BPM) platform for developers, system\
    \ admins and business users.\r\n- a lightning fast, tried and tested BPMN 2 process\
    \ engine written in Java. It is Apache 2.0 licensed open source, with a committed\
    \ community.\r\n- can run embedded in a Java application, or as a service on a\
    \ server, a cluster, and in the cloud. It integrates perfectly with Spring. With\
    \ a rich Java and REST API, it is the ideal engine for orchestrating human or\
    \ system activities."
  contact:
    name: Flowable
    url: http://www.flowable.org/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
- url: /flowable-rest/service
tags:
- name: Activity Instances
- name: Batch parts
- name: Batches
- name: Database tables
- name: Deployment
- name: Engine
- name: EngineProperties
- name: Event subscriptions
- name: Executions
- name: Forms
- name: Groups
- name: Historic Task Log Entries
- name: History
- name: History Process
- name: History Task
- name: Jobs
- name: Manage History Process Instances
- name: Models
- name: Process Definitions
- name: Process Instance Identity Links
- name: Process Instance Variables
- name: Process Instances
- name: Properties
- name: Query
- name: Runtime
- name: Task Attachments
- name: Task Comments
- name: Task Identity Links
- name: Task Variables
- name: Tasks
- name: Users
paths:
  /form/form-data:
    get:
      tags:
      - Forms
      summary: Get form data
      operationId: getFormData
      parameters:
      - name: taskId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates that form data could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDataResponse'
        "404":
          description: Indicates that form data could not be found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Forms
      summary: Submit task form data
      operationId: submitForm
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubmitFormRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the form data was submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessInstanceResponse'
        "204":
          description: "If TaskId has been provided, Indicates request was successful\
            \ and the form data was submitted. Returns empty"
          content: {}
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /history/historic-activity-instances:
    get:
      tags:
      - History
      summary: List historic activity instances
      operationId: listHistoricActivityInstances
      parameters:
      - name: activityId
        in: query
        description: An id of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityInstanceId
        in: query
        description: An id of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityName
        in: query
        description: The name of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityType
        in: query
        description: The element type of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executionId
        in: query
        description: The execution id of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: finished
        in: query
        description: Indication if the historic activity instance is finished.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: taskAssignee
        in: query
        description: The assignee of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: The process instance id of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: The process definition id of the historic activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return instances with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return instances with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns instances without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Indicates that historic activity instances could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricActivityInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-detail:
    get:
      tags:
      - History
      summary: Get historic detail
      operationId: listHistoricDetails
      parameters:
      - name: id
        in: query
        description: The id of the historic detail.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: The process instance id of the historic detail.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executionId
        in: query
        description: The execution id of the historic detail.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityInstanceId
        in: query
        description: The activity instance id of the historic detail.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskId
        in: query
        description: The task id of the historic detail.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: selectOnlyFormProperties
        in: query
        description: Indication to only return form properties in the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: selectOnlyVariableUpdates
        in: query
        description: Indication to only return variable updates in the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Indicates that historic detail could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricDetailResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-detail/{detailId}/data:
    get:
      tags:
      - History
      summary: Get the binary data for a historic detail variable
      description: "The response body contains the binary value of the variable. When\
        \ the variable is of type binary, the content-type of the response is set\
        \ to application/octet-stream, regardless of the content of the variable or\
        \ the request accept-type header. In case of serializable, application/x-java-serialized-object\
        \ is used as content-type."
      operationId: getHistoricDetailVariableData
      parameters:
      - name: detailId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the historic detail instance was found and the requested
            variable data is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested historic detail instance was not found
            or the historic detail instance does not have a variable with the given
            name or the variable does not have a binary stream available. Status message
            provides additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-process-instances:
    get:
      tags:
      - History Process
      summary: List of historic process instances
      operationId: listHistoricProcessInstances
      parameters:
      - name: processInstanceId
        in: query
        description: An id of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceName
        in: query
        description: A name of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceNameLike
        in: query
        description: A name of the historic process instance used in a like query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceNameLikeIgnoreCase
        in: query
        description: A name of the historic process instance used in a like query
          ignoring case.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionKey
        in: query
        description: The process definition key of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: The process definition id of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionName
        in: query
        description: The process definition name of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionCategory
        in: query
        description: The process definition category of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionVersion
        in: query
        description: The process definition version of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deploymentId
        in: query
        description: The deployment id of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: businessKey
        in: query
        description: The business key of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: businessKeyLike
        in: query
        description: Only return instances with a businessKey like this key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activeActivityId
        in: query
        description: Only return instances which have an active activity instance
          with the provided activity id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: involvedUser
        in: query
        description: An involved user of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: finished
        in: query
        description: Indication if the historic process instance is finished.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: superProcessInstanceId
        in: query
        description: An optional parent process id of the historic process instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeSubprocesses
        in: query
        description: Return only historic process instances which are not sub processes.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: finishedAfter
        in: query
        description: Return only historic process instances that were finished after
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: finishedBefore
        in: query
        description: Return only historic process instances that were finished before
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: startedAfter
        in: query
        description: Return only historic process instances that were started after
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: startedBefore
        in: query
        description: Return only historic process instances that were started before
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: startedBy
        in: query
        description: Return only historic process instances that were started by this
          user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeProcessVariables
        in: query
        description: An indication if the historic process instance variables should
          be returned as well.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: callbackId
        in: query
        description: Only return instances with the given callbackId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: callbackType
        in: query
        description: Only return instances with the given callbackType.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutCallbackId
        in: query
        description: Only return instances that do not have a callbackId.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tenantId
        in: query
        description: Only return instances with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return instances with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: |
          If true, only returns instances without a tenantId set. If false, the withoutTenantId parameter is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Indicates that historic process instances could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricProcessInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-process-instances/delete:
    post:
      tags:
      - Manage History Process Instances
      summary: Post action request to delete a bulk of historic process instances
      operationId: bulkDeleteHistoricProcessInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BulkDeleteInstancesRestActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the bulk of historic process instances was found
            and deleted. Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates at least one requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: bulkDeleteRestActionRequest
  /history/historic-process-instances/{processInstanceId}:
    get:
      tags:
      - History Process
      summary: Get a historic process instance
      operationId: getHistoricProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates that the historic process instances could be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricProcessInstanceResponse'
        "404":
          description: Indicates that the historic process instances could not be
            found.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - History Process
      summary: ' Delete a historic process instance'
      operationId: deleteHistoricProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates that the historic process instance was deleted.
          content: {}
        "404":
          description: Indicates that the historic process instance could not be found.
          content: {}
      security:
      - basicAuth: []
  /history/historic-process-instances/{processInstanceId}/comments:
    get:
      tags:
      - History Process
      summary: List comments on a historic process instance
      operationId: listHistoricProcessInstanceComments
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and the comments are
            returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
                x-content-type: application/json
        "404":
          description: Indicates that the historic process instance could not be found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - History Process
      summary: Create a new comment on a historic process instance
      description: "Parameter saveProcessInstanceId is optional, if true save process\
        \ instance id of task with comment."
      operationId: createComment
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CommentResponse'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        "201":
          description: Indicates the comment was created and the result is returned.
          content: {}
        "400":
          description: Indicates the comment is missing from the request.
          content: {}
        "404":
          description: Indicates that the historic process instance could not be found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /history/historic-process-instances/{processInstanceId}/comments/{commentId}:
    get:
      tags:
      - History Process
      summary: Get a comment on a historic process instance
      operationId: getComment
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the historic process instance and comment were found
            and the comment is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        "404":
          description: Indicates the requested historic process instance was not found
            or the historic process instance does not have a comment with the given
            ID.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - History Process
      summary: Delete a comment on a historic process instance
      operationId: deleteComment
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the historic process instance and comment were found
            and the comment is deleted. Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested historic process instance was not found
            or the historic process instance does not have a comment with the given
            ID.
          content: {}
      security:
      - basicAuth: []
  /history/historic-process-instances/{processInstanceId}/identitylinks:
    get:
      tags:
      - History Process
      summary: List identity links of a historic process instance
      operationId: listHistoricProcessInstanceIdentityLinks
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the identity links are
            returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricIdentityLinkResponse'
                x-content-type: application/json
        "404":
          description: Indicates the process instance could not be found..
          content: {}
      security:
      - basicAuth: []
  /history/historic-process-instances/{processInstanceId}/variables/{variableName}/data:
    get:
      tags:
      - History Process
      summary: Get the binary data for a historic process instance variable
      description: "The response body contains the binary value of the variable. When\
        \ the variable is of type binary, the content-type of the response is set\
        \ to application/octet-stream, regardless of the content of the variable or\
        \ the request accept-type header. In case of serializable, application/x-java-serialized-object\
        \ is used as content-type."
      operationId: getHistoricProcessInstanceVariableData
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and the requested
            variable data is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested process instance was not found or the
            process instance does not have a variable with the given name or the variable
            does not have a binary stream available. Status message provides additional
            information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-task-instances:
    get:
      tags:
      - History Task
      summary: List historic task instances
      operationId: listHistoricTaskInstances
      parameters:
      - name: taskId
        in: query
        description: An id of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: The process instance id of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceIdWithChildren
        in: query
        description: Selects the historic task instances for the process instance
          and its children.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: "If true, only returns historic task instances without a process\
          \ instance id set. If false, the withoutProcessInstanceId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: processDefinitionKey
        in: query
        description: The process definition key of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionKeyLike
        in: query
        description: "The process definition key of the historic task instance, which\
          \ matches the given value."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: The process definition id of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionName
        in: query
        description: The process definition name of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionNameLike
        in: query
        description: "The process definition name of the historic task instance, which\
          \ matches the given value."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processBusinessKey
        in: query
        description: The process instance business key of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processBusinessKeyLike
        in: query
        description: The process instance business key of the historic task instance
          that matches the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executionId
        in: query
        description: The execution id of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDefinitionKey
        in: query
        description: The task definition key for tasks part of a process
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDefinitionKeys
        in: query
        description: The task definition key for tasks part of a process
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskName
        in: query
        description: The task name of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskNameLike
        in: query
        description: The task name with like operator for the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDescription
        in: query
        description: The task description of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDescriptionLike
        in: query
        description: The task description with like operator for the historic task
          instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskCategory
        in: query
        description: "Select tasks with the given category. Note that this is the\
          \ task category, not the category of the process definition (namespace within\
          \ the BPMN Xml)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskCategoryIn
        in: query
        description: "Select tasks with the given categories. Note that this is the\
          \ task category, not the category of the process definition (namespace within\
          \ the BPMN Xml)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskCategoryNotIn
        in: query
        description: "Select tasks not assigned to the given categories. Note that\
          \ this is the task category, not the category of the process definition\
          \ (namespace within the BPMN Xml)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskWithoutCategory
        in: query
        description: "Select tasks with no category assigned. Note that this is the\
          \ task category, not the category of the process definition (namespace within\
          \ the BPMN Xml)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDeleteReason
        in: query
        description: The task delete reason of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDeleteReasonLike
        in: query
        description: The task delete reason with like operator for the historic task
          instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskAssignee
        in: query
        description: The assignee of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskAssigneeLike
        in: query
        description: The assignee with like operator for the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskOwner
        in: query
        description: The owner of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskOwnerLike
        in: query
        description: The owner with like operator for the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskInvolvedUser
        in: query
        description: An involved user of the historic task instance
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskCandidateGroup
        in: query
        description: Only return tasks that can be claimed by a user in the given
          group.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskPriority
        in: query
        description: The priority of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: finished
        in: query
        description: Indication if the historic task instance is finished.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: processFinished
        in: query
        description: Indication if the process instance of the historic task instance
          is finished.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: parentTaskId
        in: query
        description: An optional parent task id of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dueDate
        in: query
        description: Return only historic task instances that have a due date equal
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueDateAfter
        in: query
        description: Return only historic task instances that have a due date after
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueDateBefore
        in: query
        description: Return only historic task instances that have a due date before
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: withoutDueDate
        in: query
        description: "Return only historic task instances that have no due-date. When\
          \ false is provided as value, this parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: taskCompletedOn
        in: query
        description: Return only historic task instances that have been completed
          on this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: taskCompletedAfter
        in: query
        description: Return only historic task instances that have been completed
          after this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: taskCompletedBefore
        in: query
        description: Return only historic task instances that have been completed
          before this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: taskCreatedOn
        in: query
        description: Return only historic task instances that were created on this
          date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: taskCreatedBefore
        in: query
        description: Return only historic task instances that were created before
          this date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: taskCreatedAfter
        in: query
        description: Return only historic task instances that were created after this
          date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: includeTaskLocalVariables
        in: query
        description: An indication if the historic task instance local variables should
          be returned as well.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: includeProcessVariables
        in: query
        description: An indication if the historic task instance global variables
          should be returned as well.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scopeDefinitionId
        in: query
        description: Only return historic task instances with the given scopeDefinitionId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scopeId
        in: query
        description: Only return historic task instances with the given scopeId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutScopeId
        in: query
        description: "If true, only returns historic task instances without a scope\
          \ id set. If false, the withoutScopeId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scopeType
        in: query
        description: Only return historic task instances with the given scopeType.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: propagatedStageInstanceId
        in: query
        description: Only return tasks which have the given id as propagated stage
          instance id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return historic task instances with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return historic task instances with a tenantId like the
          given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns historic task instances without a tenantId\
          \ set. If false, the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Indicates that historic task instances could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricTaskInstanceResponse'
        "404":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-task-instances/{taskId}:
    get:
      tags:
      - History Task
      summary: Get a single historic task instance
      operationId: getTaskInstance
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates that the historic task instances could be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricTaskInstanceResponse'
        "404":
          description: Indicates that the historic task instances could not be found.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - History Task
      summary: Delete a historic task instance
      operationId: deleteTaskInstance
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates that the historic task instance was deleted.
          content: {}
        "404":
          description: Indicates that the historic task instance could not be found.
          content: {}
      security:
      - basicAuth: []
  /history/historic-task-instances/{taskId}/form:
    get:
      tags:
      - History Task
      summary: Get a historic task instance form
      operationId: getHistoricTaskForm
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the task form is returned
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /history/historic-task-instances/{taskId}/identitylinks:
    get:
      tags:
      - History Task
      summary: List identity links of a historic task instance
      operationId: listHistoricTaskInstanceIdentityLinks
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the identity links are
            returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricIdentityLinkResponse'
                x-content-type: application/json
        "404":
          description: Indicates the task instance could not be found.
          content: {}
      security:
      - basicAuth: []
  /history/historic-task-instances/{taskId}/variables/{variableName}/data:
    get:
      tags:
      - History
      summary: Get the binary data for a historic task instance variable
      description: "The response body contains the binary value of the variable. When\
        \ the variable is of type binary, the content-type of the response is set\
        \ to application/octet-stream, regardless of the content of the variable or\
        \ the request accept-type header. In case of serializable, application/x-java-serialized-object\
        \ is used as content-type."
      operationId: getHistoricTaskInstanceVariableData
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task instance was found and the requested variable
            data is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested task instance was not found or the
            process instance does not have a variable with the given name or the variable
            does not have a binary stream available. Status message provides additional
            information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-task-log-entries:
    get:
      tags:
      - History Task
      summary: List historic task log entries
      operationId: getHistoricTaskLogEntries
      parameters:
      - name: taskId
        in: query
        description: An id of the historic task instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of the log entry.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: The user who produced the task change.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: The process instance id of the historic task log entry.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: The process definition id of the historic task log entry.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scopeId
        in: query
        description: Only return historic task log entries with the given scopeId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scopeDefinitionId
        in: query
        description: Only return historic task log entries with the given scopeDefinitionId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subScopeId
        in: query
        description: Only return historic task log entries with the given subScopeId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scopeType
        in: query
        description: Only return historic task log entries with the given scopeType.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from
        in: query
        description: Return task log entries starting from a date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: Return task log entries up to a date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: tenantId
        in: query
        description: Only return historic task log entries with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fromLogNumber
        in: query
        description: Return task log entries starting from a log number
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: toLogNumber
        in: query
        description: Return task log entries up to specific a log number
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates that historic task log entries could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricTaskLogEntryResponse'
        "404":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-variable-instances:
    get:
      tags:
      - History
      summary: List of historic variable instances
      operationId: listHistoricVariableInstances
      parameters:
      - name: processInstanceId
        in: query
        description: The process instance id of the historic variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskId
        in: query
        description: The task id of the historic variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeTaskVariables
        in: query
        description: Indication to exclude the task variables from the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: excludeLocalVariables
        in: query
        description: Indication to exclude local variables or not.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: variableName
        in: query
        description: The variable name of the historic variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: variableNameLike
        in: query
        description: The variable name using the like operator for the historic variable
          instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates that historic variable instances could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricVariableInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /history/historic-variable-instances/{varInstanceId}/data:
    get:
      tags:
      - History
      summary: Get the binary data for a historic task instance variable
      description: "The response body contains the binary value of the variable. When\
        \ the variable is of type binary, the content-type of the response is set\
        \ to application/octet-stream, regardless of the content of the variable or\
        \ the request accept-type header. In case of serializable, application/x-java-serialized-object\
        \ is used as content-type."
      operationId: getHistoricInstanceVariableData
      parameters:
      - name: varInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the variable instance was found and the requested
            variable data is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested variable instance was not found or
            the variable instance does not have a variable with the given name or
            the variable does not have a binary stream available. Status message provides
            additional information.
          content: {}
      security:
      - basicAuth: []
  /identity/groups:
    get:
      tags:
      - Groups
      summary: List groups
      operationId: listGroups
      parameters:
      - name: id
        in: query
        description: Only return group with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Only return groups with the given name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Only return groups with the given type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLike
        in: query
        description: Only return groups with a name like the given value. Use % as
          wildcard-character.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: member
        in: query
        description: Only return groups which have a member with the given username.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: potentialStarter
        in: query
        description: Only return groups which members are potential starters for a
          process-definition with the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - name
          - type
      responses:
        "200":
          description: Indicates the requested groups were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseGroupResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - Groups
      summary: Create a group
      operationId: createGroup
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        "201":
          description: Indicates the group was created.
          content: {}
        "400":
          description: Indicates the id of the group was missing.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /identity/groups/{groupId}:
    get:
      tags:
      - Groups
      summary: Get a single group
      operationId: getGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the group exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        "404":
          description: Indicates the requested group does not exist.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Groups
      summary: Update a group
      description: "All request values are optional. For example, you can only include\
        \ the name attribute in the request body JSON-object, only updating the name\
        \ of the group, leaving all other fields unaffected. When an attribute is\
        \ explicitly included and is set to null, the group-value will be updated\
        \ to null."
      operationId: updateGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: false
      responses:
        "200":
          description: Indicates the group was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        "404":
          description: Indicates the requested group was not found.
          content: {}
        "409":
          description: Indicates the requested group was updated simultaneously.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Groups
      summary: Delete a group
      operationId: deleteGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the group was found and  has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested group does not exist.
          content: {}
      security:
      - basicAuth: []
  /identity/groups/{groupId}/members:
    post:
      tags:
      - Groups
      summary: Add a member to a group
      operationId: createMembership
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MembershipRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        "201":
          description: Indicates the group was found and the member has been added.
          content: {}
        "400":
          description: Indicates the userId was not included in the request body.
          content: {}
        "404":
          description: Indicates the requested group was not found.
          content: {}
        "409":
          description: Indicates the requested user is already a member of the group.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /identity/groups/{groupId}/members/{userId}:
    delete:
      tags:
      - Groups
      summary: Delete a member from a group
      operationId: deleteMembership
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the group was found and the member has been deleted.
            The response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested group was not found or that the user
            is not a member of the group. The status description contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
  /identity/users:
    get:
      tags:
      - Users
      summary: List users
      operationId: listUsers
      parameters:
      - name: id
        in: query
        description: Only return group with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: firstName
        in: query
        description: Only return users with the given firstname
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: Only return users with the given lastname
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: displayName
        in: query
        description: Only return users with the given displayName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: Only return users with the given email
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: firstNameLike
        in: query
        description: Only return userswith a firstname like the given value. Use %
          as wildcard-character.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastNameLike
        in: query
        description: Only return users with a lastname like the given value. Use %
          as wildcard-character.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: displayNameLike
        in: query
        description: Only return users with a displayName like the given value. Use
          % as wildcard-character.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: emailLike
        in: query
        description: Only return users with an email like the given value. Use % as
          wildcard-character.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: memberOfGroup
        in: query
        description: Only return users which are a member of the given group.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return users which are a members of the given tenant.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: potentialStarter
        in: query
        description: Only return users  which members are potential starters for a
          process-definition with the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - firstName
          - lastname
          - email
          - displayName
      responses:
        "200":
          description: Indicates the group exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseUserResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - Users
      summary: Create a user
      operationId: createUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "201":
          description: Indicates the user was created.
          content: {}
        "400":
          description: Indicates the id of the user was missing.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /identity/users/{userId}:
    get:
      tags:
      - Users
      summary: Get a single user
      operationId: getUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the user exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "404":
          description: Indicates the requested user does not exist.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Users
      summary: Update a user
      description: "All request values are optional. For example, you can only include\
        \ the firstName attribute in the request body JSON-object, only updating the\
        \ firstName of the user, leaving all other fields unaffected. When an attribute\
        \ is explicitly included and is set to null, the user-value will be updated\
        \ to null. Example: {\"firstName\" : null} will clear the firstName of the\
        \ user)."
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: false
      responses:
        "200":
          description: Indicates the user was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "404":
          description: Indicates the requested user was not found.
          content: {}
        "409":
          description: Indicates the requested user was updated simultaneously.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Users
      summary: Delete a user
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the user was found and  has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested user was not found.
          content: {}
      security:
      - basicAuth: []
  /identity/users/{userId}/info:
    get:
      tags:
      - Users
      summary: List user’s info
      operationId: listUserInfo
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the user was found and list of info (key and url)
            is returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfoResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested user was not found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Users
      summary: Create a new user’s info entry
      operationId: createUserInfo
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserInfoRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
        "201":
          description: Indicates the user was found and the info has been created.
          content: {}
        "400":
          description: Indicates the key or value was missing from the request body.
            Status description contains additional information about the error.
          content: {}
        "404":
          description: Indicates the requested user was not found.
          content: {}
        "409":
          description: "Indicates there is already an info-entry with the given key\
            \ for the user, update the resource instance (PUT)."
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /identity/users/{userId}/info/{key}:
    get:
      tags:
      - Users
      summary: Get a user’s info
      operationId: getUserInfo
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the user was found and the user has info for the
            given key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
        "404":
          description: Indicates the requested user was not found or the user does
            ot have info for the given key. Status description contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Users
      summary: Update a user’s info
      operationId: updateUserInfo
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserInfoRequest'
        required: false
      responses:
        "200":
          description: Indicates the user was found and the info has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
        "400":
          description: Indicates the value was missing from the request body.
          content: {}
        "404":
          description: Indicates the requested user was not found or the user does
            not have info for the given key. Status description contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Users
      summary: Delete a user’s info
      operationId: deleteUserInfo
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: key
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the user was found and the info for the given key
            has been deleted. Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested user was not found or the user does
            not have info for the given key. Status description contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
  /identity/users/{userId}/picture:
    get:
      tags:
      - Users
      summary: Get a user’s picture
      description: "The response body contains the raw picture data, representing\
        \ the user’s picture. The Content-type of the response corresponds to the\
        \ mimeType that was set when creating the picture."
      operationId: getUserPicture
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Indicates the user was found and has a picture, which is returned\
            \ in the body."
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested user was not found or the user does
            not have a profile picture. Status-description contains additional information
            about the error.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Users
      summary: Updating a user’s picture
      description: |-
        The request should be of type multipart/form-data. There should be a single file-part included with the binary value of the picture. On top of that, the following additional form-fields can be present:

        mimeType: Optional mime-type for the uploaded picture. If omitted, the default of image/jpeg is used as a mime-type for the picture.
      operationId: updateUserPicture
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/userId_picture_body'
        required: true
      responses:
        "204":
          description: Indicates the user was found and the picture has been updated.
            The response-body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested user was not found.
          content: {}
      security:
      - basicAuth: []
  /management/batch-parts/{batchPartId}:
    get:
      tags:
      - Batch parts
      summary: Get a single batch part
      operationId: getBatchPart
      parameters:
      - name: batchPartId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the batch part exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPartResponse'
        "404":
          description: Indicates the requested batch part does not exist.
          content: {}
      security:
      - basicAuth: []
  /management/batch-parts/{batchPartId}/batch-part-document:
    get:
      tags:
      - Batches
      summary: Get the batch part document
      operationId: getBatchPartDocument
      parameters:
      - name: batchPartId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested batch part was found and the batch
            part document has been returned. The response contains the raw batch part
            document and always has a Content-type of application/json.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "404":
          description: Indicates the requested batch part was not found or the job
            does not have a batch part document. Status-description contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
  /management/batches:
    get:
      tags:
      - Batches
      summary: List batches
      operationId: listBatches
      parameters:
      - name: id
        in: query
        description: Only return batch with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: batchType
        in: query
        description: Only return batches for the given type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: searchKey
        in: query
        description: Only return batches for the given search key
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: searchKey2
        in: query
        description: Only return batches for the given search key2
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createTimeBefore
        in: query
        description: Only return batches created before the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: createTimeAfter
        in: query
        description: Only batches batches created after the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: completeTimeBefore
        in: query
        description: Only return batches completed before the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: completeTimeAfter
        in: query
        description: Only batches batches completed after the given date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: status
        in: query
        description: Only return batches for the given status
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return batches for the given tenant id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return batches like given search key
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns batches without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Indicates the requested batches were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseBatchResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter.
            Status description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /management/batches/{batchId}:
    get:
      tags:
      - Batches
      summary: Get a single batch
      operationId: getBatch
      parameters:
      - name: batchId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the batch exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
        "404":
          description: Indicates the requested batch does not exist.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Batches
      summary: Delete a batch
      operationId: deleteBatch
      parameters:
      - name: batchId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the batch was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested batch was not found.
          content: {}
      security:
      - basicAuth: []
  /management/batches/{batchId}/batch-document:
    get:
      tags:
      - Batches
      summary: Get the batch document
      operationId: getBatchDocument
      parameters:
      - name: batchId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested batch was found and the batch document
            has been returned. The response contains the raw batch document and always
            has a Content-type of application/json.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "404":
          description: Indicates the requested batch was not found or the job does
            not have a batch document. Status-description contains additional information
            about the error.
          content: {}
      security:
      - basicAuth: []
  /management/batches/{batchId}/batch-parts:
    get:
      tags:
      - Batches
      summary: List batch parts
      operationId: listBatchesPart
      parameters:
      - name: batchId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: query
        description: Only return batch parts for the given status
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested batch parts were returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchPartResponse'
                x-content-type: application/json
        "400":
          description: Indicates an illegal value has been used in a url query parameter.
            Status description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /management/deadletter-jobs:
    get:
      tags:
      - Jobs
      summary: List deadletter jobs
      operationId: listDeadLetterJobs
      parameters:
      - name: id
        in: query
        description: Only return job with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return jobs part of a process with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: "If true, only returns jobs without a process instance id set.\
          \ If false, the withoutProcessInstanceId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: executionId
        in: query
        description: Only return jobs part of an execution with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return jobs with the given process definition id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementId
        in: query
        description: Only return jobs with the given element id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementName
        in: query
        description: Only return jobs with the given element name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executable
        in: query
        description: "If true, only return jobs which are executable. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: timersOnly
        in: query
        description: "If true, only return jobs which are timers. If false, this parameter\
          \ is ignored. Cannot be used together with 'messagesOnly'."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: messagesOnly
        in: query
        description: "If true, only return jobs which are messages. If false, this\
          \ parameter is ignored. Cannot be used together with 'timersOnly'"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withException
        in: query
        description: "If true, only return jobs for which an exception occurred while\
          \ executing it. If false, this parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dueBefore
        in: query
        description: Only return jobs which are due to be executed before the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueAfter
        in: query
        description: Only return jobs which are due to be executed after the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: exceptionMessage
        in: query
        description: Only return jobs with the given exception message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return jobs with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return jobs with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns jobs without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: locked
        in: query
        description: "If true, only return jobs which are locked.  If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unlocked
        in: query
        description: "If true, only return jobs which are unlocked. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeId
        in: query
        description: "If true, only returns jobs without a scope id set. If false,\
          \ the withoutScopeId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeType
        in: query
        description: "If true, only returns jobs without a scope type set. If false,\
          \ the withoutScopeType parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - dueDate
          - executionId
          - processInstanceId
          - retries
          - tenantId
      responses:
        "200":
          description: Indicates the requested jobs were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseJobResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter
            or the both 'messagesOnly' and 'timersOnly' are used as parameters. Status
            description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Jobs
      summary: Move a bulk of deadletter jobs. Accepts 'move' and 'moveToHistoryJob'
        as action.
      operationId: executeDeadLetterJobAction
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BulkMoveDeadLetterActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the dead letter jobs where moved. Response-body is
            intentionally empty.
          content: {}
        "500":
          description: Indicates the an exception occurred while executing the job.
            The status-description contains additional detail about the error. The
            full error-stacktrace can be fetched later on if needed.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /management/deadletter-jobs/{jobId}:
    get:
      tags:
      - Jobs
      summary: Get a single deadletter job
      operationId: getDeadletterJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the suspended job exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        "404":
          description: Indicates the requested job does not exist.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Jobs
      summary: Move a single deadletter job. Accepts 'move' and 'moveToHistoryJob'
        as action.
      operationId: executeDeadLetterJobAction
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the dead letter job was moved. Response-body is intentionally
            empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
        "500":
          description: Indicates the an exception occurred while executing the job.
            The status-description contains additional detail about the error. The
            full error-stacktrace can be fetched later on if needed.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Jobs
      summary: Delete a deadletter job
      operationId: deleteDeadLetterJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the job was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
      security:
      - basicAuth: []
  /management/deadletter-jobs/{jobId}/exception-stacktrace:
    get:
      tags:
      - Jobs
      summary: Get the exception stacktrace for a deadletter job
      operationId: getDeadLetterJobStacktrace
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested job was not found and the stacktrace
            has been returned. The response contains the raw stacktrace and always
            has a Content-type of text/plain.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "404":
          description: Indicates the requested job was not found or the job does not
            have an exception stacktrace. Status-description contains additional information
            about the error.
          content: {}
      security:
      - basicAuth: []
  /management/engine:
    get:
      tags:
      - Engine
      summary: Get engine info
      operationId: getEngineInfo
      responses:
        "200":
          description: Indicates the engine info is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInfoResponse'
      security:
      - basicAuth: []
  /management/engine-properties:
    get:
      tags:
      - EngineProperties
      summary: Get all engine properties
      operationId: getEngineProperties
      responses:
        "200":
          description: Indicates that engine properties were found and returned.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                x-content-type: application/json
      security:
      - basicAuth: []
    post:
      tags:
      - EngineProperties
      summary: Create a new engine property
      operationId: createEngineProperty
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PropertyRequestBody'
        required: false
      responses:
        "201":
          description: Indicates the property is created
          content: {}
        "409":
          description: Indicates the property already exists
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /management/engine-properties/{engineProperty}:
    put:
      tags:
      - EngineProperties
      summary: Update an engine property
      operationId: updateEngineProperty
      parameters:
      - name: engineProperty
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PropertyRequestBody'
        required: false
      responses:
        "200":
          description: Indicates the property is updated
          content: {}
        "404":
          description: Indicates the property is not found
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - EngineProperties
      summary: Delete an engine property
      operationId: deleteEngineProperty
      parameters:
      - name: engineProperty
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the property was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested property was not found.
          content: {}
      security:
      - basicAuth: []
  /management/history-jobs:
    get:
      tags:
      - Jobs
      summary: List history jobs
      operationId: listDeadLetterJobs
      parameters:
      - name: id
        in: query
        description: Only return the job with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withException
        in: query
        description: "If true, only return jobs for which an exception occurred while\
          \ executing it. If false, this parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: exceptionMessage
        in: query
        description: Only return jobs with the given exception message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scopeType
        in: query
        description: Only return jobs with the given scope type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return jobs with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return jobs with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns jobs without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: lockOwner
        in: query
        description: "If true, only return jobs which are owned by the given lockOwner."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: locked
        in: query
        description: "If true, only return jobs which are locked.  If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unlocked
        in: query
        description: "If true, only return jobs which are unlocked. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - retries
          - tenantId
      responses:
        "200":
          description: Indicates the requested jobs were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoryJobResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter.
            Status description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /management/history-jobs/{jobId}:
    get:
      tags:
      - Jobs
      summary: Get a single history job job
      operationId: getHistoryJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the history job exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryJobResponse'
        "404":
          description: Indicates the requested job does not exist.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Jobs
      summary: Execute a history job
      operationId: executeHistoryJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the job was executed. Response-body is intentionally
            empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
        "500":
          description: Indicates the an exception occurred while executing the job.
            The status-description contains additional detail about the error. The
            full error-stacktrace can be fetched later on if needed.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Jobs
      summary: Delete a history job
      operationId: deleteHistoryJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the history job was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
      security:
      - basicAuth: []
  /management/jobs:
    get:
      tags:
      - Jobs
      summary: List jobs
      operationId: listJobs
      parameters:
      - name: id
        in: query
        description: Only return job with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return jobs part of a process with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: "If true, only returns jobs without a process instance id set.\
          \ If false, the withoutProcessInstanceId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: executionId
        in: query
        description: Only return jobs part of an execution with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return jobs with the given process definition id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementId
        in: query
        description: Only return jobs with the given element id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementName
        in: query
        description: Only return jobs with the given element name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timersOnly
        in: query
        description: "If true, only return jobs which are timers. If false, this parameter\
          \ is ignored. Cannot be used together with 'messagesOnly'."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: messagesOnly
        in: query
        description: "If true, only return jobs which are messages. If false, this\
          \ parameter is ignored. Cannot be used together with 'timersOnly'"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withException
        in: query
        description: "If true, only return jobs for which an exception occurred while\
          \ executing it. If false, this parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dueBefore
        in: query
        description: Only return jobs which are due to be executed before the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueAfter
        in: query
        description: Only return jobs which are due to be executed after the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: exceptionMessage
        in: query
        description: Only return jobs with the given exception message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return jobs with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return jobs with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns jobs without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: locked
        in: query
        description: "If true, only return jobs which are locked.  If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unlocked
        in: query
        description: "If true, only return jobs which are unlocked. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeId
        in: query
        description: "If true, only returns jobs without a scope id set. If false,\
          \ the withoutScopeId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeType
        in: query
        description: "If true, only returns jobs without a scope type set. If false,\
          \ the withoutScopeType parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - dueDate
          - executionId
          - processInstanceId
          - retries
          - tenantId
      responses:
        "200":
          description: Indicates the requested jobs were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseJobResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter
            or the both 'messagesOnly' and 'timersOnly' are used as parameters. Status
            description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /management/jobs/{jobId}:
    get:
      tags:
      - Jobs
      summary: Get a single job
      operationId: getJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the job exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        "404":
          description: Indicates the requested job does not exist.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Jobs
      summary: Execute a single job
      operationId: executeJobAction
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the job was executed. Response-body is intentionally
            empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
        "500":
          description: Indicates the an exception occurred while executing the job.
            The status-description contains additional detail about the error. The
            full error-stacktrace can be fetched later on if needed.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Jobs
      summary: Delete a job
      operationId: deleteJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the job was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
      security:
      - basicAuth: []
  /management/jobs/{jobId}/exception-stacktrace:
    get:
      tags:
      - Jobs
      summary: Get the exception stacktrace for a job
      operationId: getJobStacktrace
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested job was not found and the stacktrace
            has been returned. The response contains the raw stacktrace and always
            has a Content-type of text/plain.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "404":
          description: Indicates the requested job was not found or the job does not
            have an exception stacktrace. Status-description contains additional information
            about the error.
          content: {}
      security:
      - basicAuth: []
  /management/properties:
    get:
      tags:
      - Engine
      summary: List engine properties
      operationId: getProperties
      responses:
        "200":
          description: Indicates the properties are returned.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                x-content-type: application/json
      security:
      - basicAuth: []
  /management/suspended-jobs:
    get:
      tags:
      - Jobs
      summary: List suspended jobs
      operationId: listSuspendedJobs
      parameters:
      - name: id
        in: query
        description: Only return job with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return jobs part of a process with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: "If true, only returns jobs without a process instance id set.\
          \ If false, the withoutProcessInstanceId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: executionId
        in: query
        description: Only return jobs part of an execution with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return jobs with the given process definition id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementId
        in: query
        description: Only return jobs with the given element id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementName
        in: query
        description: Only return jobs with the given element name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executable
        in: query
        description: "If true, only return jobs which are executable. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: timersOnly
        in: query
        description: "If true, only return jobs which are timers. If false, this parameter\
          \ is ignored. Cannot be used together with 'messagesOnly'."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: messagesOnly
        in: query
        description: "If true, only return jobs which are messages. If false, this\
          \ parameter is ignored. Cannot be used together with 'timersOnly'"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withException
        in: query
        description: "If true, only return jobs for which an exception occurred while\
          \ executing it. If false, this parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dueBefore
        in: query
        description: Only return jobs which are due to be executed before the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueAfter
        in: query
        description: Only return jobs which are due to be executed after the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: exceptionMessage
        in: query
        description: Only return jobs with the given exception message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return jobs with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return jobs with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns jobs without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: locked
        in: query
        description: "If true, only return jobs which are locked.  If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unlocked
        in: query
        description: "If true, only return jobs which are unlocked. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeId
        in: query
        description: "If true, only returns jobs without a scope id set. If false,\
          \ the withoutScopeId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeType
        in: query
        description: "If true, only returns jobs without a scope type set. If false,\
          \ the withoutScopeType parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - dueDate
          - executionId
          - processInstanceId
          - retries
          - tenantId
      responses:
        "200":
          description: Indicates the requested jobs were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseJobResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter
            or the both 'messagesOnly' and 'timersOnly' are used as parameters. Status
            description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /management/suspended-jobs/{jobId}:
    get:
      tags:
      - Jobs
      summary: Get a single suspended job
      operationId: getSuspendedJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the suspended job exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        "404":
          description: Indicates the requested job does not exist.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Jobs
      summary: Delete a suspended job
      operationId: deleteSuspendedJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the job was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
      security:
      - basicAuth: []
  /management/suspended-jobs/{jobId}/exception-stacktrace:
    get:
      tags:
      - Jobs
      summary: Get the exception stacktrace for a suspended job
      operationId: getSuspendedJobStacktrace
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested job was not found and the stacktrace
            has been returned. The response contains the raw stacktrace and always
            has a Content-type of text/plain.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "404":
          description: Indicates the requested job was not found or the job does not
            have an exception stacktrace. Status-description contains additional information
            about the error.
          content: {}
      security:
      - basicAuth: []
  /management/tables:
    get:
      tags:
      - Database tables
      summary: ' List tables'
      operationId: listTables
      responses:
        "200":
          description: Indicates the request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableResponse'
                x-content-type: application/json
      security:
      - basicAuth: []
  /management/tables/{tableName}:
    get:
      tags:
      - Database tables
      summary: Get a single table
      operationId: getTable
      parameters:
      - name: tableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the table exists and the table count is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableResponse'
        "404":
          description: Indicates the requested table does not exist.
          content: {}
      security:
      - basicAuth: []
  /management/tables/{tableName}/columns:
    get:
      tags:
      - Database tables
      summary: Get column info for a single table
      operationId: getTableMetaData
      parameters:
      - name: tableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the table exists and the table column info is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableMetaData'
        "404":
          description: Indicates the requested table does not exist.
          content: {}
      security:
      - basicAuth: []
  /management/tables/{tableName}/data:
    get:
      tags:
      - Database tables
      summary: Get row data for a single table
      operationId: getTableData
      parameters:
      - name: tableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: start
        in: query
        description: Index of the first row to fetch. Defaults to 0.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: size
        in: query
        description: "Number of rows to fetch, starting from start. Defaults to 10."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: orderAscendingColumn
        in: query
        description: "Name of the column to sort the resulting rows on, ascending."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDescendingColumn
        in: query
        description: "Name of the column to sort the resulting rows on, descending."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the table exists and the table row data is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseListMapStringObject'
        "404":
          description: Indicates the requested table does not exist.
          content: {}
      security:
      - basicAuth: []
  /management/timer-jobs:
    get:
      tags:
      - Jobs
      summary: List timer jobs
      operationId: listTimerJobs
      parameters:
      - name: id
        in: query
        description: Only return job with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return jobs part of a process with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: "If true, only returns jobs without a process instance id set.\
          \ If false, the withoutProcessInstanceId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: executionId
        in: query
        description: Only return jobs part of an execution with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return jobs with the given process definition id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementId
        in: query
        description: Only return jobs with the given element id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: elementName
        in: query
        description: Only return jobs with the given element name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executable
        in: query
        description: "If true, only return jobs which are executable. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: timersOnly
        in: query
        description: "If true, only return jobs which are timers. If false, this parameter\
          \ is ignored. Cannot be used together with 'messagesOnly'."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: messagesOnly
        in: query
        description: "If true, only return jobs which are messages. If false, this\
          \ parameter is ignored. Cannot be used together with 'timersOnly'"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withException
        in: query
        description: "If true, only return jobs for which an exception occurred while\
          \ executing it. If false, this parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dueBefore
        in: query
        description: Only return jobs which are due to be executed before the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueAfter
        in: query
        description: Only return jobs which are due to be executed after the given
          date. Jobs without duedate are never returned using this parameter.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: exceptionMessage
        in: query
        description: Only return jobs with the given exception message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return jobs with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return jobs with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns jobs without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: locked
        in: query
        description: "If true, only return jobs which are locked.  If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unlocked
        in: query
        description: "If true, only return jobs which are unlocked. If false, this\
          \ parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeId
        in: query
        description: "If true, only returns jobs without a scope id set. If false,\
          \ the withoutScopeId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withoutScopeType
        in: query
        description: "If true, only returns jobs without a scope type set. If false,\
          \ the withoutScopeType parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - dueDate
          - executionId
          - processInstanceId
          - retries
          - tenantId
      responses:
        "200":
          description: Indicates the requested jobs were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseJobResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter
            or the both 'messagesOnly' and 'timersOnly' are used as parameters. Status
            description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /management/timer-jobs/{jobId}:
    get:
      tags:
      - Jobs
      summary: Get a single timer job
      operationId: getTimerJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the timer job exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        "404":
          description: Indicates the requested job does not exist.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Jobs
      summary: Move a single timer job
      operationId: executeTimerJobAction
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the timer job was moved. Response-body is intentionally
            empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
        "500":
          description: Indicates the an exception occurred while executing the job.
            The status-description contains additional detail about the error. The
            full error-stacktrace can be fetched later on if needed.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Jobs
      summary: Delete a timer job
      operationId: deleteTimerJob
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the job was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested job was not found.
          content: {}
      security:
      - basicAuth: []
  /management/timer-jobs/{jobId}/exception-stacktrace:
    get:
      tags:
      - Jobs
      summary: Get the exception stacktrace for a timer job
      operationId: getTimerJobStacktrace
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the requested job was not found and the stacktrace
            has been returned. The response contains the raw stacktrace and always
            has a Content-type of text/plain.
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "404":
          description: Indicates the requested job was not found or the job does not
            have an exception stacktrace. Status-description contains additional information
            about the error.
          content: {}
      security:
      - basicAuth: []
  /query/activity-instances:
    post:
      tags:
      - Runtime
      - Query
      summary: Query for activity instances
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of historic task instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long."
      operationId: queryActivityInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ActivityInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the activities are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseActivityInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/executions:
    post:
      tags:
      - Executions
      - Query
      summary: Query executions
      description: |-
        The request body can contain all possible filters that can be used in the List executions URL query. On top of these, it’s possible to provide an array of variables and processInstanceVariables to include in the query, with their format described here.

        The general paging and sorting query-parameters can be used for this URL.
      operationId: queryExecutions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExecutionQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the executions are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseExecutionResponse'
        "404":
          description: Indicates a parameter was passed in the wrong format . The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/historic-activity-instances:
    post:
      tags:
      - History
      - Query
      summary: Query for historic activity instances
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of historic task instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long."
      operationId: queryActivityInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HistoricActivityInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the activities are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricActivityInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/historic-detail:
    post:
      tags:
      - History
      - Query
      summary: Query for historic details
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of historic process instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long."
      operationId: queryHistoricDetail
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HistoricDetailQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the historic details are
            returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricDetailResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/historic-process-instances:
    post:
      tags:
      - History Process
      - Query
      summary: Query for historic process instances
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of historic process instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long. On top of that, the query allows for filtering based on process\
        \ variables. The variables property is a JSON-array containing objects with\
        \ the format as described here."
      operationId: queryHistoricProcessInstance
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HistoricProcessInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the process instances
            are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricProcessInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/historic-task-instances:
    post:
      tags:
      - History Task
      - Query
      summary: Query for historic task instances
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of historic task instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long. On top of that, the query allows for filtering based on process\
        \ variables. The taskVariables and processVariables properties are JSON-arrays\
        \ containing objects with the format as described here."
      operationId: queryHistoricTaskInstance
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HistoricTaskInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the tasks are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricTaskInstanceResponse'
        "404":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/historic-variable-instances:
    post:
      tags:
      - History
      - Query
      summary: Query for historic variable instances
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of historic process instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long. On top of that, the query allows for filtering based on process\
        \ variables. The variables property is a JSON-array containing objects with\
        \ the format as described here."
      operationId: queryVariableInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HistoricVariableInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the tasks are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseHistoricVariableInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/process-instances:
    post:
      tags:
      - Process Instances
      - Query
      summary: Query process instances
      description: |-
        The request body can contain all possible filters that can be used in the List process instances URL query. On top of these, it’s possible to provide an array of variables to include in the query, with their format described here.

        The general paging and sorting query-parameters can be used for this URL.
      operationId: queryProcessInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProcessInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the process-instances
            are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseProcessInstanceResponse'
        "400":
          description: Indicates a parameter was passed in the wrong format . The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/tasks:
    post:
      tags:
      - Tasks
      - Query
      summary: Query for tasks
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of tasks (except for candidateGroupIn\
        \ which is only available in this POST task query REST service), but passed\
        \ in as JSON-body arguments rather than URL-parameters to allow for more advanced\
        \ querying and preventing errors with request-uri’s that are too long. On\
        \ top of that, the query allows for filtering based on task and process variables.\
        \ The taskVariables and processInstanceVariables are both JSON-arrays containing\
        \ objects with the format as described here."
      operationId: queryTasks
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TaskQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the tasks are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTaskResponse'
        "400":
          description: Indicates a parameter was passed in the wrong format or that
            delegationState has an invalid value (other than pending and resolved).
            The status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /query/variable-instances:
    post:
      tags:
      - History
      - Query
      summary: Query for variable instances
      description: "All supported JSON parameter fields allowed are exactly the same\
        \ as the parameters found for getting a collection of variable instances,\
        \ but passed in as JSON-body arguments rather than URL-parameters to allow\
        \ for more advanced querying and preventing errors with request-uri’s that\
        \ are too long."
      operationId: queryVariableInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/VariableInstanceQueryRequest'
        required: false
      responses:
        "200":
          description: Indicates request was successful and the tasks are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseVariableInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /repository/deployments:
    get:
      tags:
      - Deployment
      summary: List Deployments
      operationId: listDeployments
      parameters:
      - name: name
        in: query
        description: Only return deployments with the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLike
        in: query
        description: Only return deployments with a name like the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Only return deployments with the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryNotEquals
        in: query
        description: Only return deployments which do not have the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentDeploymentId
        in: query
        description: Only return deployments with the given parent deployment id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentDeploymentIdLike
        in: query
        description: Only return deployments with a parent deployment id like the
          given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return deployments with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return deployments with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns deployments without a tenantId set. If\
          \ false, the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - name
          - deployTime
          - tenantId
      responses:
        "200":
          description: Indicates the request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseDeploymentResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - Deployment
      summary: Create a new deployment
      description: |-
        The request body should contain data of type multipart/form-data. There should be exactly one file in the request, any additional files will be ignored. The deployment name is the name of the file-field passed in. If multiple resources need to be deployed in a single deployment, compress the resources in a zip and make sure the file-name ends with .bar or .zip.

        An additional parameter (form-field) can be passed in the request body with name tenantId. The value of this field will be used as the id of the tenant this deployment is done in.
      operationId: uploadDeployment
      parameters:
      - name: deploymentKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deploymentName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/repository_deployments_body'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResponse'
        "201":
          description: Indicates the deployment was created.
          content: {}
        "400":
          description: Indicates there was no content present in the request body
            or the content mime-type is not supported for deployment. The status-description
            contains additional information.
          content: {}
      security:
      - basicAuth: []
  /repository/deployments/{deploymentId}:
    get:
      tags:
      - Deployment
      summary: Get a deployment
      operationId: getDeployment
      parameters:
      - name: deploymentId
        in: path
        description: The id of the deployment to get.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the deployment was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResponse'
        "404":
          description: Indicates the requested deployment was not found.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Deployment
      summary: Delete a deployment
      operationId: deleteDeployment
      parameters:
      - name: deploymentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cascade
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: Indicates the deployment was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested deployment was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/deployments/{deploymentId}/resourcedata/{resourceName}:
    get:
      tags:
      - Deployment
      summary: Get a deployment resource content
      description: "The response body will contain the binary resource-content for\
        \ the requested resource. The response content-type will be the same as the\
        \ type returned in the resources mimeType property. Also, a content-disposition\
        \ header is set, allowing browsers to download the file instead of displaying\
        \ it."
      operationId: getDeploymentResourceData
      parameters:
      - name: deploymentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resourceName
        in: path
        description: "The name of the resource to get. Make sure you URL-encode the\
          \ resourceName in case it contains forward slashes. Eg: use diagrams%2Fmy-process.bpmn20.xml\
          \ instead of diagrams/my-process.bpmn20.xml."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates both deployment and resource have been found and
            the resource data has been returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested deployment was not found or there is
            no resource with the given id present in the deployment. The status-description
            contains additional information.
          content: {}
      security:
      - basicAuth: []
  /repository/deployments/{deploymentId}/resources:
    get:
      tags:
      - Deployment
      summary: List resources in a deployment
      description: The dataUrl property in the resulting JSON for a single resource
        contains the actual URL to use for retrieving the binary resource.
      operationId: listDeploymentResources
      parameters:
      - name: deploymentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the deployment was found and the resource list has
            been returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentResourceResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested deployment was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/deployments/{deploymentId}/resources/**:
    get:
      tags:
      - Deployment
      summary: Get a deployment resource
      description: Replace ** by ResourceId
      operationId: getDeploymentResource
      parameters:
      - name: deploymentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates both deployment and resource have been found and
            the resource has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResourceResponse'
        "404":
          description: Indicates the requested deployment was not found or there is
            no resource with the given id present in the deployment. The status-description
            contains additional information.
          content: {}
      security:
      - basicAuth: []
  /repository/models:
    get:
      tags:
      - Models
      summary: List models
      operationId: listModels
      parameters:
      - name: id
        in: query
        description: Only return models with the given version.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Only return models with the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryLike
        in: query
        description: Only return models with a category like the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryNotEquals
        in: query
        description: Only return models which do not have the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Only return models with the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLike
        in: query
        description: Only return models with a name like the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: Only return models with the given key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deploymentId
        in: query
        description: Only return models with the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: Only return models with the given version.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: latestVersion
        in: query
        description: "If true, only return models which are the latest version. Best\
          \ used in combination with key. If false is passed in as value, this is\
          \ ignored and all versions are returned."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: deployed
        in: query
        description: "If true, only deployed models are returned. If false, only undeployed\
          \ models are returned (deploymentId is null)."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tenantId
        in: query
        description: Only return models with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return models with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns models without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - category
          - createTime
          - key
          - lastUpdateTime
          - name
          - version
          - tenantId
      responses:
        "200":
          description: Indicates request was successful and the models are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseModelResponse'
        "400":
          description: Indicates a parameter was passed in the wrong format. The status-message
            contains additional information.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Models
      summary: Create a model
      description: "All request values are optional. For example, you can only include\
        \ the name attribute in the request body JSON-object, only setting the name\
        \ of the model, leaving all other fields null."
      operationId: createModel
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ModelRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
        "201":
          description: Indicates the model was created.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /repository/models/{modelId}:
    get:
      tags:
      - Models
      summary: Get a model
      operationId: getModel
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the model was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Models
      summary: Update a model
      description: "All request values are optional. For example, you can only include\
        \ the name attribute in the request body JSON-object, only updating the name\
        \ of the model, leaving all other fields unaffected. When an attribute is\
        \ explicitly included and is set to null, the model-value will be updated\
        \ to null. "
      operationId: updateModel
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ModelRequest'
        required: false
      responses:
        "200":
          description: Indicates the model was found and updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Models
      summary: Delete a model
      operationId: deleteModel
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the model was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/models/{modelId}/source:
    get:
      tags:
      - Models
      summary: Get the editor source for a model
      description: "Response body contains the model’s raw editor source. The response’\
        s content-type is set to application/octet-stream, regardless of the content\
        \ of the source."
      operationId: getModelBytes
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the model was found and source is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Models
      summary: Set the editor source for a model
      description: "Response body contains the model’s raw editor source. The response’\
        s content-type is set to application/octet-stream, regardless of the content\
        \ of the source."
      operationId: setModelSource
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/modelId_source_body'
        required: true
      responses:
        "204":
          description: Indicates the model was found and the source has been updated.
          content: {}
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/models/{modelId}/source-extra:
    get:
      tags:
      - Models
      summary: Get the extra editor source for a model
      description: "Response body contains the model’s raw editor source. The response’\
        s content-type is set to application/octet-stream, regardless of the content\
        \ of the source."
      operationId: getExtraEditorSource
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the model was found and source is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Models
      summary: Set the extra editor source for a model
      description: "Response body contains the model’s raw editor source. The response’\
        s content-type is set to application/octet-stream, regardless of the content\
        \ of the source."
      operationId: setExtraEditorSource
      parameters:
      - name: modelId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/modelId_sourceextra_body'
        required: true
      responses:
        "204":
          description: Indicates the model was found and the extra source has been
            updated.
          content: {}
        "404":
          description: Indicates the requested model was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions:
    get:
      tags:
      - Process Definitions
      summary: List of process definitions
      operationId: listProcessDefinitions
      parameters:
      - name: version
        in: query
        description: Only return process definitions with the given version.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: name
        in: query
        description: Only return process definitions with the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLike
        in: query
        description: Only return process definitions with a name like the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLikeIgnoreCase
        in: query
        description: Only return process definitions with a name like the given name
          ignoring case.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: Only return process definitions with the given key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: keyLike
        in: query
        description: Only return process definitions with a name like the given key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resourceName
        in: query
        description: Only return process definitions with the given resource name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resourceNameLike
        in: query
        description: Only return process definitions with a name like the given resource
          name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: Only return process definitions with the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryLike
        in: query
        description: Only return process definitions with a category like the given
          name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryNotEquals
        in: query
        description: Only return process definitions which do not have the given category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deploymentId
        in: query
        description: Only return process definitions which are part of a deployment
          with the given deployment id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentDeploymentId
        in: query
        description: Only return process definitions which are part of a deployment
          with the given parent deployment id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startableByUser
        in: query
        description: Only return process definitions which are part of a deployment
          with the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: latest
        in: query
        description: "Only return the latest process definition versions. Can only\
          \ be used together with key and keyLike parameters, using any other parameter\
          \ will result in a 400-response."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: suspended
        in: query
        description: "If true, only returns process definitions which are suspended.\
          \ If false, only active process definitions (which are not suspended) are\
          \ returned."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - id
          - key
          - category
          - deploymentId
          - version
      responses:
        "200":
          description: Indicates request was successful and the process-definitions
            are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseProcessDefinitionResponse'
        "400":
          description: Indicates a parameter was passed in the wrong format or that
            latest is used with other parameters other than key and keyLike. The status-message
            contains additional information.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}:
    get:
      tags:
      - Process Definitions
      summary: Get a process definition
      operationId: getProcessDefinition
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the process-definitions
            are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessDefinitionResponse'
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Process Definitions
      summary: Execute actions for a process definition
      description: "Execute actions for a process definition (Update category, Suspend\
        \ or Activate)"
      operationId: executeProcessDefinitionAction
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProcessDefinitionActionRequest'
        required: true
      responses:
        "200":
          description: "Indicates action has been executed for the specified process.\
            \ (category altered, activate or suspend)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessDefinitionResponse'
        "400":
          description: Indicates no category was defined in the request body.
          content: {}
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
        "409":
          description: Indicates the requested process definition is already suspended
            or active.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /repository/process-definitions/{processDefinitionId}/batch-migrate:
    post:
      tags:
      - Process Definitions
      summary: Batch migrate all instances of process definition
      operationId: batchMigrateInstancesOfProcessDefinition
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "200":
          description: Indicates process instances were found and batch migration
            was started.
          content: {}
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /repository/process-definitions/{processDefinitionId}/decision-tables:
    get:
      tags:
      - Process Definitions
      summary: List decision tables for a process-definition
      operationId: listProcessDefinitionDecisionTables
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process definition was found and the decision
            tables are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecisionResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      deprecated: true
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/decisions:
    get:
      tags:
      - Process Definitions
      summary: List decisions for a process-definition
      operationId: listProcessDefinitionDecisions
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process definition was found and the decisions
            are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecisionResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/form-definitions:
    get:
      tags:
      - Process Definitions
      summary: List form definitions for a process-definition
      operationId: listProcessDefinitionFormDefinitions
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process definition was found and the form definitions
            are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDefinitionResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/identitylinks:
    get:
      tags:
      - Process Definitions
      summary: List candidate starters for a process-definition
      operationId: listProcessDefinitionIdentityLinks
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process definition was found and the requested
            identity links are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestIdentityLink'
                x-content-type: application/json
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Process Definitions
      summary: Add a candidate starter to a process definition
      description: It is possible to add either a user or a group.
      operationId: createIdentityLink
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestIdentityLink'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestIdentityLink'
        "201":
          description: Indicates the process definition was found and the identity
            link was created.
          content: {}
        "400":
          description: Indicates the body does not contain the correct information.
          content: {}
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /repository/process-definitions/{processDefinitionId}/identitylinks/{family}/{identityId}:
    get:
      tags:
      - Process Definitions
      summary: Get a candidate starter from a process definition
      operationId: getIdentityLink
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: family
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: identityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process definition was found and the identity
            link was returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestIdentityLink'
        "404":
          description: Indicates the requested process definition was not found or
            the process definition does not have an identity-link that matches the
            url.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Process Definitions
      summary: Delete a candidate starter from a process definition
      operationId: deleteIdentityLink
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: family
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: identityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the process definition was found and the identity
            link was removed. The response body is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested process definition was not found or
            the process definition does not have an identity-link that matches the
            url.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/image:
    get:
      tags:
      - Process Definitions
      summary: Get a process definition image
      operationId: getModelResource
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the process-definitions
            are returned
          content:
            image/png:
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: image/png
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/migrate:
    post:
      tags:
      - Process Definitions
      summary: Migrate all instances of process definition
      operationId: migrateInstancesOfProcessDefinition
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "200":
          description: Indicates process instances were found and migration was executed.
          content: {}
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /repository/process-definitions/{processDefinitionId}/model:
    get:
      tags:
      - Process Definitions
      summary: Get a process definition BPMN model
      operationId: getBpmnModelResource
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process definition was found and the model is
            returned. The response contains the full process definition model.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BpmnModel'
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/resourcedata:
    get:
      tags:
      - Process Definitions
      summary: Get a process definition resource content
      operationId: getProcessDefinitionResource
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates both process definition and resource have been found
            and the resource data has been returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested process definition was not found or
            there is no resource with the given id present in the process definition.
            The status-description contains additional information.
          content: {}
      security:
      - basicAuth: []
  /repository/process-definitions/{processDefinitionId}/start-form:
    get:
      tags:
      - Process Definitions
      summary: Get a process definition start form
      operationId: getProcessDefinitionStartForm
      parameters:
      - name: processDefinitionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the process definition
            form is returned
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Indicates the requested process definition was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/activity-instances:
    get:
      tags:
      - History
      summary: List activity instances
      operationId: listActivityInstances
      parameters:
      - name: activityId
        in: query
        description: An id of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityInstanceId
        in: query
        description: An id of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityName
        in: query
        description: The name of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityType
        in: query
        description: The element type of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executionId
        in: query
        description: The execution id of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: finished
        in: query
        description: Indication if the activity instance is finished.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: taskAssignee
        in: query
        description: The assignee of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: The process instance id of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: The process definition id of the activity instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return instances with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return instances with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns instances without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Indicates that activity instances could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseActivityInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /runtime/event-subscriptions:
    get:
      tags:
      - Event subscriptions
      summary: List of event subscriptions
      operationId: listEventSubscriptions
      parameters:
      - name: id
        in: query
        description: Only return event subscriptions with the given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: eventType
        in: query
        description: Only return event subscriptions with the given event type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: eventName
        in: query
        description: Only return event subscriptions with the given event name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityId
        in: query
        description: Only return event subscriptions with the given activity id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executionId
        in: query
        description: Only return event subscriptions with the given execution id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return event subscriptions part of a process with the given
          id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: Only return event subscriptions that have no process instance
          id
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: processDefinitionId
        in: query
        description: Only return event subscriptions with the given process definition
          id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessDefinitionId
        in: query
        description: Only return event subscriptions that have no process definition
          id
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scopeId
        in: query
        description: Only return event subscriptions part of a scope with the given
          id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subScopeId
        in: query
        description: Only return event subscriptions part of a sub scope with the
          given id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutScopeId
        in: query
        description: Only return event subscriptions that have no scope id
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scopeDefinitionId
        in: query
        description: Only return event subscriptions with the given scope definition
          id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutScopeDefinitionId
        in: query
        description: Only return event subscriptions that have no scope definition
          id
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: createdBefore
        in: query
        description: Only return event subscriptions which are created before the
          given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: createdAfter
        in: query
        description: Only return event subscriptions which are created after the given
          date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: tenantId
        in: query
        description: Only return event subscriptions with the given tenant id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: Only return event subscriptions that have no tenant id
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: configuration
        in: query
        description: Only return event subscriptions with the given configuration
          value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutConfiguration
        in: query
        description: Only return event subscriptions that have no configuration value
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - created
          - executionId
          - processInstanceId
          - processDefinitionId
          - tenantId
      responses:
        "200":
          description: Indicates the requested event subscriptions were returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseEventSubscriptionResponse'
        "400":
          description: Indicates an illegal value has been used in a url query parameter.
            Status description contains additional details about the error.
          content: {}
      security:
      - basicAuth: []
  /runtime/event-subscriptions/{eventSubscriptionId}:
    get:
      tags:
      - Event subscriptions
      summary: Get a single event subscription
      operationId: getEventSubscription
      parameters:
      - name: eventSubscriptionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the event subscription exists and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionResponse'
        "404":
          description: Indicates the requested event subscription does not exist.
          content: {}
      security:
      - basicAuth: []
  /runtime/executions:
    get:
      tags:
      - Executions
      summary: List of executions
      operationId: listExecutions
      parameters:
      - name: id
        in: query
        description: Only return models with the given version.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityId
        in: query
        description: Only return executions with the given activity id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionKey
        in: query
        description: Only return process instances with the given process definition
          key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return process instances with the given process definition
          id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return executions which are part of the process instance
          with the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: messageEventSubscriptionName
        in: query
        description: Only return executions which are subscribed to a message with
          the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signalEventSubscriptionName
        in: query
        description: Only return executions which are subscribed to a signal with
          the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentId
        in: query
        description: Only return executions which are a direct child of the given
          execution.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return process instances with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return process instances with a tenantId like the given
          value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns process instances without a tenantId set.\
          \ If false, the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - processInstanceId
          - processDefinitionId
          - processDefinitionKey
          - tenantId
      responses:
        "200":
          description: Indicates request was successful and the executions are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseExecutionResponse'
        "400":
          description: Indicates a parameter was passed in the wrong format . The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Executions
      summary: Signal event received
      operationId: executeExecutionAction
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExecutionActionRequest'
        required: false
      responses:
        "204":
          description: Indicates request was successful and the executions are returned
          content: {}
        "404":
          description: Indicates a parameter was passed in the wrong format . The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/executions/{executionId}:
    get:
      tags:
      - Executions
      summary: Get an execution
      operationId: getExecution
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the execution was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResponse'
        "404":
          description: Indicates the execution was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Executions
      summary: Execute an action on an execution
      operationId: performExecutionAction
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExecutionActionRequest'
        required: false
      responses:
        "200":
          description: Indicates the execution was found and the action is performed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResponse'
        "204":
          description: "Indicates the execution was found, the action was performed\
            \ and the action caused the execution to end."
          content: {}
        "400":
          description: "Indicates an illegal action was requested, required parameters\
            \ are missing in the request body or illegal variables are passed in.\
            \ Status description contains additional information about the error."
          content: {}
        "404":
          description: Indicates the execution was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/executions/{executionId}/activities:
    get:
      tags:
      - Executions
      summary: List active activities in an execution
      description: "Returns all activities which are active in the execution and in\
        \ all child-executions (and their children, recursively), if any."
      operationId: listExecutionActiveActivities
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the execution was found and activities are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "404":
          description: Indicates the execution was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/executions/{executionId}/change-state:
    post:
      tags:
      - Executions
      summary: Change the state of an execution
      operationId: changeExecutionActivityState
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExecutionChangeActivityStateRequest'
        required: false
      responses:
        "200":
          description: Indicates the execution was found and the action is performed.
          content: {}
        "404":
          description: Indicates the execution was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/executions/{executionId}/variables:
    get:
      tags:
      - Executions
      summary: List variables for an execution
      operationId: listExecutionVariables
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the execution was found and variables are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestVariable'
                x-content-type: application/json
        "404":
          description: Indicates the requested execution was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Executions
      summary: Update variables on an execution
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (array of RestVariable) or by passing a multipart/form-data Object.
        Any number of variables can be passed into the request body array.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: createOrUpdateExecutionVariable
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executionId_variables_body'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/executionId_variables_body_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "201":
          description: Indicates the execution was found and variable is created/updated.
          content: {}
        "400":
          description: Indicates the request body is incomplete or contains illegal
            values. The status description contains additional information about the
            error.
          content: {}
        "404":
          description: Indicates the requested execution was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    post:
      tags:
      - Executions
      summary: Create variables on an execution
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (array of RestVariable) or by passing a multipart/form-data Object.
        Any number of variables can be passed into the request body array.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: createExecutionVariable
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executionId_variables_body_2'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/executionId_variables_body_3'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "201":
          description: Indicates the execution was found and variable is created/updated.
          content: {}
        "400":
          description: Indicates the request body is incomplete or contains illegal
            values. The status description contains additional information about the
            error.
          content: {}
        "404":
          description: Indicates the requested execution was not found.
          content: {}
        "409":
          description: Indicates the execution was found but already contains a variable
            with the given name. Use the update-method instead.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Executions
      summary: Delete all variables for an execution
      operationId: deleteLocalVariables
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the execution was found and variables have been deleted.
          content: {}
        "404":
          description: Indicates the requested execution was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/executions/{executionId}/variables/{variableName}:
    get:
      tags:
      - Executions
      summary: Get a variable for an execution
      operationId: getExecutionVariable
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates both the execution and variable were found and variable
            is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestVariable'
        "400":
          description: Indicates the request body is incomplete or contains illegal
            values. The status description contains additional information about the
            error.
          content: {}
        "404":
          description: "Indicates the requested execution was not found or the execution\
            \ does not have a variable with the given name in the requested scope\
            \ (in case scope-query parameter was omitted, variable does not exist\
            \ in local and global scope). Status description contains additional information\
            \ about the error."
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Executions
      summary: Update a variable on an execution
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (RestVariable) or by passing a multipart/form-data Object.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: updateExecutionVariable
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables_variableName_body'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/variables_variableName_body_1'
      responses:
        "200":
          description: Indicates both the process instance and variable were found
            and variable is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestVariable'
        "404":
          description: Indicates the requested process instance was not found or the
            process instance does not have a variable with the given name. Status
            description contains additional information about the error.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Executions
      summary: Delete a variable for an execution
      operationId: deletedExecutionVariable
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Indicates both the execution and variable were found and variable
            has been deleted.
          content: {}
        "404":
          description: Indicates the requested execution was not found or the execution
            does not have a variable with the given name in the requested scope. Status
            description contains additional information about the error.
          content: {}
      security:
      - basicAuth: []
  /runtime/executions/{executionId}/variables/{variableName}/data:
    get:
      tags:
      - Executions
      summary: Get the binary data for an execution
      operationId: getExecutionVariableData
      parameters:
      - name: executionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the execution was found and the requested variables
            are returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested execution was not found or the task
            does not have a variable with the given name (in the given scope). Status
            message provides additional information.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances:
    get:
      tags:
      - Process Instances
      summary: List process instances
      operationId: listProcessInstances
      parameters:
      - name: id
        in: query
        description: Only return models with the given version.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Only return models with the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLike
        in: query
        description: Only return models like the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLikeIgnoreCase
        in: query
        description: Only return models like the given name ignoring case.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionKey
        in: query
        description: Only return process instances with the given process definition
          key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return process instances with the given process definition
          id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionCategory
        in: query
        description: Only return process instances with the given process definition
          category.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionVersion
        in: query
        description: Only return process instances with the given process definition
          version.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: processDefinitionEngineVersion
        in: query
        description: Only return process instances with the given process definition
          engine version.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: businessKey
        in: query
        description: Only return process instances with the given businessKey.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: businessKeyLike
        in: query
        description: Only return process instances with the businessKey like the given
          key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startedBy
        in: query
        description: Only return process instances started by the given user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startedBefore
        in: query
        description: Only return process instances started before the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: startedAfter
        in: query
        description: Only return process instances started after the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: activeActivityId
        in: query
        description: Only return process instances which have an active activity instance
          with the provided activity id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: involvedUser
        in: query
        description: Only return process instances in which the given user is involved.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: suspended
        in: query
        description: "If true, only return process instance which are suspended. If\
          \ false, only return process instances which are not suspended (active)."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: superProcessInstanceId
        in: query
        description: Only return process instances which have the given super process-instance
          id (for processes that have a call-activities).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subProcessInstanceId
        in: query
        description: Only return process instances which have the given sub process-instance
          id (for processes started as a call-activity).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeSubprocesses
        in: query
        description: Return only process instances which are not sub processes.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: includeProcessVariables
        in: query
        description: Indication to include process variables in the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: callbackId
        in: query
        description: Only return process instances with the given callbackId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: callbackType
        in: query
        description: Only return process instances with the given callbackType.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return process instances with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return process instances with a tenantId like the given
          value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns process instances without a tenantId set.\
          \ If false, the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sort
        in: query
        description: "Property to sort on, to be used together with the order."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - id
          - processDefinitionId
          - tenantId
          - processDefinitionKey
      responses:
        "200":
          description: Indicates request was successful and the process-instances
            are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseProcessInstanceResponse'
        "400":
          description: Indicates a parameter was passed in the wrong format . The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Process Instances
      summary: Start a process instance
      description: "Note that also a *transientVariables* property is accepted as\
        \ part of this json, that follows the same structure as the *variables* property.\n\
        \nOnly one of *processDefinitionId*, *processDefinitionKey* or *message* can\
        \ be used in the request body. \n\nParameters *businessKey*, *variables* and\
        \ *tenantId* are optional.\n\n If tenantId is omitted, the default tenant\
        \ will be used. More information about the variable format can be found in\
        \ the REST variables section.\n\n Note that the variable-scope that is supplied\
        \ is ignored, process-variables are always local.\n\n"
      operationId: createProcessInstance
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProcessInstanceCreateRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessInstanceResponse'
        "201":
          description: Indicates the process instance was created.
          content: {}
        "400":
          description: "Indicates either the process-definition was not found (based\
            \ on id or key), no process is started by sending the given message or\
            \ an invalid variable has been passed. Status description contains additional\
            \ information about the error."
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/process-instances/delete:
    post:
      tags:
      - Process Instances
      summary: Bulk delete process instances
      operationId: deleteProcessInstances
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BulkDeleteInstancesRestActionRequest'
        required: false
      responses:
        "204":
          description: Indicates the bulk of process instances was found and deleted.
            Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates at least one requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/process-instances/{processInstanceId}:
    get:
      tags:
      - Process Instances
      summary: Get a process instance
      operationId: getProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessInstanceResponse'
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Process Instances
      summary: Update process instance properties or execute an action on a process
        instance (body needs to contain an 'action' property for the latter).
      operationId: updateProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProcessInstanceUpdateRequest'
        required: false
      responses:
        "200":
          description: Indicates the process instance was found and the update/action
            was executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessInstanceResponse'
        "400":
          description: Indicates a invalid parameters are supplied.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "409":
          description: Indicates the requested process instance change cannot be executed
            since the process-instance is in a wrong status which doesn't accept the
            change
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Process Instances
      summary: Delete a process instance
      operationId: deleteProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: deleteReason
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Indicates the process instance was found and deleted. Response
            body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances/{processInstanceId}/change-state:
    post:
      tags:
      - Process Instances
      summary: Change the state a process instance
      operationId: changeActivityState
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExecutionChangeActivityStateRequest'
        required: false
      responses:
        "200":
          description: Indicates the process instance was found and change state activity
            was executed.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "409":
          description: Indicates the requested process instance action cannot be executed
            since the process-instance is already activated/suspended.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/process-instances/{processInstanceId}/diagram:
    get:
      tags:
      - Process Instances
      summary: Get diagram for a process instance
      operationId: getProcessInstanceDiagram
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and the diagram was
            returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "400":
          description: Indicates the requested process instance was not found but
            the process does not contain any graphical information (BPMN:DI) and no
            diagram can be created.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances/{processInstanceId}/evaluate-conditions:
    post:
      tags:
      - Process Instances
      summary: Evaluate the conditions of a process instance
      operationId: evaluateConditions
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and the evaluation
            of the conditions was executed.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "409":
          description: Indicates the requested process instance action cannot be executed
            since the process-instance is already activated/suspended.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances/{processInstanceId}/identitylinks:
    get:
      tags:
      - Process Instance Identity Links
      summary: Get involved people for process instance
      description: "Note that the groupId in Response Body will always be null, as\
        \ it’s only possible to involve users with a process-instance."
      operationId: listProcessInstanceIdentityLinks
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and links are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestIdentityLink'
                x-content-type: application/json
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Process Instance Identity Links
      summary: Add an involved user to a process instance
      description: "Note that the groupId in Response Body will always be null, as\
        \ it’s only possible to involve users with a process-instance."
      operationId: createProcessInstanceIdentityLinks
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestIdentityLink'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestIdentityLink'
        "201":
          description: Indicates the process instance was found and the link is created.
          content: {}
        "400":
          description: Indicates the requested body did not contain a userId or a
            type.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/process-instances/{processInstanceId}/identitylinks/users/{identityId}/{type}:
    get:
      tags:
      - Process Instance Identity Links
      summary: Get a specific involved people from process instance
      operationId: getProcessInstanceIdentityLinks
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: identityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and the specified
            link is retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestIdentityLink'
        "404":
          description: Indicates the requested process instance was not found or the
            link to delete does not exist. The response status contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Process Instance Identity Links
      summary: Remove an involved user to from process instance
      operationId: deleteProcessInstanceIdentityLinks
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: identityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the process instance was found and the link has been
            deleted. Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested process instance was not found or the
            link to delete does not exist. The response status contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances/{processInstanceId}/inject:
    post:
      tags:
      - Process Instances
      summary: Inject activity in a process instance
      operationId: injectActivityInProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InjectActivityRequest'
        required: false
      responses:
        "200":
          description: Indicates the process instance was updated and the activity
            injection was executed.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "409":
          description: Indicates the requested process instance action cannot be executed
            since the process-instance is already activated/suspended.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/process-instances/{processInstanceId}/migrate:
    post:
      tags:
      - Process Instances
      summary: Migrate process instance
      operationId: migrateProcessInstance
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "200":
          description: Indicates the process instance was found and migration was
            executed.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "409":
          description: Indicates the requested process instance action cannot be executed
            since the process-instance is already activated/suspended.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/process-instances/{processInstanceId}/variables:
    get:
      tags:
      - Process Instance Variables
      summary: List variables for a process instance
      description: "In case the variable is a binary variable or serializable, the\
        \ valueUrl points to an URL to fetch the raw value. If it’s a plain variable,\
        \ the value is present in the response. Note that only local scoped variables\
        \ are returned, as there is no global scope for process-instance variables."
      operationId: listProcessInstanceVariables
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and variables are
            returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestVariable'
                x-content-type: application/json
        "400":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Process Instance Variables
      summary: Update a multiple/single (non)binary variable on a process instance
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (RestVariable or an array of RestVariable) or by passing a multipart/form-data Object.
        Nonexistent variables are created on the process-instance and existing ones are overridden without any error.
        Any number of variables can be passed into the request body array.
        Note that scope is ignored, only local variables can be set in a process instance.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: createOrUpdateProcessVariable
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/processInstanceId_variables_body'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/processInstanceId_variables_body_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "201":
          description: Indicates the process instance was found and variable is created.
          content: {}
        "400":
          description: Indicates the request body is incomplete or contains illegal
            values. The status description contains additional information about the
            error.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "415":
          description: Indicates the serializable data contains an object for which
            no class is present in the JVM running the Flowable engine and therefore
            cannot be deserialized.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    post:
      tags:
      - Process Instance Variables
      summary: Create variables or new binary variable on a process instance
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (RestVariable or an array of RestVariable) or by passing a multipart/form-data Object.
        Nonexistent variables are created on the process-instance and existing ones are overridden without any error.
        Any number of variables can be passed into the request body array.
        Note that scope is ignored, only local variables can be set in a process instance.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: createProcessInstanceVariable
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/processInstanceId_variables_body_2'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/processInstanceId_variables_body_3'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "201":
          description: Indicates the process instance was found and variable is created.
          content: {}
        "400":
          description: Indicates the request body is incomplete or contains illegal
            values. The status description contains additional information about the
            error.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
        "409":
          description: Indicates the process instance was found but already contains
            a variable with the given name (only thrown when POST method is used).
            Use the update-method instead.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Process Instance Variables
      summary: Delete all variables
      operationId: deleteLocalProcessVariable
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates variables were found and have been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested process instance was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances/{processInstanceId}/variables/{variableName}:
    get:
      tags:
      - Process Instance Variables
      summary: Get a variable for a process instance
      operationId: getProcessInstanceVariable
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates both the process instance and variable were found
            and variable is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestVariable'
        "404":
          description: Indicates the requested process instance was not found or the
            process instance does not have a variable with the given name. Status
            description contains additional information about the error.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Process Instance Variables
      summary: Update a single variable on a process instance
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (RestVariable) or by passing a multipart/form-data Object.
        Nonexistent variables are created on the process-instance and existing ones are overridden without any error.
        Note that scope is ignored, only local variables can be set in a process instance.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: updateProcessInstanceVariable
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables_variableName_body_2'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/variables_variableName_body_3'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestVariable'
        "201":
          description: Indicates both the process instance and variable were found
            and variable is updated.
          content: {}
        "404":
          description: Indicates the requested process instance was not found or the
            process instance does not have a variable with the given name. Status
            description contains additional information about the error.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Process Instance Variables
      summary: Delete a variable
      operationId: deleteProcessInstanceVariable
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Indicates the variable was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested variable was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/process-instances/{processInstanceId}/variables/{variableName}/data:
    get:
      tags:
      - Process Instance Variables
      summary: Get the binary data for a variable
      operationId: getProcessInstanceVariableData
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the process instance was found and the requested
            variables are returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested task was not found or the task does
            not have a variable with the given name (in the given scope). Status message
            provides additional information.
          content: {}
      security:
      - basicAuth: []
  /runtime/signals:
    post:
      tags:
      - Runtime
      summary: Signal event received
      operationId: signalEventReceived
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SignalEventReceivedRequest'
        required: false
      responses:
        "202":
          description: "Indicated signal processing is queued as a job, ready to be\
            \ executed."
          content: {}
        "204":
          description: Indicated signal has been processed and no errors occurred.
          content: {}
        "400":
          description: "Signal not processed. The signal name is missing or variables\
            \ are used together with async, which is not allowed. Response body contains\
            \ additional information about the error."
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/tasks:
    get:
      tags:
      - Tasks
      summary: List of tasks
      operationId: listTasks
      parameters:
      - name: name
        in: query
        description: Only return models with the given version.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameLike
        in: query
        description: Only return tasks with a name like the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: Only return tasks with the given description.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: priority
        in: query
        description: Only return tasks with the given priority.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: minimumPriority
        in: query
        description: Only return tasks with a priority greater than the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maximumPriority
        in: query
        description: Only return tasks with a priority lower than the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: assignee
        in: query
        description: Only return tasks assigned to the given user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: assigneeLike
        in: query
        description: Only return tasks assigned with an assignee like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: owner
        in: query
        description: Only return tasks owned by the given user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ownerLike
        in: query
        description: Only return tasks assigned with an owner like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unassigned
        in: query
        description: "Only return tasks that are not assigned to anyone. If false\
          \ is passed, the value is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: delegationState
        in: query
        description: Only return tasks that have the given delegation state. Possible
          values are pending and resolved.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: candidateUser
        in: query
        description: Only return tasks that can be claimed by the given user. This
          includes both tasks where the user is an explicit candidate for and task
          that are claimable by a group that the user is a member of.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: candidateGroup
        in: query
        description: Only return tasks that can be claimed by a user in the given
          group.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: candidateGroups
        in: query
        description: Only return tasks that can be claimed by a user in the given
          groups. Values split by comma.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: involvedUser
        in: query
        description: Only return tasks in which the given user is involved.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDefinitionKey
        in: query
        description: Only return tasks with the given task definition id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDefinitionKeyLike
        in: query
        description: Only return tasks with a given task definition id like the given
          value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskDefinitionKeys
        in: query
        description: Only return tasks with the given task definition ids.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        description: Only return tasks which are part of the process instance with
          the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceIdWithChildren
        in: query
        description: Only return tasks which are part of the process instance and
          its children with the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutProcessInstanceId
        in: query
        description: "If true, only returns tasks without a process instance id set.\
          \ If false, the withoutProcessInstanceId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: processInstanceBusinessKey
        in: query
        description: Only return tasks which are part of the process instance with
          the given business key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processInstanceBusinessKeyLike
        in: query
        description: Only return tasks which are part of the process instance which
          has a business key like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionId
        in: query
        description: Only return tasks which are part of a process instance which
          has a process definition with the given id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionKey
        in: query
        description: Only return tasks which are part of a process instance which
          has a process definition with the given key.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionKeyLike
        in: query
        description: Only return tasks which are part of a process instance which
          has a process definition with a key like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionName
        in: query
        description: Only return tasks which are part of a process instance which
          has a process definition with the given name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: processDefinitionNameLike
        in: query
        description: Only return tasks which are part of a process instance which
          has a process definition with a name like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: executionId
        in: query
        description: Only return tasks which are part of the execution with the given
          id.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createdOn
        in: query
        description: Only return tasks which are created on the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: createdBefore
        in: query
        description: Only return tasks which are created before the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: createdAfter
        in: query
        description: Only return tasks which are created after the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueDate
        in: query
        description: Only return tasks which are due on the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueBefore
        in: query
        description: Only return tasks which are due before the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: dueAfter
        in: query
        description: Only return tasks which are due after the given date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: withoutDueDate
        in: query
        description: Only return tasks which do not have a due date. The property
          is ignored if the value is false.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: excludeSubTasks
        in: query
        description: Only return tasks that are not a subtask of another task.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: active
        in: query
        description: "If true, only return tasks that are not suspended (either part\
          \ of a process that is not suspended or not part of a process at all). If\
          \ false, only tasks that are part of suspended process instances are returned."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: includeTaskLocalVariables
        in: query
        description: Indication to include task local variables in the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: includeProcessVariables
        in: query
        description: Indication to include process variables in the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scopeDefinitionId
        in: query
        description: Only return tasks with the given scopeDefinitionId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scopeId
        in: query
        description: Only return tasks with the given scopeId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutScopeId
        in: query
        description: "If true, only returns tasks without a scope id set. If false,\
          \ the withoutScopeId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scopeType
        in: query
        description: Only return tasks with the given scopeType.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: propagatedStageInstanceId
        in: query
        description: Only return tasks which have the given id as propagated stage
          instance id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantId
        in: query
        description: Only return tasks with the given tenantId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tenantIdLike
        in: query
        description: Only return tasks with a tenantId like the given value.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutTenantId
        in: query
        description: "If true, only returns tasks without a tenantId set. If false,\
          \ the withoutTenantId parameter is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: candidateOrAssigned
        in: query
        description: Select tasks that has been claimed or assigned to user or waiting
          to claim by user (candidate user or groups).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: |
          Select tasks with the given category. Note that this is the task category, not the category of the process definition (namespace within the BPMN Xml).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryIn
        in: query
        description: |
          Select tasks for the given categories. Note that this is the task category, not the category of the process definition (namespace within the BPMN Xml).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryNotIn
        in: query
        description: |
          Select tasks which are not assigned to the given categories. Does not return tasks without categories. Note that this is the task category, not the category of the process definition (namespace within the BPMN Xml).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: withoutCategory
        in: query
        description: |
          Select tasks without a category assigned. Note that this is the task category, not the category of the process definition (namespace within the BPMN Xml).
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the tasks are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTaskResponse'
        "404":
          description: Indicates a parameter was passed in the wrong format or that
            delegationState has an invalid value (other than pending and resolved).
            The status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Tasks
      summary: Update Tasks
      operationId: bulkUpdateTasks
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BulkTasksRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTaskResponse'
        "201":
          description: Indicates request was successful and the tasks are returned
          content: {}
        "400":
          description: Indicates a parameter was passed in the wrong format or that
            delegationState has an invalid value (other than pending and resolved).
            The status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    post:
      tags:
      - Tasks
      summary: Create Task
      operationId: createTask
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        "201":
          description: Indicates request was successful and the tasks are returned
          content: {}
        "400":
          description: Indicates a parameter was passed in the wrong format or that
            delegationState has an invalid value (other than pending and resolved).
            The status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/tasks/{taskId}:
    get:
      tags:
      - Tasks
      summary: Get a task
      operationId: getTask
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Tasks
      summary: Update a task
      description: "All request values are optional. For example, you can only include\
        \ the assignee attribute in the request body JSON-object, only updating the\
        \ assignee of the task, leaving all other fields unaffected. When an attribute\
        \ is explicitly included and is set to null, the task-value will be updated\
        \ to null. Example: {\"dueDate\" : null} will clear the duedate of the task)."
      operationId: updateTask
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: false
      responses:
        "200":
          description: Indicates the task was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        "404":
          description: Indicates the requested task was not found.
          content: {}
        "409":
          description: Indicates the requested task was updated simultaneously.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    post:
      tags:
      - Tasks
      summary: Tasks actions
      operationId: executeTaskAction
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TaskActionRequest'
        required: false
      responses:
        "200":
          description: Indicates the action was executed.
          content: {}
        "400":
          description: When the body contains an invalid value or when the assignee
            is missing when the action requires it.
          content: {}
        "404":
          description: Indicates the requested task was not found.
          content: {}
        "409":
          description: "Indicates the action cannot be performed due to a conflict.\
            \ Either the task was updates simultaneously or the task was claimed by\
            \ another user, in case of the claim action."
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Tasks
      summary: Delete a task
      operationId: deleteTask
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cascadeHistory
        in: query
        description: "Whether or not to delete the HistoricTask instance when deleting\
          \ the task (if applicable). If not provided, this value defaults to false."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deleteReason
        in: query
        description: Reason why the task is deleted. This value is ignored when cascadeHistory
          is true.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Indicates the task was found and has been deleted. Response-body
            is intentionally empty.
          content: {}
        "403":
          description: Indicates the requested task cannot be deleted because it’s
            part of a workflow.
          content: {}
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/attachments:
    get:
      tags:
      - Task Attachments
      summary: List attachments on a task
      operationId: listTaskAttachments
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the attachments are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Task Attachments
      summary: "Create a new attachment on a task, containing a link to an external\
        \ resource or an attached file"
      description: |-
        This endpoint can be used in 2 ways: By passing a JSON Body (AttachmentRequest) to link an external resource or by passing a multipart/form-data Object to attach a file.
        NB: Swagger V2 specification does not support this use case that is why this endpoint might be buggy/incomplete if used with other tools.
      operationId: createAttachment
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/taskId_attachments_body'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/taskId_attachments_body_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentResponse'
        "201":
          description: Indicates the attachment was created and the result is returned.
          content: {}
        "400":
          description: Indicates the attachment name is missing from the request.
          content: {}
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/tasks/{taskId}/attachments/{attachmentId}:
    get:
      tags:
      - Task Attachments
      summary: Get an attachment on a task
      operationId: getAttachment
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attachmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task and attachment were found and the attachment
            is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentResponse'
        "404":
          description: Indicates the requested task was not found or the tasks does
            not have a attachment with the given ID.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Task Attachments
      summary: Delete an attachment on a task
      operationId: deleteAttachment
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attachmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the task and attachment were found and the attachment
            is deleted. Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested task was not found or the tasks does
            not have a attachment with the given ID.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/attachments/{attachmentId}/content:
    get:
      tags:
      - Task Attachments
      summary: Get the content for an attachment
      description: "The response body contains the binary content. By default, the\
        \ content-type of the response is set to application/octet-stream unless the\
        \ attachment type contains a valid Content-type."
      operationId: getAttachmentContent
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attachmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task and attachment was found and the requested
            content is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested task was not found or the task does
            not have an attachment with the given id or the attachment does not have
            a binary stream available. Status message provides additional information.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/comments:
    get:
      tags:
      - Task Comments
      summary: List comments on a task
      operationId: listTaskComments
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the comments are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Task Comments
      summary: Create a new comment on a task
      operationId: createTaskComments
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        "201":
          description: Indicates the comment was created and the result is returned.
          content: {}
        "400":
          description: Indicates the comment is missing from the request.
          content: {}
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/tasks/{taskId}/comments/{commentId}:
    get:
      tags:
      - Task Comments
      summary: ' Get a comment on a task'
      operationId: getTaskComment
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task and comment were found and the comment is
            returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        "404":
          description: Indicates the requested task was not found or the tasks does
            not have a comment with the given ID.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Task Comments
      summary: Delete a comment on a task
      operationId: deleteTaskComment
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the task and comment were found and the comment is
            deleted. Response body is left empty intentionally.
          content: {}
        "404":
          description: Indicates the requested task was not found or the tasks does
            not have a comment with the given ID.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/events:
    get:
      tags:
      - Tasks
      summary: List events for a task
      operationId: listTaskEvents
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the events are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/events/{eventId}:
    get:
      tags:
      - Tasks
      summary: Get an event on a task
      operationId: getEvent
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task and event were found and the event is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        "404":
          description: Indicates the requested task was not found or the tasks does
            not have an event with the given ID.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Tasks
      summary: Delete an event on a task
      operationId: deleteEvent
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the task was found and the events are returned.
          content: {}
        "404":
          description: Indicates the requested task was not found or the task does
            not have the requested event.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/form:
    get:
      tags:
      - Tasks
      summary: Get a task form
      operationId: getTaskForm
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the task form is returned
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/identitylinks:
    get:
      tags:
      - Task Identity Links
      summary: List identity links for a task
      operationId: listTasksInstanceIdentityLinks
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the requested identity links
            are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestIdentityLink'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Task Identity Links
      summary: Create an identity link on a task
      description: It is possible to add either a user or a group.
      operationId: createTaskInstanceIdentityLinks
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestIdentityLink'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestIdentityLink'
        "201":
          description: Indicates the task was found and the identity link was created.
          content: {}
        "404":
          description: Indicates the requested task was not found or the task does
            not have the requested identityLink. The status contains additional information
            about this error.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /runtime/tasks/{taskId}/identitylinks/{family}:
    get:
      tags:
      - Task Identity Links
      summary: List identity links for a task for either groups or users
      description: Returns only identity links targeting either users or groups. Response
        body and status-codes are exactly the same as when getting the full list of
        identity links for a task.
      operationId: listIdentityLinksForFamily
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: family
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the requested identity links
            are returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestIdentityLink'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/identitylinks/{family}/{identityId}/{type}:
    get:
      tags:
      - Task Identity Links
      summary: Get a single identity link on a task
      operationId: getTaskInstanceIdentityLinks
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: family
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: identityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task and identity link was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestIdentityLink'
        "404":
          description: Indicates the requested task was not found or the task does
            not have the requested identityLink. The status contains additional information
            about this error.
          content: {}
      security:
      - basicAuth: []
    delete:
      tags:
      - Task Identity Links
      summary: Delete an identity link on a task
      operationId: deleteTaskInstanceIdentityLinks
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: family
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: identityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates the task and identity link were found and the link
            has been deleted. Response-body is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested task was not found or the task does
            not have the requested identityLink. The status contains additional information
            about this error.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/subtasks:
    get:
      tags:
      - Tasks
      summary: List of sub tasks for a task
      operationId: listTaskSubtasks
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates request was successful and the  sub tasks are returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/variables:
    get:
      tags:
      - Task Variables
      summary: List variables for a task
      operationId: listTaskVariables
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        description: "Scope of variable to be returned. When local, only task-local\
          \ variable value is returned. When global, only variable value from the\
          \ task’s parent execution-hierarchy are returned. When the parameter is\
          \ omitted, a local variable will be returned if it exists, otherwise a global\
          \ variable."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the requested variables are
            returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestVariable'
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found..
          content: {}
      security:
      - basicAuth: []
    post:
      tags:
      - Tasks
      - Task Variables
      summary: Create new variables on a task
      description: "This endpoint can be used in 2 ways: By passing a JSON Body (RestVariable\
        \ or an Array of RestVariable) or by passing a multipart/form-data Object.\n\
        It is possible to create simple (non-binary) variable or list of variables\
        \ or new binary variable \nAny number of variables can be passed into the\
        \ request body array.\nNB: Swagger V2 specification does not support this\
        \ use case that is why this endpoint might be buggy/incomplete if used with\
        \ other tools."
      operationId: createTaskVariable
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/taskId_variables_body'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/taskId_variables_body_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "201":
          description: Indicates the variables were created and the result is returned.
          content: {}
        "400":
          description: Indicates the name of a variable to create was missing or that
            an attempt is done to create a variable on a standalone task (without
            a process associated) with scope global or an empty array of variables
            was included in the request or request did not contain an array of variables.
            Status message provides additional information.
          content: {}
        "404":
          description: Indicates the requested task was not found.
          content: {}
        "409":
          description: Indicates the task already has a variable with the given name.
            Use the PUT method to update the task variable instead.
          content: {}
        "415":
          description: Indicates the serializable data contains an object for which
            no class is present in the JVM running the Flowable engine and therefore
            cannot be deserialized.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Tasks
      summary: Delete all local variables on a task
      operationId: deleteAllLocalTaskVariables
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Indicates all local task variables have been deleted. Response-body
            is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested task was not found.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/variables/{variableName}:
    get:
      tags:
      - Task Variables
      summary: Get a variable from a task
      operationId: getTaskInstanceVariable
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        description: "Scope of variable to be returned. When local, only task-local\
          \ variable value is returned. When global, only variable value from the\
          \ task’s parent execution-hierarchy are returned. When the parameter is\
          \ omitted, a local variable will be returned if it exists, otherwise a global\
          \ variable."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the requested variables are
            returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestVariable'
        "404":
          description: Indicates the requested task was not found or the task does
            not have a variable with the given name (in the given scope). Status message
            provides additional information.
          content: {}
      security:
      - basicAuth: []
    put:
      tags:
      - Task Variables
      summary: Update an existing variable on a task
      description: "This endpoint can be used in 2 ways: By passing a JSON Body (RestVariable)\
        \ or by passing a multipart/form-data Object.\nIt is possible to update simple\
        \ (non-binary) variable or  binary variable \nAny number of variables can\
        \ be passed into the request body array.\nNB: Swagger V2 specification does\
        \ not support this use case that is why this endpoint might be buggy/incomplete\
        \ if used with other tools."
      operationId: updateTaskInstanceVariable
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables_variableName_body_4'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/variables_variableName_body_5'
      responses:
        "200":
          description: Indicates the variables was updated and the result is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestVariable'
        "400":
          description: Indicates the name of a variable to update was missing or that
            an attempt is done to update a variable on a standalone task (without
            a process associated) with scope global. Status message provides additional
            information.
          content: {}
        "404":
          description: Indicates the requested task was not found or the task does
            not have a variable with the given name in the given scope. Status message
            contains additional information about the error.
          content: {}
        "415":
          description: Indicates the serializable data contains an object for which
            no class is present in the JVM running the Flowable engine and therefore
            cannot be deserialized.
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Task Variables
      summary: Delete a variable on a task
      operationId: deleteTaskInstanceVariable
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        description: "Scope of variable to be returned. When local, only task-local\
          \ variable value is returned. When global, only variable value from the\
          \ task’s parent execution-hierarchy are returned. When the parameter is\
          \ omitted, a local variable will be returned if it exists, otherwise a global\
          \ variable."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Indicates the task variable was found and has been deleted.
            Response-body is intentionally empty.
          content: {}
        "404":
          description: Indicates the requested task was not found or the task does
            not have a variable with the given name. Status message contains additional
            information about the error.
          content: {}
      security:
      - basicAuth: []
  /runtime/tasks/{taskId}/variables/{variableName}/data:
    get:
      tags:
      - Task Variables
      summary: Get the binary data for a variable
      description: "The response body contains the binary value of the variable. When\
        \ the variable is of type binary, the content-type of the response is set\
        \ to application/octet-stream, regardless of the content of the variable or\
        \ the request accept-type header. In case of serializable, application/x-java-serialized-object\
        \ is used as content-type."
      operationId: getTaskVariableData
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: variableName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scope
        in: query
        description: "Scope of variable to be returned. When local, only task-local\
          \ variable value is returned. When global, only variable value from the\
          \ task’s parent execution-hierarchy are returned. When the parameter is\
          \ omitted, a local variable will be returned if it exists, otherwise a global\
          \ variable."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates the task was found and the requested variables are
            returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: application/json
        "404":
          description: Indicates the requested task was not found or the task does
            not have a variable with the given name (in the given scope). Status message
            provides additional information.
          content: {}
      security:
      - basicAuth: []
  /runtime/variable-instances:
    get:
      tags:
      - History
      summary: List of variable instances
      operationId: listVariableInstances
      parameters:
      - name: processInstanceId
        in: query
        description: The process instance id of the variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: taskId
        in: query
        description: The task id of the variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeTaskVariables
        in: query
        description: Indication to exclude the task variables from the result.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: excludeLocalVariables
        in: query
        description: Indication to exclude local variables or not.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: variableName
        in: query
        description: The variable name of the variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: variableNameLike
        in: query
        description: The variable name using the like operator for the variable instance.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Indicates that variable instances could be queried.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseVariableInstanceResponse'
        "400":
          description: Indicates an parameter was passed in the wrong format. The
            status-message contains additional information.
          content: {}
      security:
      - basicAuth: []
  /runtime/variable-instances/{varInstanceId}/data:
    get:
      tags:
      - Runtime
      summary: Get the binary data for a variable instance
      description: "The response body contains the binary value of the variable. When\
        \ the variable is of type binary, the content-type of the response is set\
        \ to application/octet-stream, regardless of the content of the variable or\
        \ the request accept-type header. In case of serializable, application/x-java-serialized-object\
        \ is used as content-type."
      operationId: getVariableInstanceData
      parameters:
      - name: varInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Indicates the variable instance was found and the requested
            variable data is returned.
          content:
            '*/*':
              schema:
                type: array
                items:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                x-content-type: '*/*'
        "404":
          description: Indicates the requested variable instance was not found or
            the variable instance does not have a variable with the given name or
            the variable does not have a binary stream available. Status message provides
            additional information.
          content: {}
      security:
      - basicAuth: []
components:
  schemas:
    ActivityInstanceQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        activityId:
          type: string
        activityInstanceId:
          type: string
        activityName:
          type: string
        activityType:
          type: string
        executionId:
          type: string
        finished:
          type: boolean
        taskAssignee:
          type: string
        processInstanceId:
          type: string
        processDefinitionId:
          type: string
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
    ActivityInstanceResponse:
      type: object
      properties:
        id:
          type: string
          example: "5"
        activityId:
          type: string
          example: "4"
        activityName:
          type: string
          example: My user task
        activityType:
          type: string
          example: userTask
        processDefinitionId:
          type: string
          example: oneTaskProcess%3A1%3A4
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        processInstanceId:
          type: string
          example: "3"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/runtime/process-instances/3
        executionId:
          type: string
          example: "4"
        taskId:
          type: string
          example: "4"
        calledProcessInstanceId:
          type: string
          example: "null"
        assignee:
          type: string
          example: fozzie
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        durationInMillis:
          type: integer
          format: int64
          example: 86400056
        tenantId:
          type: string
          example: "null"
      example:
        processDefinitionId: oneTaskProcess%3A1%3A4
        processInstanceId: "3"
        durationInMillis: 86400056
        activityName: My user task
        activityId: "4"
        processInstanceUrl: http://localhost:8182/runtime/process-instances/3
        executionId: "4"
        tenantId: "null"
        startTime: 2000-01-23T04:56:07.000+00:00
        id: "5"
        assignee: fozzie
        endTime: 2000-01-23T04:56:07.000+00:00
        activityType: userTask
        calledProcessInstanceId: "null"
        taskId: "4"
        processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
    Artifact:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
      example:
        xmlColumnNumber: 8
        extensionElements:
          key:
          - null
          - null
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 6
    AttachmentResponse:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
        userId:
          type: string
        description:
          type: string
        type:
          type: string
          description: "Can be any arbitrary value. When a valid formatted media-type\
            \ (e.g. application/xml, text/plain) is included, the binary content HTTP\
            \ response content-type will be set the given value."
        taskUrl:
          type: string
        processInstanceUrl:
          type: string
        externalUrl:
          type: string
          description: "contentUrl:In case the attachment is a link to an external\
            \ resource, the externalUrl contains the URL to the external content.\
            \ If the attachment content is present in the Flowable engine, the contentUrl\
            \ will contain an URL where the binary content can be streamed from."
        contentUrl:
          type: string
        time:
          type: string
          format: date-time
      example:
        processInstanceUrl: processInstanceUrl
        externalUrl: externalUrl
        contentUrl: contentUrl
        taskUrl: taskUrl
        name: name
        description: description
        id: id
        time: 2000-01-23T04:56:07.000+00:00
        type: type
        userId: userId
        url: url
    BaseElement:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
      example:
        xmlColumnNumber: 2
        extensionElements:
          key:
          - null
          - null
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 1
    BatchPartResponse:
      type: object
      properties:
        id:
          type: string
          example: "8"
        url:
          type: string
          example: http://localhost:8182/management/batch-parts/8
        batchId:
          type: string
          example: "4"
        batchUrl:
          type: string
          example: http://localhost:8182/management/batch/4
        batchType:
          type: string
          example: processMigration
        searchKey:
          type: string
          example: 1:22:MP
        searchKey2:
          type: string
          example: 1:24:MP
        scopeId:
          type: string
          example: "1"
        subScopeId:
          type: string
          example: "2"
        scopeType:
          type: string
          example: bpmn
        createTime:
          type: string
          format: date-time
        completeTime:
          type: string
          format: date-time
        status:
          type: string
          example: completed
        tenantId:
          type: string
          example: "null"
      example:
        scopeId: "1"
        completeTime: 2000-01-23T04:56:07.000+00:00
        searchKey: 1:22:MP
        batchId: "4"
        url: http://localhost:8182/management/batch-parts/8
        batchUrl: http://localhost:8182/management/batch/4
        subScopeId: "2"
        scopeType: bpmn
        createTime: 2000-01-23T04:56:07.000+00:00
        tenantId: "null"
        searchKey2: 1:24:MP
        id: "8"
        batchType: processMigration
        status: completed
    BatchResponse:
      type: object
      properties:
        id:
          type: string
          example: "8"
        url:
          type: string
          example: http://localhost:8182/management/batches/8
        batchType:
          type: string
          example: processMigration
        searchKey:
          type: string
          example: 1:22:MP
        searchKey2:
          type: string
          example: 1:24:MP
        createTime:
          type: string
          format: date-time
        completeTime:
          type: string
          format: date-time
        status:
          type: string
          example: completed
        tenantId:
          type: string
          example: "null"
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        tenantId: "null"
        searchKey2: 1:24:MP
        completeTime: 2000-01-23T04:56:07.000+00:00
        id: "8"
        searchKey: 1:22:MP
        batchType: processMigration
        url: http://localhost:8182/management/batches/8
        status: completed
    BpmnDiEdge:
      type: object
      properties:
        sourceDockerInfo:
          $ref: '#/components/schemas/GraphicInfo'
        targetDockerInfo:
          $ref: '#/components/schemas/GraphicInfo'
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/GraphicInfo'
      example:
        targetDockerInfo: null
        sourceDockerInfo: null
        waypoints:
        - null
        - null
    BpmnModel:
      type: object
      properties:
        definitionsAttributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/Process'
        locationMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GraphicInfo'
        labelLocationMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GraphicInfo'
        flowLocationMap:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/GraphicInfo'
        edgeMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BpmnDiEdge'
        signals:
          type: array
          items:
            $ref: '#/components/schemas/Signal'
        pools:
          type: array
          items:
            $ref: '#/components/schemas/Pool'
        imports:
          type: array
          items:
            $ref: '#/components/schemas/Import'
        interfaces:
          type: array
          items:
            $ref: '#/components/schemas/Interface'
        globalArtifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        targetNamespace:
          type: string
        sourceSystemId:
          type: string
        userTaskFormTypes:
          type: array
          items:
            type: string
        startEventFormTypes:
          type: array
          items:
            type: string
        exporter:
          type: string
        exporterVersion:
          type: string
        mainProcess:
          $ref: '#/components/schemas/Process'
        messageFlows:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessageFlow'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        errors:
          type: object
          additionalProperties:
            type: string
        escalations:
          type: array
          items:
            $ref: '#/components/schemas/Escalation'
        itemDefinitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ItemDefinition'
        dataStores:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataStore'
        namespaces:
          type: object
          additionalProperties:
            type: string
      example:
        globalArtifacts:
        - null
        - null
        escalations:
        - xmlColumnNumber: 4
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          escalationCode: escalationCode
          xmlRowNumber: 3
        - xmlColumnNumber: 4
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          escalationCode: escalationCode
          xmlRowNumber: 3
        exporterVersion: exporterVersion
        pools:
        - xmlColumnNumber: 3
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          processRef: processRef
          xmlRowNumber: 3
          executable: true
        - xmlColumnNumber: 3
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          processRef: processRef
          xmlRowNumber: 3
          executable: true
        messageFlows:
          key:
            targetRef: targetRef
            xmlColumnNumber: 3
            extensionElements:
              key:
              - null
              - null
            messageRef: messageRef
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            sourceRef: sourceRef
            xmlRowNumber: 3
        edgeMap:
          key:
            targetDockerInfo: null
            sourceDockerInfo: null
            waypoints:
            - null
            - null
        locationMap:
          key:
            expanded: true
            xmlColumnNumber: 6
            x: 9.018348186070783
            width: 6.965117697638846
            "y": 6.438423552598547
            xmlRowNumber: 6
            height: 3.5571952270680973
            element:
              xmlColumnNumber: 2
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 1
        exporter: exporter
        targetNamespace: targetNamespace
        definitionsAttributes:
          key:
          - name: name
            namespace: namespace
            value: value
            namespacePrefix: namespacePrefix
          - name: name
            namespace: namespace
            value: value
            namespacePrefix: namespacePrefix
        labelLocationMap:
          key: null
        dataStores:
          key:
            xmlColumnNumber: 6
            extensionElements:
              key:
              - null
              - null
            itemSubjectRef: itemSubjectRef
            name: name
            dataState: dataState
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 0
        processes:
        - dataObjects:
          - xmlColumnNumber: 6
            executionListeners:
            - null
            - null
            extensionElements:
              key:
              - null
              - null
            documentation: documentation
            itemSubjectRef:
              xmlColumnNumber: 1
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              itemKind: itemKind
              structureRef: structureRef
              xmlRowNumber: 7
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            type: type
            value: {}
            xmlRowNumber: 1
          - xmlColumnNumber: 6
            executionListeners:
            - null
            - null
            extensionElements:
              key:
              - null
              - null
            documentation: documentation
            itemSubjectRef:
              xmlColumnNumber: 1
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              itemKind: itemKind
              structureRef: structureRef
              xmlRowNumber: 7
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            type: type
            value: {}
            xmlRowNumber: 1
          flowElements:
          - null
          - null
          extensionElements:
            key:
            - xmlColumnNumber: 5
              elementText: elementText
              extensionElements:
                key:
                - null
                - null
              childElements:
                key:
                - null
                - null
              name: name
              namespace: namespace
              attributes:
                key:
                - null
                - null
              id: id
              namespacePrefix: namespacePrefix
              xmlRowNumber: 1
            - xmlColumnNumber: 5
              elementText: elementText
              extensionElements:
                key:
                - null
                - null
              childElements:
                key:
                - null
                - null
              name: name
              namespace: namespace
              attributes:
                key:
                - null
                - null
              id: id
              namespacePrefix: namespacePrefix
              xmlRowNumber: 1
          documentation: documentation
          candidateStarterUsers:
          - candidateStarterUsers
          - candidateStarterUsers
          executable: true
          flowElementMap:
            key:
              xmlColumnNumber: 9
              executionListeners:
              - null
              - null
              extensionElements:
                key:
                - null
                - null
              documentation: documentation
              name: name
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 9
          artifactMap:
            key:
              xmlColumnNumber: 8
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 6
          ioSpecification:
            dataOutputs:
            - null
            - null
            xmlColumnNumber: 2
            dataInputRefs:
            - dataInputRefs
            - dataInputRefs
            dataInputs:
            - xmlColumnNumber: 9
              extensionElements:
                key:
                - null
                - null
              itemSubjectRef: itemSubjectRef
              name: name
              attributes:
                key:
                - null
                - null
              id: id
              collection: true
              xmlRowNumber: 7
            - xmlColumnNumber: 9
              extensionElements:
                key:
                - null
                - null
              itemSubjectRef: itemSubjectRef
              name: name
              attributes:
                key:
                - null
                - null
              id: id
              collection: true
              xmlRowNumber: 7
            extensionElements:
              key:
              - null
              - null
            dataOutputRefs:
            - dataOutputRefs
            - dataOutputRefs
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 5
          eventListeners:
          - implementationType: implementationType
            onTransaction: onTransaction
            xmlColumnNumber: 5
            extensionElements:
              key:
              - null
              - null
            entityType: entityType
            implementation: implementation
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
            events: events
          - implementationType: implementationType
            onTransaction: onTransaction
            xmlColumnNumber: 5
            extensionElements:
              key:
              - null
              - null
            entityType: entityType
            implementation: implementation
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
            events: events
          initialFlowElement: null
          xmlColumnNumber: 6
          executionListeners:
          - implementationType: implementationType
            onTransaction: onTransaction
            customPropertiesResolverImplementation: customPropertiesResolverImplementation
            xmlColumnNumber: 2
            extensionElements:
              key:
              - null
              - null
            implementation: implementation
            attributes:
              key:
              - null
              - null
            customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
            id: id
            fieldExtensions:
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            event: event
            xmlRowNumber: 3
          - implementationType: implementationType
            onTransaction: onTransaction
            customPropertiesResolverImplementation: customPropertiesResolverImplementation
            xmlColumnNumber: 2
            extensionElements:
              key:
              - null
              - null
            implementation: implementation
            attributes:
              key:
              - null
              - null
            customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
            id: id
            fieldExtensions:
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            event: event
            xmlRowNumber: 3
          enableEagerExecutionTreeFetching: true
          name: name
          lanes:
          - xmlColumnNumber: 1
            extensionElements:
              key:
              - null
              - null
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            parentProcess: null
            xmlRowNumber: 1
            flowReferences:
            - flowReferences
            - flowReferences
          - xmlColumnNumber: 1
            extensionElements:
              key:
              - null
              - null
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            parentProcess: null
            xmlRowNumber: 1
            flowReferences:
            - flowReferences
            - flowReferences
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 0
          candidateStarterGroups:
          - candidateStarterGroups
          - candidateStarterGroups
          artifacts:
          - null
          - null
        - dataObjects:
          - xmlColumnNumber: 6
            executionListeners:
            - null
            - null
            extensionElements:
              key:
              - null
              - null
            documentation: documentation
            itemSubjectRef:
              xmlColumnNumber: 1
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              itemKind: itemKind
              structureRef: structureRef
              xmlRowNumber: 7
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            type: type
            value: {}
            xmlRowNumber: 1
          - xmlColumnNumber: 6
            executionListeners:
            - null
            - null
            extensionElements:
              key:
              - null
              - null
            documentation: documentation
            itemSubjectRef:
              xmlColumnNumber: 1
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              itemKind: itemKind
              structureRef: structureRef
              xmlRowNumber: 7
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            type: type
            value: {}
            xmlRowNumber: 1
          flowElements:
          - null
          - null
          extensionElements:
            key:
            - xmlColumnNumber: 5
              elementText: elementText
              extensionElements:
                key:
                - null
                - null
              childElements:
                key:
                - null
                - null
              name: name
              namespace: namespace
              attributes:
                key:
                - null
                - null
              id: id
              namespacePrefix: namespacePrefix
              xmlRowNumber: 1
            - xmlColumnNumber: 5
              elementText: elementText
              extensionElements:
                key:
                - null
                - null
              childElements:
                key:
                - null
                - null
              name: name
              namespace: namespace
              attributes:
                key:
                - null
                - null
              id: id
              namespacePrefix: namespacePrefix
              xmlRowNumber: 1
          documentation: documentation
          candidateStarterUsers:
          - candidateStarterUsers
          - candidateStarterUsers
          executable: true
          flowElementMap:
            key:
              xmlColumnNumber: 9
              executionListeners:
              - null
              - null
              extensionElements:
                key:
                - null
                - null
              documentation: documentation
              name: name
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 9
          artifactMap:
            key:
              xmlColumnNumber: 8
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 6
          ioSpecification:
            dataOutputs:
            - null
            - null
            xmlColumnNumber: 2
            dataInputRefs:
            - dataInputRefs
            - dataInputRefs
            dataInputs:
            - xmlColumnNumber: 9
              extensionElements:
                key:
                - null
                - null
              itemSubjectRef: itemSubjectRef
              name: name
              attributes:
                key:
                - null
                - null
              id: id
              collection: true
              xmlRowNumber: 7
            - xmlColumnNumber: 9
              extensionElements:
                key:
                - null
                - null
              itemSubjectRef: itemSubjectRef
              name: name
              attributes:
                key:
                - null
                - null
              id: id
              collection: true
              xmlRowNumber: 7
            extensionElements:
              key:
              - null
              - null
            dataOutputRefs:
            - dataOutputRefs
            - dataOutputRefs
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 5
          eventListeners:
          - implementationType: implementationType
            onTransaction: onTransaction
            xmlColumnNumber: 5
            extensionElements:
              key:
              - null
              - null
            entityType: entityType
            implementation: implementation
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
            events: events
          - implementationType: implementationType
            onTransaction: onTransaction
            xmlColumnNumber: 5
            extensionElements:
              key:
              - null
              - null
            entityType: entityType
            implementation: implementation
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
            events: events
          initialFlowElement: null
          xmlColumnNumber: 6
          executionListeners:
          - implementationType: implementationType
            onTransaction: onTransaction
            customPropertiesResolverImplementation: customPropertiesResolverImplementation
            xmlColumnNumber: 2
            extensionElements:
              key:
              - null
              - null
            implementation: implementation
            attributes:
              key:
              - null
              - null
            customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
            id: id
            fieldExtensions:
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            event: event
            xmlRowNumber: 3
          - implementationType: implementationType
            onTransaction: onTransaction
            customPropertiesResolverImplementation: customPropertiesResolverImplementation
            xmlColumnNumber: 2
            extensionElements:
              key:
              - null
              - null
            implementation: implementation
            attributes:
              key:
              - null
              - null
            customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
            id: id
            fieldExtensions:
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            - xmlColumnNumber: 7
              stringValue: stringValue
              fieldName: fieldName
              expression: expression
              extensionElements:
                key:
                - null
                - null
              attributes:
                key:
                - null
                - null
              id: id
              xmlRowNumber: 4
            event: event
            xmlRowNumber: 3
          enableEagerExecutionTreeFetching: true
          name: name
          lanes:
          - xmlColumnNumber: 1
            extensionElements:
              key:
              - null
              - null
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            parentProcess: null
            xmlRowNumber: 1
            flowReferences:
            - flowReferences
            - flowReferences
          - xmlColumnNumber: 1
            extensionElements:
              key:
              - null
              - null
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            parentProcess: null
            xmlRowNumber: 1
            flowReferences:
            - flowReferences
            - flowReferences
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 0
          candidateStarterGroups:
          - candidateStarterGroups
          - candidateStarterGroups
          artifacts:
          - null
          - null
        interfaces:
        - xmlColumnNumber: 6
          operations:
          - xmlColumnNumber: 4
            errorMessageRef:
            - errorMessageRef
            - errorMessageRef
            extensionElements:
              key:
              - null
              - null
            outMessageRef: outMessageRef
            name: name
            implementationRef: implementationRef
            attributes:
              key:
              - null
              - null
            id: id
            inMessageRef: inMessageRef
            xmlRowNumber: 0
          - xmlColumnNumber: 4
            errorMessageRef:
            - errorMessageRef
            - errorMessageRef
            extensionElements:
              key:
              - null
              - null
            outMessageRef: outMessageRef
            name: name
            implementationRef: implementationRef
            attributes:
              key:
              - null
              - null
            id: id
            inMessageRef: inMessageRef
            xmlRowNumber: 0
          extensionElements:
            key:
            - null
            - null
          name: name
          implementationRef: implementationRef
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 7
        - xmlColumnNumber: 6
          operations:
          - xmlColumnNumber: 4
            errorMessageRef:
            - errorMessageRef
            - errorMessageRef
            extensionElements:
              key:
              - null
              - null
            outMessageRef: outMessageRef
            name: name
            implementationRef: implementationRef
            attributes:
              key:
              - null
              - null
            id: id
            inMessageRef: inMessageRef
            xmlRowNumber: 0
          - xmlColumnNumber: 4
            errorMessageRef:
            - errorMessageRef
            - errorMessageRef
            extensionElements:
              key:
              - null
              - null
            outMessageRef: outMessageRef
            name: name
            implementationRef: implementationRef
            attributes:
              key:
              - null
              - null
            id: id
            inMessageRef: inMessageRef
            xmlRowNumber: 0
          extensionElements:
            key:
            - null
            - null
          name: name
          implementationRef: implementationRef
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 7
        imports:
        - xmlColumnNumber: 0
          importType: importType
          extensionElements:
            key:
            - null
            - null
          namespace: namespace
          attributes:
            key:
            - null
            - null
          location: location
          id: id
          xmlRowNumber: 7
        - xmlColumnNumber: 0
          importType: importType
          extensionElements:
            key:
            - null
            - null
          namespace: namespace
          attributes:
            key:
            - null
            - null
          location: location
          id: id
          xmlRowNumber: 7
        sourceSystemId: sourceSystemId
        resources:
        - xmlColumnNumber: 7
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 8
        - xmlColumnNumber: 7
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 8
        flowLocationMap:
          key:
          - null
          - null
        signals:
        - xmlColumnNumber: 6
          extensionElements:
            key:
            - null
            - null
          scope: scope
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 5
        - xmlColumnNumber: 6
          extensionElements:
            key:
            - null
            - null
          scope: scope
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 5
        startEventFormTypes:
        - startEventFormTypes
        - startEventFormTypes
        userTaskFormTypes:
        - userTaskFormTypes
        - userTaskFormTypes
        itemDefinitions:
          key: null
        messages:
        - xmlColumnNumber: 5
          itemRef: itemRef
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 7
        - xmlColumnNumber: 5
          itemRef: itemRef
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 7
        mainProcess: null
        errors:
          key: errors
        namespaces:
          key: namespaces
    BulkDeleteInstancesRestActionRequest:
      type: object
      properties:
        action:
          type: string
        instanceIds:
          type: array
          items:
            type: string
        deleteReason:
          type: string
    BulkMoveDeadLetterActionRequest:
      type: object
      properties:
        action:
          type: string
        jobIds:
          type: array
          items:
            type: string
    BulkTasksRequest:
      type: object
      properties:
        owner:
          type: string
        assignee:
          type: string
        delegationState:
          type: string
        name:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        priority:
          type: integer
          format: int32
        parentTaskId:
          type: string
        category:
          type: string
        tenantId:
          type: string
        formKey:
          type: string
        ownerSet:
          type: boolean
        assigneeSet:
          type: boolean
        delegationStateSet:
          type: boolean
        nameSet:
          type: boolean
        descriptionSet:
          type: boolean
        duedateSet:
          type: boolean
        prioritySet:
          type: boolean
        parentTaskIdSet:
          type: boolean
        categorySet:
          type: boolean
        tenantIdSet:
          type: boolean
        formKeySet:
          type: boolean
        taskIds:
          type: array
          items:
            type: string
    CommentRequest:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        author:
          type: string
        message:
          type: string
        type:
          type: string
        saveProcessInstanceId:
          type: boolean
    CommentResponse:
      type: object
      properties:
        id:
          type: string
        author:
          type: string
        message:
          type: string
        time:
          type: string
          format: date-time
        taskId:
          type: string
        taskUrl:
          type: string
        processInstanceId:
          type: string
        processInstanceUrl:
          type: string
      example:
        processInstanceId: processInstanceId
        processInstanceUrl: processInstanceUrl
        taskUrl: taskUrl
        author: author
        id: id
        time: 2000-01-23T04:56:07.000+00:00
        message: message
        taskId: taskId
    DataResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties: {}
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
    DataResponseActivityInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processDefinitionId: oneTaskProcess%3A1%3A4
          processInstanceId: "3"
          durationInMillis: 86400056
          activityName: My user task
          activityId: "4"
          processInstanceUrl: http://localhost:8182/runtime/process-instances/3
          executionId: "4"
          tenantId: "null"
          startTime: 2000-01-23T04:56:07.000+00:00
          id: "5"
          assignee: fozzie
          endTime: 2000-01-23T04:56:07.000+00:00
          activityType: userTask
          calledProcessInstanceId: "null"
          taskId: "4"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        - processDefinitionId: oneTaskProcess%3A1%3A4
          processInstanceId: "3"
          durationInMillis: 86400056
          activityName: My user task
          activityId: "4"
          processInstanceUrl: http://localhost:8182/runtime/process-instances/3
          executionId: "4"
          tenantId: "null"
          startTime: 2000-01-23T04:56:07.000+00:00
          id: "5"
          assignee: fozzie
          endTime: 2000-01-23T04:56:07.000+00:00
          activityType: userTask
          calledProcessInstanceId: "null"
          taskId: "4"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseBatchResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BatchResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - createTime: 2000-01-23T04:56:07.000+00:00
          tenantId: "null"
          searchKey2: 1:24:MP
          completeTime: 2000-01-23T04:56:07.000+00:00
          id: "8"
          searchKey: 1:22:MP
          batchType: processMigration
          url: http://localhost:8182/management/batches/8
          status: completed
        - createTime: 2000-01-23T04:56:07.000+00:00
          tenantId: "null"
          searchKey2: 1:24:MP
          completeTime: 2000-01-23T04:56:07.000+00:00
          id: "8"
          searchKey: 1:22:MP
          batchType: processMigration
          url: http://localhost:8182/management/batches/8
          status: completed
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseDeploymentResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - name: flowable-examples.bar
          tenantId: tenantId
          parentDeploymentId: "12"
          id: "10"
          category: examples
          url: http://localhost:8081/flowable-rest/service/repository/deployments/10
          deploymentTime: 2010-10-13T14:54:26.75+02:00
        - name: flowable-examples.bar
          tenantId: tenantId
          parentDeploymentId: "12"
          id: "10"
          category: examples
          url: http://localhost:8081/flowable-rest/service/repository/deployments/10
          deploymentTime: 2010-10-13T14:54:26.75+02:00
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseEventSubscriptionResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EventSubscriptionResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processInstanceId: processInstanceId
          processDefinitionId: processDefinitionId
          scopeId: scopeId
          executionUrl: executionUrl
          configuration: configuration
          created: 2000-01-23T04:56:07.000+00:00
          eventType: eventType
          url: url
          activityId: activityId
          executionId: executionId
          processInstanceUrl: processInstanceUrl
          subScopeId: subScopeId
          scopeDefinitionId: scopeDefinitionId
          scopeType: scopeType
          tenantId: tenantId
          eventName: eventName
          id: id
          processDefinitionUrl: processDefinitionUrl
        - processInstanceId: processInstanceId
          processDefinitionId: processDefinitionId
          scopeId: scopeId
          executionUrl: executionUrl
          configuration: configuration
          created: 2000-01-23T04:56:07.000+00:00
          eventType: eventType
          url: url
          activityId: activityId
          executionId: executionId
          processInstanceUrl: processInstanceUrl
          subScopeId: subScopeId
          scopeDefinitionId: scopeDefinitionId
          scopeType: scopeType
          tenantId: tenantId
          eventName: eventName
          id: id
          processDefinitionUrl: processDefinitionUrl
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseExecutionResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processInstanceId: "5"
          processInstanceUrl: http://localhost:8182/runtime/process-instances/5
          activityId: "null"
          parentUrl: "null"
          superExecutionId: "null"
          tenantId: "null"
          id: "5"
          superExecutionUrl: "null"
          url: http://localhost:8182/runtime/executions/5
          parentId: "null"
          suspended: true
        - processInstanceId: "5"
          processInstanceUrl: http://localhost:8182/runtime/process-instances/5
          activityId: "null"
          parentUrl: "null"
          superExecutionId: "null"
          tenantId: "null"
          id: "5"
          superExecutionUrl: "null"
          url: http://localhost:8182/runtime/executions/5
          parentId: "null"
          suspended: true
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseGroupResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GroupResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - name: Test group
          id: testgroup
          type: Test type
          url: http://localhost:8182/identity/groups/testgroup
        - name: Test group
          id: testgroup
          type: Test type
          url: http://localhost:8182/identity/groups/testgroup
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseHistoricActivityInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoricActivityInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processDefinitionId: oneTaskProcess%3A1%3A4
          processInstanceId: "3"
          durationInMillis: 86400056
          activityName: My user task
          activityId: "4"
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/3
          executionId: "4"
          tenantId: "null"
          startTime: 2000-01-23T04:56:07.000+00:00
          id: "5"
          assignee: fozzie
          endTime: 2000-01-23T04:56:07.000+00:00
          activityType: userTask
          calledProcessInstanceId: "null"
          taskId: "4"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        - processDefinitionId: oneTaskProcess%3A1%3A4
          processInstanceId: "3"
          durationInMillis: 86400056
          activityName: My user task
          activityId: "4"
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/3
          executionId: "4"
          tenantId: "null"
          startTime: 2000-01-23T04:56:07.000+00:00
          id: "5"
          assignee: fozzie
          endTime: 2000-01-23T04:56:07.000+00:00
          activityType: userTask
          calledProcessInstanceId: "null"
          taskId: "4"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseHistoricDetailResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoricDetailResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processInstanceId: "5"
          propertyValue: "null"
          activityInstanceId: "10"
          revision: 2
          detailType: variableUpdate
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
          executionId: "6"
          taskUrl: http://localhost:8182/history/historic-task-instances/6
          variable:
            scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          id: "26"
          time: 2000-01-23T04:56:07.000+00:00
          propertyId: "null"
          taskId: "6"
        - processInstanceId: "5"
          propertyValue: "null"
          activityInstanceId: "10"
          revision: 2
          detailType: variableUpdate
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
          executionId: "6"
          taskUrl: http://localhost:8182/history/historic-task-instances/6
          variable:
            scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          id: "26"
          time: 2000-01-23T04:56:07.000+00:00
          propertyId: "null"
          taskId: "6"
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseHistoricProcessInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoricProcessInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processDefinitionDescription: A process definition description
          processDefinitionId: oneTaskProcess%3A1%3A4
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          durationInMillis: 86400056
          referenceType: event-to-bpmn-2.0-process
          businessStatus: myStatus
          processDefinitionName: A process definition name
          endActivityId: endEvent
          deleteReason: "null"
          url: http://localhost:8182/history/historic-process-instances/5
          referenceId: "123"
          propagatedStageInstanceId: propagatedStageInstanceId
          startUserId: kermit
          startActivityId: startEvent
          callbackId: "3"
          name: myProcessInstanceName
          businessKey: myKey
          tenantId: someTenantId
          startTime: 2000-01-23T04:56:07.000+00:00
          id: "5"
          endTime: 2000-01-23T04:56:07.000+00:00
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
          superProcessInstanceId: "3"
          callbackType: cmmn
        - processDefinitionDescription: A process definition description
          processDefinitionId: oneTaskProcess%3A1%3A4
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          durationInMillis: 86400056
          referenceType: event-to-bpmn-2.0-process
          businessStatus: myStatus
          processDefinitionName: A process definition name
          endActivityId: endEvent
          deleteReason: "null"
          url: http://localhost:8182/history/historic-process-instances/5
          referenceId: "123"
          propagatedStageInstanceId: propagatedStageInstanceId
          startUserId: kermit
          startActivityId: startEvent
          callbackId: "3"
          name: myProcessInstanceName
          businessKey: myKey
          tenantId: someTenantId
          startTime: 2000-01-23T04:56:07.000+00:00
          id: "5"
          endTime: 2000-01-23T04:56:07.000+00:00
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
          superProcessInstanceId: "3"
          callbackType: cmmn
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseHistoricTaskInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoricTaskInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 5
        data:
        - durationInMillis: 0
          parentTaskId: parentTaskId
          dueDate: 2000-01-23T04:56:07.000+00:00
          description: description
          scopeType: scopeType
          startTime: 2000-01-23T04:56:07.000+00:00
          id: id
          owner: owner
          processDefinitionId: processDefinitionId
          processInstanceId: processInstanceId
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          scopeId: scopeId
          formKey: formKey
          priority: 1
          deleteReason: deleteReason
          url: url
          claimTime: 2000-01-23T04:56:07.000+00:00
          propagatedStageInstanceId: propagatedStageInstanceId
          processInstanceUrl: processInstanceUrl
          executionId: executionId
          workTimeInMillis: 6
          taskDefinitionKey: taskDefinitionKey
          scopeDefinitionId: scopeDefinitionId
          subScopeId: subScopeId
          name: name
          tenantId: tenantId
          assignee: assignee
          endTime: 2000-01-23T04:56:07.000+00:00
          category: category
          processDefinitionUrl: processDefinitionUrl
        - durationInMillis: 0
          parentTaskId: parentTaskId
          dueDate: 2000-01-23T04:56:07.000+00:00
          description: description
          scopeType: scopeType
          startTime: 2000-01-23T04:56:07.000+00:00
          id: id
          owner: owner
          processDefinitionId: processDefinitionId
          processInstanceId: processInstanceId
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          scopeId: scopeId
          formKey: formKey
          priority: 1
          deleteReason: deleteReason
          url: url
          claimTime: 2000-01-23T04:56:07.000+00:00
          propagatedStageInstanceId: propagatedStageInstanceId
          processInstanceUrl: processInstanceUrl
          executionId: executionId
          workTimeInMillis: 6
          taskDefinitionKey: taskDefinitionKey
          scopeDefinitionId: scopeDefinitionId
          subScopeId: subScopeId
          name: name
          tenantId: tenantId
          assignee: assignee
          endTime: 2000-01-23T04:56:07.000+00:00
          category: category
          processDefinitionUrl: processDefinitionUrl
        size: 2
        start: 5
        sort: sort
        order: order
    DataResponseHistoricTaskLogEntryResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoricTaskLogEntryResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 6
        data:
        - processInstanceId: processInstanceId
          processDefinitionId: processDefinitionId
          scopeId: scopeId
          data: data
          type: type
          logNumber: 0
          userId: userId
          timeStamp: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          scopeDefinitionId: scopeDefinitionId
          subScopeId: subScopeId
          scopeType: scopeType
          tenantId: tenantId
          taskId: taskId
        - processInstanceId: processInstanceId
          processDefinitionId: processDefinitionId
          scopeId: scopeId
          data: data
          type: type
          logNumber: 0
          userId: userId
          timeStamp: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          scopeDefinitionId: scopeDefinitionId
          subScopeId: subScopeId
          scopeType: scopeType
          tenantId: tenantId
          taskId: taskId
        size: 5
        start: 1
        sort: sort
        order: order
    DataResponseHistoricVariableInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoricVariableInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processInstanceId: "5"
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
          variable:
            scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          id: "14"
          taskId: "6"
        - processInstanceId: "5"
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
          variable:
            scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          id: "14"
          taskId: "6"
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseHistoryJobResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HistoryJobResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - retries: 3
          advancedJobHandlerConfiguration: myAdvancedCfg
          scopeType: cmmn
          jobHandlerType: async-history
          createTime: 2000-01-23T04:56:07.000+00:00
          jobHandlerConfiguration: myCfg
          tenantId: "null"
          id: "8"
          url: http://localhost:8182/management/jobs/8
          exceptionMessage: "null"
          customValues: custom value
        - retries: 3
          advancedJobHandlerConfiguration: myAdvancedCfg
          scopeType: cmmn
          jobHandlerType: async-history
          createTime: 2000-01-23T04:56:07.000+00:00
          jobHandlerConfiguration: myCfg
          tenantId: "null"
          id: "8"
          url: http://localhost:8182/management/jobs/8
          exceptionMessage: "null"
          customValues: custom value
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseJobResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - elementId: timer
          processInstanceId: "5"
          processDefinitionId: timerProcess:1:4
          executionUrl: http://localhost:8182/runtime/executions/7
          dueDate: 2000-01-23T04:56:07.000+00:00
          url: http://localhost:8182/management/jobs/8
          elementName: Timer task
          processInstanceUrl: http://localhost:8182/runtime/process-instances/5
          executionId: "7"
          retries: 3
          createTime: 2000-01-23T04:56:07.000+00:00
          tenantId: "null"
          correlationId: "50"
          id: "8"
          exceptionMessage: "null"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/timerProcess%3A1%3A4
        - elementId: timer
          processInstanceId: "5"
          processDefinitionId: timerProcess:1:4
          executionUrl: http://localhost:8182/runtime/executions/7
          dueDate: 2000-01-23T04:56:07.000+00:00
          url: http://localhost:8182/management/jobs/8
          elementName: Timer task
          processInstanceUrl: http://localhost:8182/runtime/process-instances/5
          executionId: "7"
          retries: 3
          createTime: 2000-01-23T04:56:07.000+00:00
          tenantId: "null"
          correlationId: "50"
          id: "8"
          exceptionMessage: "null"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/timerProcess%3A1%3A4
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseListMapStringObject:
      type: object
      properties:
        data:
          type: array
          items:
            type: array
            items:
              type: object
              additionalProperties:
                type: object
                properties: {}
                example: {}
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - - key: {}
          - key: {}
        - - key: {}
          - key: {}
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseModelResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ModelResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - deploymentUrl: http://localhost:8182/repository/deployments/2
          version: 2
          url: http://localhost:8182/repository/models/5
          sourceUrl: sourceUrl
          metaInfo: Model metainfo
          createTime: 2000-01-23T04:56:07.000+00:00
          deploymentId: "7"
          name: Model name
          tenantId: "null"
          sourceExtraUrl: sourceExtraUrl
          id: "5"
          category: Model category
          key: Model key
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
        - deploymentUrl: http://localhost:8182/repository/deployments/2
          version: 2
          url: http://localhost:8182/repository/models/5
          sourceUrl: sourceUrl
          metaInfo: Model metainfo
          createTime: 2000-01-23T04:56:07.000+00:00
          deploymentId: "7"
          name: Model name
          tenantId: "null"
          sourceExtraUrl: sourceExtraUrl
          id: "5"
          category: Model category
          key: Model key
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseProcessDefinitionResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProcessDefinitionResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - diagramResource: http://localhost:8182/repository/deployments/2/resources/testProcess.png
          resource: http://localhost:8182/repository/deployments/2/resources/testProcess.xml
          graphicalNotationDefined: true
          deploymentUrl: http://localhost:8081/repository/deployments/2
          description: This is a process for testing purposes
          version: 1
          url: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
          suspended: true
          deploymentId: "2"
          name: The One Task Process
          tenantId: "null"
          id: oneTaskProcess:1:4
          category: Examples
          startFormDefined: true
          key: oneTaskProcess
        - diagramResource: http://localhost:8182/repository/deployments/2/resources/testProcess.png
          resource: http://localhost:8182/repository/deployments/2/resources/testProcess.xml
          graphicalNotationDefined: true
          deploymentUrl: http://localhost:8081/repository/deployments/2
          description: This is a process for testing purposes
          version: 1
          url: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
          suspended: true
          deploymentId: "2"
          name: The One Task Process
          tenantId: "null"
          id: oneTaskProcess:1:4
          category: Examples
          startFormDefined: true
          key: oneTaskProcess
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseProcessInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProcessInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processDefinitionDescription: A process definition description
          processDefinitionId: oneTaskProcess:1:158
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          referenceType: event-to-bpmn-2.0-process
          businessStatus: myBusinessStatus
          processDefinitionName: A process definition name
          completed: true
          url: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
          suspended: true
          referenceId: "123"
          propagatedStageInstanceId: propagatedStageInstanceId
          activityId: processTask
          startUserId: johnDoe
          callbackId: "3"
          name: myProcessInstanceName
          businessKey: myBusinessKey
          ended: true
          tenantId: someTenantId
          startTime: 2018-04-17T10:17:43.902+0000
          id: "187"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
          callbackType: cmmn
        - processDefinitionDescription: A process definition description
          processDefinitionId: oneTaskProcess:1:158
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          referenceType: event-to-bpmn-2.0-process
          businessStatus: myBusinessStatus
          processDefinitionName: A process definition name
          completed: true
          url: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
          suspended: true
          referenceId: "123"
          propagatedStageInstanceId: propagatedStageInstanceId
          activityId: processTask
          startUserId: johnDoe
          callbackId: "3"
          name: myProcessInstanceName
          businessKey: myBusinessKey
          ended: true
          tenantId: someTenantId
          startTime: 2018-04-17T10:17:43.902+0000
          id: "187"
          processDefinitionUrl: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
          callbackType: cmmn
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseTaskResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - executionUrl: http://localhost:8182/runtime/executions/5
          parentTaskId: "null"
          dueDate: 2000-01-23T04:56:07.000+00:00
          description: Task description
          delegationState: pending
          scopeType: cmmn
          id: "8"
          parentTaskUrl: "null"
          owner: owner
          processInstanceId: "5"
          processDefinitionId: oneTaskProcess%3A1%3A4
          scopeId: "14"
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          formKey: formKey
          priority: 50
          url: http://localhost:8182/runtime/tasks/8
          suspended: true
          claimTime: 2018-04-17T10:17:43.902+0000
          propagatedStageInstanceId: "16"
          taskDefinitionKey: theTask
          executionId: "5"
          processInstanceUrl: http://localhost:8182/runtime/process-instances/5
          scopeDefinitionId: "12"
          subScopeId: "15"
          createTime: 2000-01-23T04:56:07.000+00:00
          name: My task
          tenantId: someTenantId
          assignee: kermit
          category: ExampleCategory
          processDefinitionUrl: http://localhost:8182/runtime/process-definitions/oneTaskProcess%3A1%3A4
        - executionUrl: http://localhost:8182/runtime/executions/5
          parentTaskId: "null"
          dueDate: 2000-01-23T04:56:07.000+00:00
          description: Task description
          delegationState: pending
          scopeType: cmmn
          id: "8"
          parentTaskUrl: "null"
          owner: owner
          processInstanceId: "5"
          processDefinitionId: oneTaskProcess%3A1%3A4
          scopeId: "14"
          variables:
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          - scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          formKey: formKey
          priority: 50
          url: http://localhost:8182/runtime/tasks/8
          suspended: true
          claimTime: 2018-04-17T10:17:43.902+0000
          propagatedStageInstanceId: "16"
          taskDefinitionKey: theTask
          executionId: "5"
          processInstanceUrl: http://localhost:8182/runtime/process-instances/5
          scopeDefinitionId: "12"
          subScopeId: "15"
          createTime: 2000-01-23T04:56:07.000+00:00
          name: My task
          tenantId: someTenantId
          assignee: kermit
          category: ExampleCategory
          processDefinitionUrl: http://localhost:8182/runtime/process-definitions/oneTaskProcess%3A1%3A4
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseUserResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - firstName: Fred
          lastName: Smith
          password: password
          displayName: Fred Smith
          pictureUrl: http://localhost:8182/identity/users/testuser/picture
          tenantId: companyTenantId
          id: testuser
          url: http://localhost:8182/identity/users/testuser
          email: no-reply@flowable.org
        - firstName: Fred
          lastName: Smith
          password: password
          displayName: Fred Smith
          pictureUrl: http://localhost:8182/identity/users/testuser/picture
          tenantId: companyTenantId
          id: testuser
          url: http://localhost:8182/identity/users/testuser
          email: no-reply@flowable.org
        size: 1
        start: 6
        sort: sort
        order: order
    DataResponseVariableInstanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VariableInstanceResponse'
        total:
          type: integer
          format: int64
        start:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        size:
          type: integer
          format: int32
      example:
        total: 0
        data:
        - processInstanceId: "5"
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
          variable:
            scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          id: "14"
          taskId: "6"
        - processInstanceId: "5"
          processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
          variable:
            scope: scope
            name: myVariable
            type: string
            valueUrl: http://....
            value: test
          id: "14"
          taskId: "6"
        size: 1
        start: 6
        sort: sort
        order: order
    DataSpec:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        itemSubjectRef:
          type: string
        collection:
          type: boolean
      example:
        xmlColumnNumber: 9
        extensionElements:
          key:
          - null
          - null
        itemSubjectRef: itemSubjectRef
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        collection: true
        xmlRowNumber: 7
    DataStore:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        dataState:
          type: string
        itemSubjectRef:
          type: string
      example:
        xmlColumnNumber: 6
        extensionElements:
          key:
          - null
          - null
        itemSubjectRef: itemSubjectRef
        name: name
        dataState: dataState
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 0
    DecisionResponse:
      type: object
      properties:
        id:
          type: string
        category:
          type: string
        name:
          type: string
        key:
          type: string
        description:
          type: string
        version:
          type: integer
          format: int32
        resourceName:
          type: string
        deploymentId:
          type: string
        tenantId:
          type: string
        url:
          type: string
      example:
        deploymentId: deploymentId
        name: name
        tenantId: tenantId
        description: description
        resourceName: resourceName
        id: id
        category: category
        version: 0
        key: key
        url: url
    DeploymentResourceResponse:
      type: object
      properties:
        id:
          type: string
          example: diagrams/my-process.bpmn20.xml
        url:
          type: string
          description: For a single resource contains the actual URL to use for retrieving
            the binary resource
          example: http://localhost:8081/flowable-rest/service/repository/deployments/10/resources/diagrams%2Fmy-process.bpmn20.xml
        contentUrl:
          type: string
          example: http://localhost:8081/flowable-rest/service/repository/deployments/10/resourcedata/diagrams%2Fmy-process.bpmn20.xml
        mediaType:
          type: string
          description: "Contains the media-type the resource has. This is resolved\
            \ using a (pluggable) MediaTypeResolver and contains, by default, a limited\
            \ number of mime-type mappings."
          example: text/xml
        type:
          type: string
          description: Type of resource
          example: processDefinition
          enum:
          - resource
          - processDefinition
          - processImage
      example:
        contentUrl: http://localhost:8081/flowable-rest/service/repository/deployments/10/resourcedata/diagrams%2Fmy-process.bpmn20.xml
        mediaType: text/xml
        id: diagrams/my-process.bpmn20.xml
        type: processDefinition
        url: http://localhost:8081/flowable-rest/service/repository/deployments/10/resources/diagrams%2Fmy-process.bpmn20.xml
    DeploymentResponse:
      type: object
      properties:
        id:
          type: string
          example: "10"
        name:
          type: string
          example: flowable-examples.bar
        deploymentTime:
          type: string
          format: date-time
          example: 2010-10-13T14:54:26.75+02:00
        category:
          type: string
          example: examples
        parentDeploymentId:
          type: string
          example: "12"
        url:
          type: string
          example: http://localhost:8081/flowable-rest/service/repository/deployments/10
        tenantId:
          type: string
      example:
        name: flowable-examples.bar
        tenantId: tenantId
        parentDeploymentId: "12"
        id: "10"
        category: examples
        url: http://localhost:8081/flowable-rest/service/repository/deployments/10
        deploymentTime: 2010-10-13T14:54:26.75+02:00
    EngineInfoResponse:
      type: object
      properties:
        name:
          type: string
          example: default
        resourceUrl:
          type: string
          example: file://flowable/flowable.cfg.xml
        exception:
          type: string
          example: "null"
        version:
          type: string
          example: 6.3.1
      example:
        exception: "null"
        resourceUrl: file://flowable/flowable.cfg.xml
        name: default
        version: 6.3.1
    Escalation:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        escalationCode:
          type: string
      example:
        xmlColumnNumber: 4
        extensionElements:
          key:
          - null
          - null
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        escalationCode: escalationCode
        xmlRowNumber: 3
    EventListener:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        events:
          type: string
        implementationType:
          type: string
        implementation:
          type: string
        entityType:
          type: string
        onTransaction:
          type: string
      example:
        implementationType: implementationType
        onTransaction: onTransaction
        xmlColumnNumber: 5
        extensionElements:
          key:
          - null
          - null
        entityType: entityType
        implementation: implementation
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 4
        events: events
    EventResponse:
      type: object
      properties:
        url:
          type: string
        id:
          type: string
        action:
          type: string
        userId:
          type: string
        time:
          type: string
          format: date-time
        taskUrl:
          type: string
        processInstanceUrl:
          type: string
        message:
          type: array
          items:
            type: string
      example:
        processInstanceUrl: processInstanceUrl
        taskUrl: taskUrl
        action: action
        id: id
        time: 2000-01-23T04:56:07.000+00:00
        message:
        - message
        - message
        userId: userId
        url: url
    EventSubscriptionResponse:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        eventType:
          type: string
        eventName:
          type: string
        activityId:
          type: string
        executionId:
          type: string
        executionUrl:
          type: string
        processInstanceId:
          type: string
        processInstanceUrl:
          type: string
        processDefinitionId:
          type: string
        processDefinitionUrl:
          type: string
        scopeId:
          type: string
        scopeType:
          type: string
        subScopeId:
          type: string
        scopeDefinitionId:
          type: string
        created:
          type: string
          format: date-time
        configuration:
          type: string
        tenantId:
          type: string
      example:
        processInstanceId: processInstanceId
        processDefinitionId: processDefinitionId
        scopeId: scopeId
        executionUrl: executionUrl
        configuration: configuration
        created: 2000-01-23T04:56:07.000+00:00
        eventType: eventType
        url: url
        activityId: activityId
        executionId: executionId
        processInstanceUrl: processInstanceUrl
        subScopeId: subScopeId
        scopeDefinitionId: scopeDefinitionId
        scopeType: scopeType
        tenantId: tenantId
        eventName: eventName
        id: id
        processDefinitionUrl: processDefinitionUrl
    ExecutionActionRequest:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          description: "Action to perform: Either signal, trigger, signalEventReceived\
            \ or messageEventReceived"
          example: signalEventReceived
        signalName:
          type: string
          description: Name of the signal
          example: My Signal
        messageName:
          type: string
          description: Message of the signal
          example: My Signal
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        transientVariables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
    ExecutionChangeActivityStateRequest:
      type: object
      properties:
        cancelActivityIds:
          type: array
          description: activityIds to be canceled
          items:
            type: string
        startActivityIds:
          type: array
          description: activityIds to be started
          items:
            type: string
    ExecutionQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        id:
          type: string
        activityId:
          type: string
        parentId:
          type: string
        processInstanceId:
          type: string
        processBusinessKey:
          type: string
        processDefinitionId:
          type: string
        processDefinitionKey:
          type: string
        signalEventSubscriptionName:
          type: string
        messageEventSubscriptionName:
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        processInstanceVariables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
    ExecutionResponse:
      type: object
      properties:
        id:
          type: string
          example: "5"
        url:
          type: string
          example: http://localhost:8182/runtime/executions/5
        parentId:
          type: string
          example: "null"
        parentUrl:
          type: string
          example: "null"
        superExecutionId:
          type: string
          example: "null"
        superExecutionUrl:
          type: string
          example: "null"
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/runtime/process-instances/5
        suspended:
          type: boolean
        activityId:
          type: string
          example: "null"
        tenantId:
          type: string
          example: "null"
      example:
        processInstanceId: "5"
        processInstanceUrl: http://localhost:8182/runtime/process-instances/5
        activityId: "null"
        parentUrl: "null"
        superExecutionId: "null"
        tenantId: "null"
        id: "5"
        superExecutionUrl: "null"
        url: http://localhost:8182/runtime/executions/5
        parentId: "null"
        suspended: true
    ExecutionVariableCollectionResource:
      type: object
    ExecutionVariableResource:
      type: object
    ExtensionAttribute:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        namespacePrefix:
          type: string
        namespace:
          type: string
      example:
        name: name
        namespace: namespace
        value: value
        namespacePrefix: namespacePrefix
    ExtensionElement:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        namespacePrefix:
          type: string
        namespace:
          type: string
        elementText:
          type: string
        childElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
      example:
        xmlColumnNumber: 5
        elementText: elementText
        extensionElements:
          key:
          - null
          - null
        childElements:
          key:
          - null
          - null
        name: name
        namespace: namespace
        attributes:
          key:
          - null
          - null
        id: id
        namespacePrefix: namespacePrefix
        xmlRowNumber: 1
    FieldExtension:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        fieldName:
          type: string
        stringValue:
          type: string
        expression:
          type: string
      example:
        xmlColumnNumber: 7
        stringValue: stringValue
        fieldName: fieldName
        expression: expression
        extensionElements:
          key:
          - null
          - null
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 4
    FlowElement:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        documentation:
          type: string
        executionListeners:
          type: array
          items:
            $ref: '#/components/schemas/FlowableListener'
      example:
        xmlColumnNumber: 9
        executionListeners:
        - null
        - null
        extensionElements:
          key:
          - null
          - null
        documentation: documentation
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 9
    FlowableListener:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        event:
          type: string
        implementationType:
          type: string
        implementation:
          type: string
        fieldExtensions:
          type: array
          items:
            $ref: '#/components/schemas/FieldExtension'
        onTransaction:
          type: string
        customPropertiesResolverImplementationType:
          type: string
        customPropertiesResolverImplementation:
          type: string
      example:
        implementationType: implementationType
        onTransaction: onTransaction
        customPropertiesResolverImplementation: customPropertiesResolverImplementation
        xmlColumnNumber: 2
        extensionElements:
          key:
          - null
          - null
        implementation: implementation
        attributes:
          key:
          - null
          - null
        customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
        id: id
        fieldExtensions:
        - xmlColumnNumber: 7
          stringValue: stringValue
          fieldName: fieldName
          expression: expression
          extensionElements:
            key:
            - null
            - null
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 4
        - xmlColumnNumber: 7
          stringValue: stringValue
          fieldName: fieldName
          expression: expression
          extensionElements:
            key:
            - null
            - null
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 4
        event: event
        xmlRowNumber: 3
    FormDataResponse:
      type: object
      properties:
        formKey:
          type: string
          example: "null"
        deploymentId:
          type: string
          example: "2"
        processDefinitionId:
          type: string
          example: "3"
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/repository/process-definition/3
        taskId:
          type: string
          example: "6"
        taskUrl:
          type: string
          example: http://localhost:8182/runtime/task/6
        formProperties:
          type: array
          items:
            $ref: '#/components/schemas/RestFormProperty'
      example:
        processDefinitionId: "3"
        formKey: "null"
        taskUrl: http://localhost:8182/runtime/task/6
        deploymentId: "2"
        taskId: "6"
        formProperties:
        - readable: true
          datePattern: datePattern
          name: Room
          id: room
          type: string
          value: value
          required: true
          writable: true
          enumValues:
          - name: Normal bed
            id: normal
          - name: Normal bed
            id: normal
        - readable: true
          datePattern: datePattern
          name: Room
          id: room
          type: string
          value: value
          required: true
          writable: true
          enumValues:
          - name: Normal bed
            id: normal
          - name: Normal bed
            id: normal
        processDefinitionUrl: http://localhost:8182/repository/process-definition/3
    FormDefinitionResponse:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        category:
          type: string
        name:
          type: string
        key:
          type: string
        description:
          type: string
        version:
          type: integer
          format: int32
        resourceName:
          type: string
        deploymentId:
          type: string
        tenantId:
          type: string
      example:
        deploymentId: deploymentId
        name: name
        tenantId: tenantId
        description: description
        resourceName: resourceName
        id: id
        category: category
        version: 0
        url: url
        key: key
    GraphicInfo:
      type: object
      properties:
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
        height:
          type: number
          format: double
        width:
          type: number
          format: double
        element:
          $ref: '#/components/schemas/BaseElement'
        expanded:
          type: boolean
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
      example:
        expanded: true
        xmlColumnNumber: 6
        x: 9.018348186070783
        width: 6.965117697638846
        "y": 6.438423552598547
        xmlRowNumber: 6
        height: 3.5571952270680973
        element:
          xmlColumnNumber: 2
          extensionElements:
            key:
            - null
            - null
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 1
    GroupRequest:
      type: object
      properties:
        id:
          type: string
          example: testgroup
        url:
          type: string
          example: http://localhost:8182/identity/groups/testgroup
        name:
          type: string
          example: Test group
        type:
          type: string
          example: Test type
        nameChanged:
          type: boolean
        typeChanged:
          type: boolean
    GroupResponse:
      type: object
      properties:
        id:
          type: string
          example: testgroup
        url:
          type: string
          example: http://localhost:8182/identity/groups/testgroup
        name:
          type: string
          example: Test group
        type:
          type: string
          example: Test type
      example:
        name: Test group
        id: testgroup
        type: Test type
        url: http://localhost:8182/identity/groups/testgroup
    HistoricActivityInstanceQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        activityId:
          type: string
        activityInstanceId:
          type: string
        activityName:
          type: string
        activityType:
          type: string
        executionId:
          type: string
        finished:
          type: boolean
        taskAssignee:
          type: string
        processInstanceId:
          type: string
        processDefinitionId:
          type: string
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
    HistoricActivityInstanceResponse:
      type: object
      properties:
        id:
          type: string
          example: "5"
        activityId:
          type: string
          example: "4"
        activityName:
          type: string
          example: My user task
        activityType:
          type: string
          example: userTask
        processDefinitionId:
          type: string
          example: oneTaskProcess%3A1%3A4
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        processInstanceId:
          type: string
          example: "3"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/history/historic-process-instances/3
        executionId:
          type: string
          example: "4"
        taskId:
          type: string
          example: "4"
        calledProcessInstanceId:
          type: string
          example: "null"
        assignee:
          type: string
          example: fozzie
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        durationInMillis:
          type: integer
          format: int64
          example: 86400056
        tenantId:
          type: string
          example: "null"
      example:
        processDefinitionId: oneTaskProcess%3A1%3A4
        processInstanceId: "3"
        durationInMillis: 86400056
        activityName: My user task
        activityId: "4"
        processInstanceUrl: http://localhost:8182/history/historic-process-instances/3
        executionId: "4"
        tenantId: "null"
        startTime: 2000-01-23T04:56:07.000+00:00
        id: "5"
        assignee: fozzie
        endTime: 2000-01-23T04:56:07.000+00:00
        activityType: userTask
        calledProcessInstanceId: "null"
        taskId: "4"
        processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
    HistoricDetailQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        id:
          type: string
        processInstanceId:
          type: string
        executionId:
          type: string
        activityInstanceId:
          type: string
        taskId:
          type: string
        selectOnlyFormProperties:
          type: boolean
        selectOnlyVariableUpdates:
          type: boolean
    HistoricDetailResponse:
      type: object
      properties:
        id:
          type: string
          example: "26"
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/history/historic-process-instances/5
        executionId:
          type: string
          example: "6"
        activityInstanceId:
          type: string
          example: "10"
        taskId:
          type: string
          example: "6"
        taskUrl:
          type: string
          example: http://localhost:8182/history/historic-task-instances/6
        time:
          type: string
          format: date-time
        detailType:
          type: string
          example: variableUpdate
        revision:
          type: integer
          format: int32
          example: 2
        variable:
          $ref: '#/components/schemas/RestVariable'
        propertyId:
          type: string
          example: "null"
        propertyValue:
          type: string
          example: "null"
      example:
        processInstanceId: "5"
        propertyValue: "null"
        activityInstanceId: "10"
        revision: 2
        detailType: variableUpdate
        processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
        executionId: "6"
        taskUrl: http://localhost:8182/history/historic-task-instances/6
        variable:
          scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        id: "26"
        time: 2000-01-23T04:56:07.000+00:00
        propertyId: "null"
        taskId: "6"
    HistoricIdentityLinkResponse:
      type: object
      properties:
        type:
          type: string
          example: participant
        userId:
          type: string
          example: kermit
        groupId:
          type: string
          example: sales
        taskId:
          type: string
          example: "null"
        taskUrl:
          type: string
          example: "null"
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/history/historic-process-instances/5
      example:
        processInstanceId: "5"
        processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
        taskUrl: "null"
        groupId: sales
        type: participant
        userId: kermit
        taskId: "null"
    HistoricProcessInstanceQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        processInstanceId:
          type: string
        processInstanceIds:
          type: array
          items:
            type: string
        processInstanceName:
          type: string
        processInstanceNameLike:
          type: string
        processInstanceNameLikeIgnoreCase:
          type: string
        processBusinessKey:
          type: string
        processBusinessKeyLike:
          type: string
        processDefinitionId:
          type: string
        processDefinitionKey:
          type: string
        processDefinitionKeyIn:
          type: array
          items:
            type: string
        processDefinitionKeyNotIn:
          type: array
          items:
            type: string
        processDefinitionName:
          type: string
        processDefinitionVersion:
          type: integer
          format: int32
        processDefinitionCategory:
          type: string
        deploymentId:
          type: string
        deploymentIdIn:
          type: array
          items:
            type: string
        superProcessInstanceId:
          type: string
        excludeSubprocesses:
          type: boolean
        finished:
          type: boolean
        activeActivityId:
          type: string
        activeActivityIds:
          uniqueItems: true
          type: array
          items:
            type: string
        involvedUser:
          type: string
        finishedAfter:
          type: string
          format: date-time
        finishedBefore:
          type: string
          format: date-time
        startedAfter:
          type: string
          format: date-time
        startedBefore:
          type: string
          format: date-time
        startedBy:
          type: string
        includeProcessVariables:
          type: boolean
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        callbackId:
          type: string
        callbackType:
          type: string
        withoutCallbackId:
          type: boolean
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
    HistoricProcessInstanceResponse:
      type: object
      properties:
        id:
          type: string
          example: "5"
        url:
          type: string
          example: http://localhost:8182/history/historic-process-instances/5
        name:
          type: string
          example: myProcessInstanceName
        businessKey:
          type: string
          example: myKey
        businessStatus:
          type: string
          example: myStatus
        processDefinitionId:
          type: string
          example: oneTaskProcess%3A1%3A4
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        processDefinitionName:
          type: string
          example: A process definition name
        processDefinitionDescription:
          type: string
          example: A process definition description
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        durationInMillis:
          type: integer
          format: int64
          example: 86400056
        startUserId:
          type: string
          example: kermit
        startActivityId:
          type: string
          example: startEvent
        endActivityId:
          type: string
          example: endEvent
        deleteReason:
          type: string
          example: "null"
        superProcessInstanceId:
          type: string
          example: "3"
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        callbackId:
          type: string
          example: "3"
        callbackType:
          type: string
          example: cmmn
        referenceId:
          type: string
          example: "123"
        referenceType:
          type: string
          example: event-to-bpmn-2.0-process
        propagatedStageInstanceId:
          type: string
          description: "The stage plan item instance id this process instance belongs\
            \ to or null, if it is not part of a case at all or is not a child element\
            \ of a stage"
        tenantId:
          type: string
          example: someTenantId
      example:
        processDefinitionDescription: A process definition description
        processDefinitionId: oneTaskProcess%3A1%3A4
        variables:
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        durationInMillis: 86400056
        referenceType: event-to-bpmn-2.0-process
        businessStatus: myStatus
        processDefinitionName: A process definition name
        endActivityId: endEvent
        deleteReason: "null"
        url: http://localhost:8182/history/historic-process-instances/5
        referenceId: "123"
        propagatedStageInstanceId: propagatedStageInstanceId
        startUserId: kermit
        startActivityId: startEvent
        callbackId: "3"
        name: myProcessInstanceName
        businessKey: myKey
        tenantId: someTenantId
        startTime: 2000-01-23T04:56:07.000+00:00
        id: "5"
        endTime: 2000-01-23T04:56:07.000+00:00
        processDefinitionUrl: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        superProcessInstanceId: "3"
        callbackType: cmmn
    HistoricTaskInstanceQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        taskId:
          type: string
        processInstanceId:
          type: string
        processInstanceIdWithChildren:
          type: string
        withoutProcessInstanceId:
          type: boolean
        processBusinessKey:
          type: string
        processBusinessKeyLike:
          type: string
        processDefinitionId:
          type: string
        processDefinitionKey:
          type: string
        processDefinitionKeyLike:
          type: string
        processDefinitionName:
          type: string
        processDefinitionNameLike:
          type: string
        executionId:
          type: string
        taskName:
          type: string
        taskNameLike:
          type: string
        taskDescription:
          type: string
        taskDescriptionLike:
          type: string
        taskDefinitionKey:
          type: string
        taskDefinitionKeyLike:
          type: string
        taskDefinitionKeys:
          type: array
          items:
            type: string
        taskCategory:
          type: string
        taskCategoryIn:
          type: array
          items:
            type: string
        taskCategoryNotIn:
          type: array
          items:
            type: string
        taskWithoutCategory:
          type: boolean
        taskDeleteReason:
          type: string
        taskDeleteReasonLike:
          type: string
        taskAssignee:
          type: string
        taskAssigneeLike:
          type: string
        taskOwner:
          type: string
        taskOwnerLike:
          type: string
        taskInvolvedUser:
          type: string
        taskPriority:
          type: integer
          format: int32
        taskMinPriority:
          type: integer
          format: int32
        taskMaxPriority:
          type: integer
          format: int32
        finished:
          type: boolean
        processFinished:
          type: boolean
        parentTaskId:
          type: string
        dueDate:
          type: string
          format: date-time
        dueDateAfter:
          type: string
          format: date-time
        dueDateBefore:
          type: string
          format: date-time
        withoutDueDate:
          type: boolean
        taskCreatedOn:
          type: string
          format: date-time
        taskCreatedBefore:
          type: string
          format: date-time
        taskCreatedAfter:
          type: string
          format: date-time
        taskCompletedOn:
          type: string
          format: date-time
        taskCompletedBefore:
          type: string
          format: date-time
        taskCompletedAfter:
          type: string
          format: date-time
        includeTaskLocalVariables:
          type: boolean
        includeProcessVariables:
          type: boolean
        taskVariables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        processVariables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        scopeDefinitionId:
          type: string
        scopeId:
          type: string
        withoutScopeId:
          type: boolean
        scopeType:
          type: string
        propagatedStageInstanceId:
          type: string
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
        withoutDeleteReason:
          type: boolean
        taskCandidateGroup:
          type: string
        ignoreTaskAssignee:
          type: boolean
    HistoricTaskInstanceResponse:
      type: object
      properties:
        id:
          type: string
        processDefinitionId:
          type: string
        processDefinitionUrl:
          type: string
        processInstanceId:
          type: string
        processInstanceUrl:
          type: string
        executionId:
          type: string
        name:
          type: string
        description:
          type: string
        deleteReason:
          type: string
        owner:
          type: string
        assignee:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        durationInMillis:
          type: integer
          format: int64
        workTimeInMillis:
          type: integer
          format: int64
        claimTime:
          type: string
          format: date-time
        taskDefinitionKey:
          type: string
        formKey:
          type: string
        priority:
          type: integer
          format: int32
        dueDate:
          type: string
          format: date-time
        parentTaskId:
          type: string
        url:
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        scopeDefinitionId:
          type: string
        scopeId:
          type: string
        subScopeId:
          type: string
        scopeType:
          type: string
        propagatedStageInstanceId:
          type: string
        tenantId:
          type: string
        category:
          type: string
      example:
        durationInMillis: 0
        parentTaskId: parentTaskId
        dueDate: 2000-01-23T04:56:07.000+00:00
        description: description
        scopeType: scopeType
        startTime: 2000-01-23T04:56:07.000+00:00
        id: id
        owner: owner
        processDefinitionId: processDefinitionId
        processInstanceId: processInstanceId
        variables:
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        scopeId: scopeId
        formKey: formKey
        priority: 1
        deleteReason: deleteReason
        url: url
        claimTime: 2000-01-23T04:56:07.000+00:00
        propagatedStageInstanceId: propagatedStageInstanceId
        processInstanceUrl: processInstanceUrl
        executionId: executionId
        workTimeInMillis: 6
        taskDefinitionKey: taskDefinitionKey
        scopeDefinitionId: scopeDefinitionId
        subScopeId: subScopeId
        name: name
        tenantId: tenantId
        assignee: assignee
        endTime: 2000-01-23T04:56:07.000+00:00
        category: category
        processDefinitionUrl: processDefinitionUrl
    HistoricTaskLogEntryResponse:
      type: object
      properties:
        logNumber:
          type: integer
          format: int64
        type:
          type: string
        taskId:
          type: string
        timeStamp:
          type: string
          format: date-time
        userId:
          type: string
        data:
          type: string
        executionId:
          type: string
        processInstanceId:
          type: string
        processDefinitionId:
          type: string
        scopeId:
          type: string
        scopeDefinitionId:
          type: string
        subScopeId:
          type: string
        scopeType:
          type: string
        tenantId:
          type: string
      example:
        processInstanceId: processInstanceId
        processDefinitionId: processDefinitionId
        scopeId: scopeId
        data: data
        type: type
        logNumber: 0
        userId: userId
        timeStamp: 2000-01-23T04:56:07.000+00:00
        executionId: executionId
        scopeDefinitionId: scopeDefinitionId
        subScopeId: subScopeId
        scopeType: scopeType
        tenantId: tenantId
        taskId: taskId
    HistoricVariableInstanceQueryRequest:
      type: object
      properties:
        excludeTaskVariables:
          type: boolean
        taskId:
          type: string
        executionId:
          type: string
        processInstanceId:
          type: string
        variableName:
          type: string
        variableNameLike:
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        excludeLocalVariables:
          type: boolean
    HistoricVariableInstanceResponse:
      type: object
      properties:
        id:
          type: string
          example: "14"
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/history/historic-process-instances/5
        taskId:
          type: string
          example: "6"
        variable:
          $ref: '#/components/schemas/RestVariable'
      example:
        processInstanceId: "5"
        processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
        variable:
          scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        id: "14"
        taskId: "6"
    HistoryJobResponse:
      type: object
      properties:
        id:
          type: string
          example: "8"
        url:
          type: string
          example: http://localhost:8182/management/jobs/8
        scopeType:
          type: string
          example: cmmn
        retries:
          type: integer
          format: int32
          example: 3
        exceptionMessage:
          type: string
          example: "null"
        jobHandlerType:
          type: string
          example: async-history
        jobHandlerConfiguration:
          type: string
          example: myCfg
        advancedJobHandlerConfiguration:
          type: string
          example: myAdvancedCfg
        tenantId:
          type: string
          example: "null"
        customValues:
          type: string
          example: custom value
        createTime:
          type: string
          format: date-time
      example:
        retries: 3
        advancedJobHandlerConfiguration: myAdvancedCfg
        scopeType: cmmn
        jobHandlerType: async-history
        createTime: 2000-01-23T04:56:07.000+00:00
        jobHandlerConfiguration: myCfg
        tenantId: "null"
        id: "8"
        url: http://localhost:8182/management/jobs/8
        exceptionMessage: "null"
        customValues: custom value
    IOSpecification:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        dataInputs:
          type: array
          items:
            $ref: '#/components/schemas/DataSpec'
        dataOutputs:
          type: array
          items:
            $ref: '#/components/schemas/DataSpec'
        dataInputRefs:
          type: array
          items:
            type: string
        dataOutputRefs:
          type: array
          items:
            type: string
      example:
        dataOutputs:
        - null
        - null
        xmlColumnNumber: 2
        dataInputRefs:
        - dataInputRefs
        - dataInputRefs
        dataInputs:
        - xmlColumnNumber: 9
          extensionElements:
            key:
            - null
            - null
          itemSubjectRef: itemSubjectRef
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          collection: true
          xmlRowNumber: 7
        - xmlColumnNumber: 9
          extensionElements:
            key:
            - null
            - null
          itemSubjectRef: itemSubjectRef
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          collection: true
          xmlRowNumber: 7
        extensionElements:
          key:
          - null
          - null
        dataOutputRefs:
        - dataOutputRefs
        - dataOutputRefs
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 5
    Import:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        importType:
          type: string
        location:
          type: string
        namespace:
          type: string
      example:
        xmlColumnNumber: 0
        importType: importType
        extensionElements:
          key:
          - null
          - null
        namespace: namespace
        attributes:
          key:
          - null
          - null
        location: location
        id: id
        xmlRowNumber: 7
    InjectActivityRequest:
      type: object
      properties:
        injectionType:
          type: string
        id:
          type: string
        name:
          type: string
        assignee:
          type: string
        taskId:
          type: string
        processDefinitionId:
          type: string
        joinParallelActivitiesOnComplete:
          type: boolean
    Interface:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        implementationRef:
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      example:
        xmlColumnNumber: 6
        operations:
        - xmlColumnNumber: 4
          errorMessageRef:
          - errorMessageRef
          - errorMessageRef
          extensionElements:
            key:
            - null
            - null
          outMessageRef: outMessageRef
          name: name
          implementationRef: implementationRef
          attributes:
            key:
            - null
            - null
          id: id
          inMessageRef: inMessageRef
          xmlRowNumber: 0
        - xmlColumnNumber: 4
          errorMessageRef:
          - errorMessageRef
          - errorMessageRef
          extensionElements:
            key:
            - null
            - null
          outMessageRef: outMessageRef
          name: name
          implementationRef: implementationRef
          attributes:
            key:
            - null
            - null
          id: id
          inMessageRef: inMessageRef
          xmlRowNumber: 0
        extensionElements:
          key:
          - null
          - null
        name: name
        implementationRef: implementationRef
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 7
    ItemDefinition:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        structureRef:
          type: string
        itemKind:
          type: string
      example:
        xmlColumnNumber: 1
        extensionElements:
          key:
          - null
          - null
        attributes:
          key:
          - null
          - null
        id: id
        itemKind: itemKind
        structureRef: structureRef
        xmlRowNumber: 7
    JobResponse:
      type: object
      properties:
        id:
          type: string
          example: "8"
        url:
          type: string
          example: http://localhost:8182/management/jobs/8
        correlationId:
          type: string
          example: "50"
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/runtime/process-instances/5
        processDefinitionId:
          type: string
          example: timerProcess:1:4
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/repository/process-definitions/timerProcess%3A1%3A4
        executionId:
          type: string
          example: "7"
        executionUrl:
          type: string
          example: http://localhost:8182/runtime/executions/7
        elementId:
          type: string
          example: timer
        elementName:
          type: string
          example: Timer task
        retries:
          type: integer
          format: int32
          example: 3
        exceptionMessage:
          type: string
          example: "null"
        dueDate:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        tenantId:
          type: string
          example: "null"
      example:
        elementId: timer
        processInstanceId: "5"
        processDefinitionId: timerProcess:1:4
        executionUrl: http://localhost:8182/runtime/executions/7
        dueDate: 2000-01-23T04:56:07.000+00:00
        url: http://localhost:8182/management/jobs/8
        elementName: Timer task
        processInstanceUrl: http://localhost:8182/runtime/process-instances/5
        executionId: "7"
        retries: 3
        createTime: 2000-01-23T04:56:07.000+00:00
        tenantId: "null"
        correlationId: "50"
        id: "8"
        exceptionMessage: "null"
        processDefinitionUrl: http://localhost:8182/repository/process-definitions/timerProcess%3A1%3A4
    Lane:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        parentProcess:
          $ref: '#/components/schemas/Process'
        flowReferences:
          type: array
          items:
            type: string
      example:
        xmlColumnNumber: 1
        extensionElements:
          key:
          - null
          - null
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        parentProcess: null
        xmlRowNumber: 1
        flowReferences:
        - flowReferences
        - flowReferences
    MembershipRequest:
      type: object
      properties:
        userId:
          type: string
          example: kermit
    MembershipResponse:
      type: object
      properties:
        userId:
          type: string
          example: kermit
        url:
          type: string
          example: http://localhost:8182/identity/groups/sales/members/kermit
        groupId:
          type: string
          example: sales
      example:
        groupId: sales
        userId: kermit
        url: http://localhost:8182/identity/groups/sales/members/kermit
    Message:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        itemRef:
          type: string
      example:
        xmlColumnNumber: 5
        itemRef: itemRef
        extensionElements:
          key:
          - null
          - null
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 7
    MessageFlow:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        sourceRef:
          type: string
        targetRef:
          type: string
        messageRef:
          type: string
      example:
        targetRef: targetRef
        xmlColumnNumber: 3
        extensionElements:
          key:
          - null
          - null
        messageRef: messageRef
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        sourceRef: sourceRef
        xmlRowNumber: 3
    ModelRequest:
      type: object
      properties:
        name:
          type: string
          example: Model name
        key:
          type: string
          example: Model key
        category:
          type: string
          example: Model category
        version:
          type: integer
          format: int32
          example: 2
        metaInfo:
          type: string
          example: Model metainfo
        deploymentId:
          type: string
          example: "7"
        tenantId:
          type: string
          example: "null"
    ModelResponse:
      type: object
      properties:
        name:
          type: string
          example: Model name
        key:
          type: string
          example: Model key
        category:
          type: string
          example: Model category
        version:
          type: integer
          format: int32
          example: 2
        metaInfo:
          type: string
          example: Model metainfo
        deploymentId:
          type: string
          example: "7"
        tenantId:
          type: string
          example: "null"
        id:
          type: string
          example: "5"
        url:
          type: string
          example: http://localhost:8182/repository/models/5
        createTime:
          type: string
          format: date-time
        lastUpdateTime:
          type: string
          format: date-time
        deploymentUrl:
          type: string
          example: http://localhost:8182/repository/deployments/2
        sourceUrl:
          type: string
        sourceExtraUrl:
          type: string
      example:
        deploymentUrl: http://localhost:8182/repository/deployments/2
        version: 2
        url: http://localhost:8182/repository/models/5
        sourceUrl: sourceUrl
        metaInfo: Model metainfo
        createTime: 2000-01-23T04:56:07.000+00:00
        deploymentId: "7"
        name: Model name
        tenantId: "null"
        sourceExtraUrl: sourceExtraUrl
        id: "5"
        category: Model category
        key: Model key
        lastUpdateTime: 2000-01-23T04:56:07.000+00:00
    Operation:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        implementationRef:
          type: string
        inMessageRef:
          type: string
        outMessageRef:
          type: string
        errorMessageRef:
          type: array
          items:
            type: string
      example:
        xmlColumnNumber: 4
        errorMessageRef:
        - errorMessageRef
        - errorMessageRef
        extensionElements:
          key:
          - null
          - null
        outMessageRef: outMessageRef
        name: name
        implementationRef: implementationRef
        attributes:
          key:
          - null
          - null
        id: id
        inMessageRef: inMessageRef
        xmlRowNumber: 0
    Pool:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        processRef:
          type: string
        executable:
          type: boolean
      example:
        xmlColumnNumber: 3
        extensionElements:
          key:
          - null
          - null
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        processRef: processRef
        xmlRowNumber: 3
        executable: true
    Process:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        executable:
          type: boolean
        documentation:
          type: string
        ioSpecification:
          $ref: '#/components/schemas/IOSpecification'
        executionListeners:
          type: array
          items:
            $ref: '#/components/schemas/FlowableListener'
        lanes:
          type: array
          items:
            $ref: '#/components/schemas/Lane'
        dataObjects:
          type: array
          items:
            $ref: '#/components/schemas/ValuedDataObject'
        candidateStarterUsers:
          type: array
          items:
            type: string
        candidateStarterGroups:
          type: array
          items:
            type: string
        eventListeners:
          type: array
          items:
            $ref: '#/components/schemas/EventListener'
        flowElementMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FlowElement'
        artifactMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Artifact'
        initialFlowElement:
          $ref: '#/components/schemas/FlowElement'
        enableEagerExecutionTreeFetching:
          type: boolean
        flowElements:
          type: array
          items:
            $ref: '#/components/schemas/FlowElement'
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
      example:
        dataObjects:
        - xmlColumnNumber: 6
          executionListeners:
          - null
          - null
          extensionElements:
            key:
            - null
            - null
          documentation: documentation
          itemSubjectRef:
            xmlColumnNumber: 1
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            itemKind: itemKind
            structureRef: structureRef
            xmlRowNumber: 7
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          type: type
          value: {}
          xmlRowNumber: 1
        - xmlColumnNumber: 6
          executionListeners:
          - null
          - null
          extensionElements:
            key:
            - null
            - null
          documentation: documentation
          itemSubjectRef:
            xmlColumnNumber: 1
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            itemKind: itemKind
            structureRef: structureRef
            xmlRowNumber: 7
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          type: type
          value: {}
          xmlRowNumber: 1
        flowElements:
        - null
        - null
        extensionElements:
          key:
          - xmlColumnNumber: 5
            elementText: elementText
            extensionElements:
              key:
              - null
              - null
            childElements:
              key:
              - null
              - null
            name: name
            namespace: namespace
            attributes:
              key:
              - null
              - null
            id: id
            namespacePrefix: namespacePrefix
            xmlRowNumber: 1
          - xmlColumnNumber: 5
            elementText: elementText
            extensionElements:
              key:
              - null
              - null
            childElements:
              key:
              - null
              - null
            name: name
            namespace: namespace
            attributes:
              key:
              - null
              - null
            id: id
            namespacePrefix: namespacePrefix
            xmlRowNumber: 1
        documentation: documentation
        candidateStarterUsers:
        - candidateStarterUsers
        - candidateStarterUsers
        executable: true
        flowElementMap:
          key:
            xmlColumnNumber: 9
            executionListeners:
            - null
            - null
            extensionElements:
              key:
              - null
              - null
            documentation: documentation
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 9
        artifactMap:
          key:
            xmlColumnNumber: 8
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 6
        ioSpecification:
          dataOutputs:
          - null
          - null
          xmlColumnNumber: 2
          dataInputRefs:
          - dataInputRefs
          - dataInputRefs
          dataInputs:
          - xmlColumnNumber: 9
            extensionElements:
              key:
              - null
              - null
            itemSubjectRef: itemSubjectRef
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            collection: true
            xmlRowNumber: 7
          - xmlColumnNumber: 9
            extensionElements:
              key:
              - null
              - null
            itemSubjectRef: itemSubjectRef
            name: name
            attributes:
              key:
              - null
              - null
            id: id
            collection: true
            xmlRowNumber: 7
          extensionElements:
            key:
            - null
            - null
          dataOutputRefs:
          - dataOutputRefs
          - dataOutputRefs
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 5
        eventListeners:
        - implementationType: implementationType
          onTransaction: onTransaction
          xmlColumnNumber: 5
          extensionElements:
            key:
            - null
            - null
          entityType: entityType
          implementation: implementation
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 4
          events: events
        - implementationType: implementationType
          onTransaction: onTransaction
          xmlColumnNumber: 5
          extensionElements:
            key:
            - null
            - null
          entityType: entityType
          implementation: implementation
          attributes:
            key:
            - null
            - null
          id: id
          xmlRowNumber: 4
          events: events
        initialFlowElement: null
        xmlColumnNumber: 6
        executionListeners:
        - implementationType: implementationType
          onTransaction: onTransaction
          customPropertiesResolverImplementation: customPropertiesResolverImplementation
          xmlColumnNumber: 2
          extensionElements:
            key:
            - null
            - null
          implementation: implementation
          attributes:
            key:
            - null
            - null
          customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
          id: id
          fieldExtensions:
          - xmlColumnNumber: 7
            stringValue: stringValue
            fieldName: fieldName
            expression: expression
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
          - xmlColumnNumber: 7
            stringValue: stringValue
            fieldName: fieldName
            expression: expression
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
          event: event
          xmlRowNumber: 3
        - implementationType: implementationType
          onTransaction: onTransaction
          customPropertiesResolverImplementation: customPropertiesResolverImplementation
          xmlColumnNumber: 2
          extensionElements:
            key:
            - null
            - null
          implementation: implementation
          attributes:
            key:
            - null
            - null
          customPropertiesResolverImplementationType: customPropertiesResolverImplementationType
          id: id
          fieldExtensions:
          - xmlColumnNumber: 7
            stringValue: stringValue
            fieldName: fieldName
            expression: expression
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
          - xmlColumnNumber: 7
            stringValue: stringValue
            fieldName: fieldName
            expression: expression
            extensionElements:
              key:
              - null
              - null
            attributes:
              key:
              - null
              - null
            id: id
            xmlRowNumber: 4
          event: event
          xmlRowNumber: 3
        enableEagerExecutionTreeFetching: true
        name: name
        lanes:
        - xmlColumnNumber: 1
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          parentProcess: null
          xmlRowNumber: 1
          flowReferences:
          - flowReferences
          - flowReferences
        - xmlColumnNumber: 1
          extensionElements:
            key:
            - null
            - null
          name: name
          attributes:
            key:
            - null
            - null
          id: id
          parentProcess: null
          xmlRowNumber: 1
          flowReferences:
          - flowReferences
          - flowReferences
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 0
        candidateStarterGroups:
        - candidateStarterGroups
        - candidateStarterGroups
        artifacts:
        - null
        - null
    ProcessDefinitionActionRequest:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          description: "Action to perform: Either activate or suspend"
          example: activate
        includeProcessInstances:
          type: boolean
          description: "Whether or not to suspend/activate running process-instances\
            \ for this process-definition. If omitted, the process-instances are left\
            \ in the state they are"
        date:
          type: string
          description: "Date (ISO-8601) when the suspension/activation should be executed.\
            \ If omitted, the suspend/activation is effective immediately."
          format: date-time
        category:
          type: string
    ProcessDefinitionResponse:
      type: object
      properties:
        id:
          type: string
          example: oneTaskProcess:1:4
        url:
          type: string
          example: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        key:
          type: string
          example: oneTaskProcess
        version:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: The One Task Process
        description:
          type: string
          example: This is a process for testing purposes
        tenantId:
          type: string
          example: "null"
        deploymentId:
          type: string
          example: "2"
        deploymentUrl:
          type: string
          example: http://localhost:8081/repository/deployments/2
        resource:
          type: string
          description: Contains the actual deployed BPMN 2.0 xml.
          example: http://localhost:8182/repository/deployments/2/resources/testProcess.xml
        diagramResource:
          type: string
          description: "Contains a graphical representation of the process, null when\
            \ no diagram is available."
          example: http://localhost:8182/repository/deployments/2/resources/testProcess.png
        category:
          type: string
          example: Examples
        graphicalNotationDefined:
          type: boolean
          description: Indicates the process definition contains graphical information
            (BPMN DI).
        suspended:
          type: boolean
        startFormDefined:
          type: boolean
      example:
        diagramResource: http://localhost:8182/repository/deployments/2/resources/testProcess.png
        resource: http://localhost:8182/repository/deployments/2/resources/testProcess.xml
        graphicalNotationDefined: true
        deploymentUrl: http://localhost:8081/repository/deployments/2
        description: This is a process for testing purposes
        version: 1
        url: http://localhost:8182/repository/process-definitions/oneTaskProcess%3A1%3A4
        suspended: true
        deploymentId: "2"
        name: The One Task Process
        tenantId: "null"
        id: oneTaskProcess:1:4
        category: Examples
        startFormDefined: true
        key: oneTaskProcess
    ProcessInstanceCreateRequest:
      type: object
      properties:
        processDefinitionId:
          type: string
          example: oneTaskProcess:1:158
        processDefinitionKey:
          type: string
          example: oneTaskProcess
        message:
          type: string
          example: newOrderMessage
        name:
          type: string
          example: myProcessInstanceName
        businessKey:
          type: string
          example: myBusinessKey
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        transientVariables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        startFormVariables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        outcome:
          type: string
        tenantId:
          type: string
          example: tenant1
        overrideDefinitionTenantId:
          type: string
          example: overrideTenant1
        returnVariables:
          type: boolean
      description: "Only one of processDefinitionId, processDefinitionKey or message\
        \ can be used in the request body"
    ProcessInstanceQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        processInstanceId:
          type: string
        processInstanceIds:
          uniqueItems: true
          type: array
          items:
            type: string
        processInstanceName:
          type: string
        processInstanceNameLike:
          type: string
        processInstanceNameLikeIgnoreCase:
          type: string
        processBusinessKey:
          type: string
        processBusinessKeyLike:
          type: string
        processDefinitionId:
          type: string
        processDefinitionIds:
          uniqueItems: true
          type: array
          items:
            type: string
        processDefinitionKey:
          type: string
        processDefinitionKeys:
          uniqueItems: true
          type: array
          items:
            type: string
        processDefinitionName:
          type: string
        processDefinitionCategory:
          type: string
        processDefinitionVersion:
          type: integer
          format: int32
        processDefinitionEngineVersion:
          type: string
        deploymentId:
          type: string
        deploymentIdIn:
          type: array
          items:
            type: string
        superProcessInstanceId:
          type: string
        subProcessInstanceId:
          type: string
        excludeSubprocesses:
          type: boolean
        activeActivityId:
          type: string
        activeActivityIds:
          uniqueItems: true
          type: array
          items:
            type: string
        involvedUser:
          type: string
        startedBy:
          type: string
        startedBefore:
          type: string
          format: date-time
        startedAfter:
          type: string
          format: date-time
        suspended:
          type: boolean
        includeProcessVariables:
          type: boolean
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        callbackId:
          type: string
        callbackType:
          type: string
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
    ProcessInstanceResponse:
      type: object
      properties:
        id:
          type: string
          example: "187"
        url:
          type: string
          example: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
        name:
          type: string
          example: myProcessInstanceName
        businessKey:
          type: string
          example: myBusinessKey
        businessStatus:
          type: string
          example: myBusinessStatus
        suspended:
          type: boolean
        ended:
          type: boolean
        processDefinitionId:
          type: string
          example: oneTaskProcess:1:158
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
        processDefinitionName:
          type: string
          example: A process definition name
        processDefinitionDescription:
          type: string
          example: A process definition description
        activityId:
          type: string
          example: processTask
        startUserId:
          type: string
          example: johnDoe
        startTime:
          type: string
          example: 2018-04-17T10:17:43.902+0000
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
        callbackId:
          type: string
          example: "3"
        callbackType:
          type: string
          example: cmmn
        referenceId:
          type: string
          example: "123"
        referenceType:
          type: string
          example: event-to-bpmn-2.0-process
        propagatedStageInstanceId:
          type: string
          description: "The stage plan item instance id this process instance belongs\
            \ to or null, if it is not part of a case at all or is not a child element\
            \ of a stage"
        tenantId:
          type: string
          example: someTenantId
        completed:
          type: boolean
      example:
        processDefinitionDescription: A process definition description
        processDefinitionId: oneTaskProcess:1:158
        variables:
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        referenceType: event-to-bpmn-2.0-process
        businessStatus: myBusinessStatus
        processDefinitionName: A process definition name
        completed: true
        url: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
        suspended: true
        referenceId: "123"
        propagatedStageInstanceId: propagatedStageInstanceId
        activityId: processTask
        startUserId: johnDoe
        callbackId: "3"
        name: myProcessInstanceName
        businessKey: myBusinessKey
        ended: true
        tenantId: someTenantId
        startTime: 2018-04-17T10:17:43.902+0000
        id: "187"
        processDefinitionUrl: http://localhost:8182/repository/process-definitions/processOne%3A1%3A4
        callbackType: cmmn
    ProcessInstanceUpdateRequest:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          description: "Action to perform: Either activate or suspend"
          example: activate
        name:
          type: string
        businessKey:
          type: string
    ProcessInstanceVariableCollectionResource:
      type: object
    ProcessInstanceVariableResource:
      type: object
    PropertyRequestBody:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    QueryVariable:
      type: object
      properties:
        name:
          type: string
        operation:
          type: string
          enum:
          - equals
          - notEquals
          - equalsIgnoreCase
          - notEqualsIgnoreCase
          - like
          - likeIgnoreCase
          - greaterThan
          - greaterThanOrEquals
          - lessThan
          - lessThanOrEquals
        value:
          type: object
          properties: {}
        type:
          type: string
    Resource:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
      example:
        xmlColumnNumber: 7
        extensionElements:
          key:
          - null
          - null
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 8
    RestActionRequest:
      type: object
      properties:
        action:
          type: string
    RestEnumFormProperty:
      type: object
      properties:
        id:
          type: string
          example: normal
        name:
          type: string
          example: Normal bed
      example:
        name: Normal bed
        id: normal
    RestFormProperty:
      type: object
      properties:
        id:
          type: string
          example: room
        name:
          type: string
          example: Room
        type:
          type: string
          example: string
        value:
          type: string
        readable:
          type: boolean
        writable:
          type: boolean
        required:
          type: boolean
        datePattern:
          type: string
        enumValues:
          type: array
          items:
            $ref: '#/components/schemas/RestEnumFormProperty'
      example:
        readable: true
        datePattern: datePattern
        name: Room
        id: room
        type: string
        value: value
        required: true
        writable: true
        enumValues:
        - name: Normal bed
          id: normal
        - name: Normal bed
          id: normal
    RestIdentityLink:
      type: object
      properties:
        url:
          type: string
        user:
          type: string
          example: kermit
        group:
          type: string
          example: sales
        type:
          type: string
          example: candidate
      example:
        type: candidate
        user: kermit
        url: url
        group: sales
    RestVariable:
      type: object
      properties:
        name:
          type: string
          description: Name of the variable
          example: myVariable
        type:
          type: string
          description: Type of the variable.
          example: string
        value:
          type: object
          properties: {}
          description: Value of the variable.
          example: test
        valueUrl:
          type: string
          example: http://....
        scope:
          type: string
      example:
        scope: scope
        name: myVariable
        type: string
        valueUrl: http://....
        value: test
    Signal:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        scope:
          type: string
      example:
        xmlColumnNumber: 6
        extensionElements:
          key:
          - null
          - null
        scope: scope
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        xmlRowNumber: 5
    SignalEventReceivedRequest:
      type: object
      properties:
        signalName:
          type: string
          description: Name of the signal
        variables:
          type: array
          description: "Array of variables (in the general variables format) to use\
            \ as payload to pass along with the signal. Cannot be used in case async\
            \ is set to true, this will result in an error."
          items:
            $ref: '#/components/schemas/RestVariable'
        tenantId:
          type: string
          description: ID of the tenant that the signal event should be processed
            in
        async:
          type: boolean
          description: |-
            If true, handling of the signal will happen asynchronously. Return code will be 202 - Accepted to indicate the request is accepted but not yet executed. If false,
                                handling the signal will be done immediately and result (200 - OK) will only return after this completed successfully. Defaults to false if omitted.
    SubmitFormRequest:
      type: object
      properties:
        action:
          type: string
        processDefinitionId:
          type: string
        taskId:
          type: string
        businessKey:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/RestFormProperty'
    TableMetaData:
      type: object
      properties:
        tableName:
          type: string
        columnNames:
          type: array
          items:
            type: string
        columnTypes:
          type: array
          items:
            type: string
      example:
        columnNames:
        - columnNames
        - columnNames
        columnTypes:
        - columnTypes
        - columnTypes
        tableName: tableName
    TableResponse:
      type: object
      properties:
        name:
          type: string
          example: ACT_RU_VARIABLE
        url:
          type: string
          example: http://localhost:8080/flowable-rest/service/management/tables/ACT_RU_VARIABLE
        count:
          type: integer
          format: int64
          example: 4528
      example:
        name: ACT_RU_VARIABLE
        count: 4528
        url: http://localhost:8080/flowable-rest/service/management/tables/ACT_RU_VARIABLE
    TaskActionRequest:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          description: "Action to perform: Either complete, claim, delegate or resolve"
          example: complete
        assignee:
          type: string
          description: "If action is claim or delegate, you can use this parameter\
            \ to set the assignee associated "
          example: userWhoClaims/userToDelegateTo
        formDefinitionId:
          type: string
          description: Required when completing a task with a form
          example: "12345"
        outcome:
          type: string
          description: Optional outcome value when completing a task with a form
          example: accepted/rejected
        variables:
          type: array
          description: "If action is complete, you can use this parameter to set variables "
          items:
            $ref: '#/components/schemas/RestVariable'
        transientVariables:
          type: array
          description: "If action is complete, you can use this parameter to set transient\
            \ variables "
          items:
            $ref: '#/components/schemas/RestVariable'
    TaskAttachmentCollectionResource:
      type: object
    TaskQueryRequest:
      type: object
      properties:
        start:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
        order:
          type: string
        name:
          type: string
        nameLike:
          type: string
        description:
          type: string
        descriptionLike:
          type: string
        priority:
          type: integer
          format: int32
        minimumPriority:
          type: integer
          format: int32
        maximumPriority:
          type: integer
          format: int32
        assignee:
          type: string
        assigneeLike:
          type: string
        owner:
          type: string
        ownerLike:
          type: string
        unassigned:
          type: boolean
        delegationState:
          type: string
        candidateUser:
          type: string
        candidateGroup:
          type: string
        candidateGroupIn:
          type: array
          items:
            type: string
        ignoreAssignee:
          type: boolean
        involvedUser:
          type: string
        processInstanceId:
          type: string
        processInstanceIdWithChildren:
          type: string
        withoutProcessInstanceId:
          type: boolean
        processInstanceBusinessKey:
          type: string
        processInstanceBusinessKeyLike:
          type: string
        processDefinitionId:
          type: string
        processDefinitionKey:
          type: string
        processDefinitionName:
          type: string
        processDefinitionKeyLike:
          type: string
        processDefinitionNameLike:
          type: string
        executionId:
          type: string
        createdOn:
          type: string
          format: date-time
        createdBefore:
          type: string
          format: date-time
        createdAfter:
          type: string
          format: date-time
        excludeSubTasks:
          type: boolean
        taskDefinitionKey:
          type: string
        taskDefinitionKeyLike:
          type: string
        taskDefinitionKeys:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date-time
        dueBefore:
          type: string
          format: date-time
        dueAfter:
          type: string
          format: date-time
        withoutDueDate:
          type: boolean
        active:
          type: boolean
        includeTaskLocalVariables:
          type: boolean
        includeProcessVariables:
          type: boolean
        scopeDefinitionId:
          type: string
        scopeId:
          type: string
        withoutScopeId:
          type: boolean
        scopeType:
          type: string
        propagatedStageInstanceId:
          type: string
        tenantId:
          type: string
        tenantIdLike:
          type: string
        withoutTenantId:
          type: boolean
        candidateOrAssigned:
          type: string
        category:
          type: string
        categoryIn:
          type: array
          items:
            type: string
        categoryNotIn:
          type: array
          items:
            type: string
        withoutCategory:
          type: boolean
        taskVariables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
        processInstanceVariables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
    TaskRequest:
      type: object
      properties:
        owner:
          type: string
        assignee:
          type: string
        delegationState:
          type: string
        name:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        priority:
          type: integer
          format: int32
        parentTaskId:
          type: string
        category:
          type: string
        tenantId:
          type: string
        formKey:
          type: string
        ownerSet:
          type: boolean
        assigneeSet:
          type: boolean
        delegationStateSet:
          type: boolean
        nameSet:
          type: boolean
        descriptionSet:
          type: boolean
        duedateSet:
          type: boolean
        prioritySet:
          type: boolean
        parentTaskIdSet:
          type: boolean
        categorySet:
          type: boolean
        tenantIdSet:
          type: boolean
        formKeySet:
          type: boolean
    TaskResponse:
      type: object
      properties:
        id:
          type: string
          example: "8"
        url:
          type: string
          example: http://localhost:8182/runtime/tasks/8
        owner:
          type: string
          example: owner
        assignee:
          type: string
          example: kermit
        delegationState:
          type: string
          description: "Delegation-state of the task, can be null, \"pending\" or\
            \ \"resolved\"."
          example: pending
        name:
          type: string
          example: My task
        description:
          type: string
          example: Task description
        createTime:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        priority:
          type: integer
          format: int32
          example: 50
        suspended:
          type: boolean
        claimTime:
          type: string
          example: 2018-04-17T10:17:43.902+0000
        taskDefinitionKey:
          type: string
          example: theTask
        scopeDefinitionId:
          type: string
          example: "12"
        scopeId:
          type: string
          example: "14"
        subScopeId:
          type: string
          example: "15"
        scopeType:
          type: string
          example: cmmn
        propagatedStageInstanceId:
          type: string
          example: "16"
        tenantId:
          type: string
          example: someTenantId
        category:
          type: string
          example: ExampleCategory
        formKey:
          type: string
        parentTaskId:
          type: string
          example: "null"
        parentTaskUrl:
          type: string
          example: "null"
        executionId:
          type: string
          example: "5"
        executionUrl:
          type: string
          example: http://localhost:8182/runtime/executions/5
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/runtime/process-instances/5
        processDefinitionId:
          type: string
          example: oneTaskProcess%3A1%3A4
        processDefinitionUrl:
          type: string
          example: http://localhost:8182/runtime/process-definitions/oneTaskProcess%3A1%3A4
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RestVariable'
      example:
        executionUrl: http://localhost:8182/runtime/executions/5
        parentTaskId: "null"
        dueDate: 2000-01-23T04:56:07.000+00:00
        description: Task description
        delegationState: pending
        scopeType: cmmn
        id: "8"
        parentTaskUrl: "null"
        owner: owner
        processInstanceId: "5"
        processDefinitionId: oneTaskProcess%3A1%3A4
        scopeId: "14"
        variables:
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        - scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        formKey: formKey
        priority: 50
        url: http://localhost:8182/runtime/tasks/8
        suspended: true
        claimTime: 2018-04-17T10:17:43.902+0000
        propagatedStageInstanceId: "16"
        taskDefinitionKey: theTask
        executionId: "5"
        processInstanceUrl: http://localhost:8182/runtime/process-instances/5
        scopeDefinitionId: "12"
        subScopeId: "15"
        createTime: 2000-01-23T04:56:07.000+00:00
        name: My task
        tenantId: someTenantId
        assignee: kermit
        category: ExampleCategory
        processDefinitionUrl: http://localhost:8182/runtime/process-definitions/oneTaskProcess%3A1%3A4
    TaskVariableCollectionResource:
      type: object
    TaskVariableResource:
      type: object
    UserInfoRequest:
      type: object
      properties:
        key:
          type: string
          example: jobTitle
        value:
          type: string
          example: Muppet
    UserInfoResponse:
      type: object
      properties:
        key:
          type: string
          example: jobTitle
        value:
          type: string
          example: Muppet
        url:
          type: string
          example: http://localhost:8080/flowable-rest/service/identity/users/kermit/info/jobTitle
      example:
        value: Muppet
        key: jobTitle
        url: http://localhost:8080/flowable-rest/service/identity/users/kermit/info/jobTitle
    UserRequest:
      type: object
      properties:
        id:
          type: string
          example: testuser
        firstName:
          type: string
          example: Fred
        lastName:
          type: string
          example: Smith
        displayName:
          type: string
          example: Fred Smith
        url:
          type: string
          example: http://localhost:8182/identity/users/testuser
        email:
          type: string
          example: no-reply@flowable.org
        tenantId:
          type: string
          example: companyTenantId
        pictureUrl:
          type: string
          example: http://localhost:8182/identity/users/testuser/picture
        password:
          type: string
    UserResponse:
      type: object
      properties:
        id:
          type: string
          example: testuser
        firstName:
          type: string
          example: Fred
        lastName:
          type: string
          example: Smith
        displayName:
          type: string
          example: Fred Smith
        url:
          type: string
          example: http://localhost:8182/identity/users/testuser
        email:
          type: string
          example: no-reply@flowable.org
        tenantId:
          type: string
          example: companyTenantId
        pictureUrl:
          type: string
          example: http://localhost:8182/identity/users/testuser/picture
        password:
          type: string
      example:
        firstName: Fred
        lastName: Smith
        password: password
        displayName: Fred Smith
        pictureUrl: http://localhost:8182/identity/users/testuser/picture
        tenantId: companyTenantId
        id: testuser
        url: http://localhost:8182/identity/users/testuser
        email: no-reply@flowable.org
    ValuedDataObject:
      type: object
      properties:
        id:
          type: string
        xmlRowNumber:
          type: integer
          format: int32
        xmlColumnNumber:
          type: integer
          format: int32
        extensionElements:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionElement'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExtensionAttribute'
        name:
          type: string
        documentation:
          type: string
        executionListeners:
          type: array
          items:
            $ref: '#/components/schemas/FlowableListener'
        itemSubjectRef:
          $ref: '#/components/schemas/ItemDefinition'
        value:
          type: object
          properties: {}
          example: {}
        type:
          type: string
      example:
        xmlColumnNumber: 6
        executionListeners:
        - null
        - null
        extensionElements:
          key:
          - null
          - null
        documentation: documentation
        itemSubjectRef:
          xmlColumnNumber: 1
          extensionElements:
            key:
            - null
            - null
          attributes:
            key:
            - null
            - null
          id: id
          itemKind: itemKind
          structureRef: structureRef
          xmlRowNumber: 7
        name: name
        attributes:
          key:
          - null
          - null
        id: id
        type: type
        value: {}
        xmlRowNumber: 1
    VariableInstanceQueryRequest:
      type: object
      properties:
        excludeTaskVariables:
          type: boolean
        taskId:
          type: string
        executionId:
          type: string
        processInstanceId:
          type: string
        variableName:
          type: string
        variableNameLike:
          type: string
        excludeLocalVariables:
          type: boolean
        variables:
          type: array
          items:
            $ref: '#/components/schemas/QueryVariable'
    VariableInstanceResponse:
      type: object
      properties:
        id:
          type: string
          example: "14"
        processInstanceId:
          type: string
          example: "5"
        processInstanceUrl:
          type: string
          example: http://localhost:8182/history/historic-process-instances/5
        taskId:
          type: string
          example: "6"
        variable:
          $ref: '#/components/schemas/RestVariable'
      example:
        processInstanceId: "5"
        processInstanceUrl: http://localhost:8182/history/historic-process-instances/5
        variable:
          scope: scope
          name: myVariable
          type: string
          valueUrl: http://....
          value: test
        id: "14"
        taskId: "6"
    userId_picture_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          description: Picture to update
          format: binary
    repository_deployments_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    modelId_source_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    modelId_sourceextra_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    executionId_variables_body:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is updated. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable to be returned. When local, only task-local\
            \ variable value is returned. When global, only variable value from the\
            \ task’s parent execution-hierarchy are returned. When the parameter is\
            \ omitted, a local variable will be returned if it exists, otherwise a\
            \ global variable.."
          example: local
    executionId_variables_body_1:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is updated. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable to be returned. When local, only task-local\
            \ variable value is returned. When global, only variable value from the\
            \ task’s parent execution-hierarchy are returned. When the parameter is\
            \ omitted, a local variable will be returned if it exists, otherwise a\
            \ global variable.."
          example: local
    executionId_variables_body_2:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is updated. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable to be returned. When local, only task-local\
            \ variable value is returned. When global, only variable value from the\
            \ task’s parent execution-hierarchy are returned. When the parameter is\
            \ omitted, a local variable will be returned if it exists, otherwise a\
            \ global variable.."
          example: local
    executionId_variables_body_3:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is updated. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable to be returned. When local, only task-local\
            \ variable value is returned. When global, only variable value from the\
            \ task’s parent execution-hierarchy are returned. When the parameter is\
            \ omitted, a local variable will be returned if it exists, otherwise a\
            \ global variable.."
          example: local
    variables_variableName_body:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: intProcVar
        type:
          type: string
          example: integer
        scope:
          type: string
          example: global
    variables_variableName_body_1:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: intProcVar
        type:
          type: string
          example: integer
        scope:
          type: string
          example: global
    processInstanceId_variables_body:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: Simple content item
        type:
          type: string
          example: integer
    processInstanceId_variables_body_1:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: Simple content item
        type:
          type: string
          example: integer
    processInstanceId_variables_body_2:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: Simple content item
        type:
          type: string
          example: integer
    processInstanceId_variables_body_3:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: Simple content item
        type:
          type: string
          example: integer
    variables_variableName_body_2:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: Simple content item
        type:
          type: string
          example: integer
    variables_variableName_body_3:
      type: object
      properties:
        file:
          type: string
          format: binary
        name:
          type: string
          example: Simple content item
        type:
          type: string
          example: integer
    taskId_attachments_body:
      type: object
      properties:
        file:
          type: string
          description: Attachment file
          format: binary
        name:
          type: string
          description: Required name of the variable
          example: Simple attachment
        description:
          type: string
          description: "Description of the attachment, optional"
          example: Simple attachment description
        type:
          type: string
          description: "Type of attachment, optional. Supports any arbitrary string\
            \ or a valid HTTP content-type."
          example: simpleType
    taskId_attachments_body_1:
      type: object
      properties:
        file:
          type: string
          description: Attachment file
          format: binary
        name:
          type: string
          description: Required name of the variable
          example: Simple attachment
        description:
          type: string
          description: "Description of the attachment, optional"
          example: Simple attachment description
        type:
          type: string
          description: "Type of attachment, optional. Supports any arbitrary string\
            \ or a valid HTTP content-type."
          example: simpleType
    taskId_variables_body:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is created. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable that is created. If omitted, local is assumed."
          example: local
    taskId_variables_body_1:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is created. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable that is created. If omitted, local is assumed."
          example: local
    variables_variableName_body_4:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is updated. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable to be returned. When local, only task-local\
            \ variable value is returned. When global, only variable value from the\
            \ task’s parent execution-hierarchy are returned. When the parameter is\
            \ omitted, a local variable will be returned if it exists, otherwise a\
            \ global variable.."
          example: local
    variables_variableName_body_5:
      type: object
      properties:
        name:
          type: string
          description: Required name of the variable
          example: Simple content item
        type:
          type: string
          description: "Type of variable that is updated. If omitted, reverts to raw\
            \ JSON-value type (string, boolean, integer or double)"
          example: integer
        scope:
          type: string
          description: "Scope of variable to be returned. When local, only task-local\
            \ variable value is returned. When global, only variable value from the\
            \ task’s parent execution-hierarchy are returned. When the parameter is\
            \ omitted, a local variable will be returned if it exists, otherwise a\
            \ global variable.."
          example: local
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
